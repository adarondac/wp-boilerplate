!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$container	js/gf_field_filter.js	/^    var $container, operatorStrings, settings, filters, mode, imagesURL, isResizable, allowMultiple, height;$/;"	v
<	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
<	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
>	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
>	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
A0	includes/phpqrcode/phpqrcode.php	/^            $A0       =& $NN;$/;"	v
A0	includes/phpqrcode/phpqrcode.php	/^            $A0 =& $NN;$/;"	v
ALPHA_TO	includes/phpqrcode/phpqrcode.php	/^            $ALPHA_TO =& $this->alpha_to;$/;"	v
AddCaptchaField	js.php	/^function AddCaptchaField(){$/;"	f
BulkPrint	entry_list.php	/^            function BulkPrint(){$/;"	f
BulkResendNotifications	entry_list.php	/^            function BulkResendNotifications(){$/;"	f
Button	js/forms.js	/^function Button(){$/;"	c
CanFieldBeAdded	js.php	/^function CanFieldBeAdded(type){$/;"	f
ChangeColumns	entry_list.php	/^            function ChangeColumns(columns){$/;"	f
CheckChoiceConditionalLogicDependency	js/form_editor.js	/^function CheckChoiceConditionalLogicDependency(input) {$/;"	f
Choice	js/forms.js	/^function Choice(text, value, price){$/;"	c
CloseCustomChoicesPanel	js/form_editor.js	/^function CloseCustomChoicesPanel(speed){$/;"	f
CloseStatus	js/form_editor.js	/^function CloseStatus(){$/;"	f
ConditionalLogic	js/forms.js	/^function ConditionalLogic(){$/;"	c
ConditionalRule	js/forms.js	/^function ConditionalRule(){$/;"	c
Confirmation	js/forms.js	/^function Confirmation(){$/;"	c
CreateConditionalLogic	js/form_admin.js	/^function CreateConditionalLogic(objectType, obj){$/;"	f
CreateField	js.php	/^function CreateField(id, type){$/;"	f
CreateInputNames	js.php	/^function CreateInputNames(field){$/;"	f
CreateRouting	notification.php	/^        function CreateRouting(routings){$/;"	f
Currency	js/gravityforms.js	/^function Currency(currency){$/;"	c
CustomFieldExists	js/form_editor.js	/^function CustomFieldExists(name){$/;"	f
Date	js/jquery.json-1.3.js	/^    Date.prototype.toJSON = function(date)$/;"	c
DeleteCustomChoice	js.php	/^function DeleteCustomChoice(){$/;"	f
DeleteField	js.php	/^function DeleteField(fieldId){$/;"	f
DeleteFile	entry_detail.php	/^            function DeleteFile(leadId, fieldId, deleteButton){$/;"	f
DeleteForm	form_list.php	/^            function DeleteForm(form_id){$/;"	f
DeleteLead	entry_list.php	/^            function DeleteLead(lead_id){$/;"	f
DeleteRouting	notification.php	/^        function DeleteRouting(ruleIndex){$/;"	f
DisplayCustomMessage	js/form_editor.js	/^function DisplayCustomMessage(message){$/;"	f
DuplicateField	js.php	/^function DuplicateField(field, sourceFieldId){$/;"	f
DuplicateForm	form_list.php	/^            function DuplicateForm(form_id){$/;"	f
DuplicateTitleMessage	js.php	/^function DuplicateTitleMessage(){$/;"	f
EndAddField	js/form_editor.js	/^function EndAddField(field, fieldString){$/;"	f
EndChangeInputType	js/form_editor.js	/^function EndChangeInputType(fieldId, fieldType, fieldString){$/;"	f
EndDeleteField	js/form_editor.js	/^function EndDeleteField(fieldId){$/;"	f
EndDeleteFile	entry_detail.php	/^            function EndDeleteFile(fieldId, fileIndex){$/;"	f
EndDuplicateField	js/form_editor.js	/^function EndDuplicateField(field, fieldString, sourceFieldId) {$/;"	f
EndSelectExportForm	export.php	/^            function EndSelectExportForm(aryFields, filterSettings){$/;"	f
EndUpdateForm	js/form_editor.js	/^function EndUpdateForm(formId){$/;"	f
FCR	includes/phpqrcode/phpqrcode.php	/^            $FCR      =& $this->fcr;$/;"	v
Field	js/forms.js	/^function Field(id, type){$/;"	c
FieldClick	js/form_editor.js	/^function FieldClick(field){$/;"	f
Form	js/forms.js	/^function Form(){$/;"	c
FormatCurrency	js/form_admin.js	/^function FormatCurrency(element){$/;"	f
FrameFiller	includes/phpqrcode/phpqrcode.php	/^    class FrameFiller {$/;"	c
GENPOLY	includes/phpqrcode/phpqrcode.php	/^            $GENPOLY  =& $this->genpoly;$/;"	v
GFAPI	includes/api.php	/^class GFAPI {$/;"	c
GFAddOn	includes/addon/class-gf-addon.php	/^abstract class GFAddOn {$/;"	c
GFAddOnFeedsTable	includes/addon/class-gf-feed-addon.php	/^class GFAddOnFeedsTable extends WP_List_Table {$/;"	c
GFAddonLocking	includes/addon/class-gf-addon-locking.php	/^class GFAddonLocking extends GFLocking {$/;"	c
GFAsyncUpload	includes/upload.php	/^class GFAsyncUpload {$/;"	c
GFAutoUpgrade	includes/addon/class-gf-auto-upgrade.php	/^class GFAutoUpgrade{$/;"	c
GFCache	common.php	/^class GFCache {$/;"	c
GFCalc	js/gravityforms.js	/^var GFCalc = function(formId, formulaFields){$/;"	c
GFCategoryWalker	common.php	/^class GFCategoryWalker extends Walker {$/;"	c
GFCommon	common.php	/^class GFCommon{$/;"	c
GFConfirmationTable	form_settings.php	/^class GFConfirmationTable extends WP_List_Table {$/;"	c
GFDismissUpgrade	gravityforms.php	/^                function GFDismissUpgrade(){$/;"	f
GFEntryDetail	entry_detail.php	/^class GFEntryDetail{$/;"	c
GFEntryList	entry_list.php	/^class GFEntryList{$/;"	c
GFEntryLocking	includes/locking/locking.php	/^class GFEntryLocking extends GFLocking {$/;"	c
GFExport	export.php	/^class GFExport{$/;"	c
GFFeedAddOn	includes/addon/class-gf-feed-addon.php	/^abstract class GFFeedAddOn extends GFAddOn {$/;"	c
GFFormDetail	form_detail.php	/^class GFFormDetail{$/;"	c
GFFormDisplay	form_display.php	/^class GFFormDisplay{$/;"	c
GFFormList	form_list.php	/^class GFFormList{$/;"	c
GFFormLocking	includes/locking/locking.php	/^class GFFormLocking extends GFLocking {$/;"	c
GFFormSettings	form_settings.php	/^class GFFormSettings {$/;"	c
GFFormSettingsLocking	includes/locking/locking.php	/^class GFFormSettingsLocking extends GFLocking {$/;"	c
GFForms	gravityforms.php	/^class GFForms {$/;"	c
GFFormsModel	forms_model.php	/^class GFFormsModel {$/;"	c
GFHelp	help.php	/^class GFHelp {$/;"	c
GFLocking	includes/locking/class-gf-locking.php	/^abstract class GFLocking {$/;"	c
GFNotificationTable	notification.php	/^class GFNotificationTable extends WP_List_Table {$/;"	c
GFORMS_MAX_FIELD_LENGTH	forms_model.php	/^define("GFORMS_MAX_FIELD_LENGTH", 200);$/;"	d
GFPaymentAddOn	includes/addon/class-gf-payment-addon.php	/^abstract class GFPaymentAddOn extends GFFeedAddOn {$/;"	c
GFPaymentStatsTable	includes/addon/class-gf-payment-addon.php	/^class GFPaymentStatsTable extends WP_List_Table {$/;"	c
GFPluginSettingsLocking	includes/locking/locking.php	/^class GFPluginSettingsLocking extends GFLocking {$/;"	c
GFResults	includes/addon/class-gf-results.php	/^    class GFResults {$/;"	c
GFSelectColumns	select_columns.php	/^class GFSelectColumns{$/;"	c
GFSettings	settings.php	/^class GFSettings{$/;"	c
GFUpdate	update.php	/^class GFUpdate{$/;"	c
GFWEBAPI_API_BASE_URL	includes/webapi/webapi.php	/^    define('GFWEBAPI_API_BASE_URL', site_url(GFWEBAPI_SLUG));$/;"	d
GFWEBAPI_REQUIRE_SIGNATURE	includes/webapi/webapi.php	/^    define('GFWEBAPI_REQUIRE_SIGNATURE', true);$/;"	d
GFWEBAPI_ROUTE_VAR	includes/webapi/webapi.php	/^    define('GFWEBAPI_ROUTE_VAR', 'gfapi_route');$/;"	d
GFWEBAPI_SLUG	includes/webapi/webapi.php	/^    define('GFWEBAPI_SLUG', "gravityformsapi");$/;"	d
GFWebAPI	includes/webapi/webapi.php	/^    class GFWebAPI extends GFAddOn {$/;"	c
GFWidget	widget.php	/^class GFWidget extends WP_Widget {$/;"	c
GF_MIN_WP_VERSION	gravityforms.php	/^define("GF_MIN_WP_VERSION", '3.7');$/;"	d
GF_RemoveQuery	gravityforms.php	/^            function GF_RemoveQuery(key, query){$/;"	f
GF_ReplaceQuery	gravityforms.php	/^            function GF_ReplaceQuery(key, newValue){$/;"	f
GF_SUPPORTED_WP_VERSION	gravityforms.php	/^define("GF_SUPPORTED_WP_VERSION", version_compare(get_bloginfo("version"), GF_MIN_WP_VERSION, '>='));$/;"	d
GF_SwitchForm	gravityforms.php	/^            function GF_SwitchForm(id){$/;"	f
GRAVITY_MANAGER_PROXY_URL	gravityforms.php	/^    define('GRAVITY_MANAGER_PROXY_URL', 'http:\/\/proxy.gravityplugins.com');$/;"	d
GRAVITY_MANAGER_URL	gravityforms.php	/^    define("GRAVITY_MANAGER_URL", "http:\/\/www.gravityhelp.com\/wp-content\/plugins\/gravitymanager");$/;"	d
GetCaptchaUrl	js.php	/^function GetCaptchaUrl(pos){$/;"	f
GetConditionalObject	js/form_admin.js	/^function GetConditionalObject(objectType){$/;"	f
GetCurrentCurrency	js.php	/^function GetCurrentCurrency(){$/;"	f
GetEntryMetaFields	js/form_admin.js	/^function GetEntryMetaFields( selectedFieldId ) {$/;"	f
GetFieldById	notification.php	/^        function GetFieldById(fieldId){$/;"	f
GetFieldChoices	js.php	/^function GetFieldChoices(field){$/;"	f
GetFieldValues	notification.php	/^        function GetFieldValues(index, fieldId, selectedValue, labelMaxCharacters){$/;"	f
GetFieldsByType	js/form_editor.js	/^function GetFieldsByType(types){$/;"	f
GetFirstSelectableField	notification.php	/^        function GetFirstSelectableField(){$/;"	f
GetNextFieldId	js/form_editor.js	/^function GetNextFieldId(){$/;"	f
GetOperatorsForMeta	js/form_admin.js	/^function GetOperatorsForMeta(supportedOperators, key){$/;"	f
GetRoutingFields	notification.php	/^        function GetRoutingFields(index, selectedItem){$/;"	f
GetRoutingValues	notification.php	/^        function GetRoutingValues(index, fieldId, selectedValue){$/;"	f
GetRuleFields	js/form_admin.js	/^function GetRuleFields( objectType, ruleIndex, selectedFieldId ) {$/;"	f
GetRuleOperators	js/form_admin.js	/^function GetRuleOperators( objectType, i, fieldId, selectedOperator ) {$/;"	f
GetSelectableFields	notification.php	/^        function GetSelectableFields(selectedFieldId, labelMaxCharacters){$/;"	f
HTTP_RAW_POST_DATA	includes/webapi/webapi.php	/^                $HTTP_RAW_POST_DATA = file_get_contents('php:\/\/input');$/;"	v
HandleUnsavedChanges	form_settings.php	/^        function HandleUnsavedChanges(elemId) {$/;"	f
HasConditionalLogicDependency	js/form_editor.js	/^function HasConditionalLogicDependency(fieldId, value) {$/;"	f
HasConditionalLogicDependencyLegwork	js/form_editor.js	/^function HasConditionalLogicDependencyLegwork(fieldId, value) {$/;"	f
HasCustomField	js/form_editor.js	/^function HasCustomField(){$/;"	f
HasDependentRule	js/form_editor.js	/^function HasDependentRule(rules, fieldId, value) {$/;"	f
HasPageBreak	js/form_editor.js	/^function HasPageBreak(){$/;"	f
HasPostContentField	js/form_editor.js	/^function HasPostContentField(){$/;"	f
HasPostTitleField	js/form_editor.js	/^function HasPostTitleField(){$/;"	f
HideSettingRow	form_settings.php	/^        function HideSettingRow(elemId) {$/;"	f
HideSettings	js.php	/^function HideSettings(element_id){$/;"	f
INDEX_OF	includes/phpqrcode/phpqrcode.php	/^            $INDEX_OF =& $this->index_of;$/;"	v
IPRIM	includes/phpqrcode/phpqrcode.php	/^            $IPRIM    =& $this->iprim;$/;"	v
IS_ADMIN	gravityforms.php	/^    define("IS_ADMIN",  is_admin());$/;"	d
InitBulkCustomPanel	js/form_editor.js	/^function InitBulkCustomPanel(){$/;"	f
InitPaginationOptions	js.php	/^function InitPaginationOptions(isInit){$/;"	f
InitializeFields	js/form_editor.js	/^function InitializeFields(){$/;"	f
InitializeForm	js/form_editor.js	/^function InitializeForm(form){$/;"	f
InitializeFormConditionalLogic	js.php	/^function InitializeFormConditionalLogic(){$/;"	f
Input	js/forms.js	/^function Input(id, label){$/;"	c
InsertBulkChoices	js/form_editor.js	/^function InsertBulkChoices(choices){$/;"	f
InsertForm	gravityforms.php	/^            function InsertForm(){$/;"	f
InsertPostContentVariable	form_detail.php	/^            function InsertPostContentVariable(element_id, callback){$/;"	f
InsertPostImageVariable	form_detail.php	/^            function InsertPostImageVariable(element_id, callback){$/;"	f
InsertRouting	notification.php	/^        function InsertRouting(index){$/;"	f
IsConditionalLogicField	js/form_admin.js	/^function IsConditionalLogicField(field){$/;"	f
IsEmpty	js/form_editor.js	/^function IsEmpty(array){$/;"	f
IsEntryMeta	js/form_admin.js	/^function IsEntryMeta(key){$/;"	f
IsNotificationConditionalLogicField	notification.php	/^        function IsNotificationConditionalLogicField(field){$/;"	f
IsStandardMask	js/form_editor.js	/^function IsStandardMask(value){$/;"	f
IsValidFormula	form_detail.php	/^            function IsValidFormula(formula){$/;"	f
LoadBulkChoices	js/form_editor.js	/^function LoadBulkChoices(field){$/;"	f
LoadCustomChoices	js/form_editor.js	/^function LoadCustomChoices(){$/;"	f
LoadCustomChoicesPanel	js/form_editor.js	/^function LoadCustomChoicesPanel(isNew, speed){$/;"	f
LoadFieldChoices	js/form_editor.js	/^function LoadFieldChoices(field){$/;"	f
LoadFieldConditionalLogic	js.php	/^function LoadFieldConditionalLogic(isEnabled, objectType){$/;"	f
LoadFieldSettings	js/form_editor.js	/^function LoadFieldSettings(){$/;"	f
LoadMessageVariables	js.php	/^function LoadMessageVariables(){$/;"	f
MAX_STRUCTURED_SYMBOLS	includes/phpqrcode/phpqrcode.php	/^    define('MAX_STRUCTURED_SYMBOLS', 16);$/;"	d
MM	includes/phpqrcode/phpqrcode.php	/^            $MM       =& $this->mm;$/;"	v
N1	includes/phpqrcode/phpqrcode.php	/^	define('N1', 3);$/;"	d
N2	includes/phpqrcode/phpqrcode.php	/^	define('N2', 3);$/;"	d
N3	includes/phpqrcode/phpqrcode.php	/^	define('N3', 40);$/;"	d
N4	includes/phpqrcode/phpqrcode.php	/^	define('N4', 10);$/;"	d
NN	includes/phpqrcode/phpqrcode.php	/^            $NN       =& $this->nn;$/;"	v
NN	includes/phpqrcode/phpqrcode.php	/^            $NN =& $rs->nn;$/;"	v
NROOTS	includes/phpqrcode/phpqrcode.php	/^            $NROOTS   =& $this->nroots;$/;"	v
ObjectHasConditionalLogicDependency	js/form_editor.js	/^function ObjectHasConditionalLogicDependency(object, fieldId, value) {$/;"	f
PAD	includes/phpqrcode/phpqrcode.php	/^            $PAD      =& $this->pad;$/;"	v
PRIM	includes/phpqrcode/phpqrcode.php	/^            $PRIM     =& $this->prim;$/;"	v
PopulateContentTemplate	js/form_editor.js	/^function PopulateContentTemplate(fieldName){$/;"	f
QRCAP_EC	includes/phpqrcode/phpqrcode.php	/^    define('QRCAP_EC',           3);$/;"	d
QRCAP_REMINDER	includes/phpqrcode/phpqrcode.php	/^    define('QRCAP_REMINDER',     2);$/;"	d
QRCAP_WIDTH	includes/phpqrcode/phpqrcode.php	/^    define('QRCAP_WIDTH',        0);$/;"	d
QRCAP_WORDS	includes/phpqrcode/phpqrcode.php	/^    define('QRCAP_WORDS',        1);$/;"	d
QRSPEC_VERSION_MAX	includes/phpqrcode/phpqrcode.php	/^    define('QRSPEC_VERSION_MAX', 40);$/;"	d
QRSPEC_WIDTH_MAX	includes/phpqrcode/phpqrcode.php	/^    define('QRSPEC_WIDTH_MAX',   177);$/;"	d
QR_CACHEABLE	includes/phpqrcode/phpqrcode.php	/^    define('QR_CACHEABLE', false);       \/\/ use cache - more disk reads but less CPU power, masks and format templates are stored there$/;"	d
QR_CACHE_DIR	includes/phpqrcode/phpqrcode.php	/^    define('QR_CACHE_DIR', false);       \/\/ used when QR_CACHEABLE === true$/;"	d
QR_DEFAULT_MASK	includes/phpqrcode/phpqrcode.php	/^    define('QR_DEFAULT_MASK', 2);                                                               \/\/ when QR_FIND_BEST_MASK === false$/;"	d
QR_ECLEVEL_H	includes/phpqrcode/phpqrcode.php	/^	define('QR_ECLEVEL_H', 3);$/;"	d
QR_ECLEVEL_L	includes/phpqrcode/phpqrcode.php	/^	define('QR_ECLEVEL_L', 0);$/;"	d
QR_ECLEVEL_M	includes/phpqrcode/phpqrcode.php	/^	define('QR_ECLEVEL_M', 1);$/;"	d
QR_ECLEVEL_Q	includes/phpqrcode/phpqrcode.php	/^	define('QR_ECLEVEL_Q', 2);$/;"	d
QR_FIND_BEST_MASK	includes/phpqrcode/phpqrcode.php	/^    define('QR_FIND_BEST_MASK', true);                                                          \/\/ if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code$/;"	d
QR_FIND_FROM_RANDOM	includes/phpqrcode/phpqrcode.php	/^    define('QR_FIND_FROM_RANDOM', 2);                                                       \/\/ if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly$/;"	d
QR_FORMAT_PNG	includes/phpqrcode/phpqrcode.php	/^	define('QR_FORMAT_PNG',  1);$/;"	d
QR_FORMAT_TEXT	includes/phpqrcode/phpqrcode.php	/^	define('QR_FORMAT_TEXT', 0);$/;"	d
QR_IMAGE	includes/phpqrcode/phpqrcode.php	/^    define('QR_IMAGE', true);$/;"	d
QR_LOG_DIR	includes/phpqrcode/phpqrcode.php	/^    define('QR_LOG_DIR', false);         \/\/ default error logs dir$/;"	d
QR_MODE_8	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_8', 2);$/;"	d
QR_MODE_AN	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_AN', 1);$/;"	d
QR_MODE_KANJI	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_KANJI', 3);$/;"	d
QR_MODE_NUL	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_NUL', -1);$/;"	d
QR_MODE_NUM	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_NUM', 0);$/;"	d
QR_MODE_STRUCTURE	includes/phpqrcode/phpqrcode.php	/^	define('QR_MODE_STRUCTURE', 4);$/;"	d
QR_PNG_MAXIMUM_SIZE	includes/phpqrcode/phpqrcode.php	/^    define('QR_PNG_MAXIMUM_SIZE',  1024);                                                       \/\/ maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images$/;"	d
QRbitstream	includes/phpqrcode/phpqrcode.php	/^    class QRbitstream {$/;"	c
QRcode	includes/phpqrcode/phpqrcode.php	/^    class QRcode {$/;"	c
QRencode	includes/phpqrcode/phpqrcode.php	/^    class QRencode {$/;"	c
QRimage	includes/phpqrcode/phpqrcode.php	/^    class QRimage {$/;"	c
QRinput	includes/phpqrcode/phpqrcode.php	/^    class QRinput {$/;"	c
QRinputItem	includes/phpqrcode/phpqrcode.php	/^    class QRinputItem {$/;"	c
QRmask	includes/phpqrcode/phpqrcode.php	/^	class QRmask {$/;"	c
QRrawcode	includes/phpqrcode/phpqrcode.php	/^    class QRrawcode {$/;"	c
QRrs	includes/phpqrcode/phpqrcode.php	/^    class QRrs {$/;"	c
QRrsItem	includes/phpqrcode/phpqrcode.php	/^    class QRrsItem {$/;"	c
QRrsblock	includes/phpqrcode/phpqrcode.php	/^    class QRrsblock {$/;"	c
QRspec	includes/phpqrcode/phpqrcode.php	/^    class QRspec {$/;"	c
QRsplit	includes/phpqrcode/phpqrcode.php	/^    class QRsplit {$/;"	c
QRtools	includes/phpqrcode/phpqrcode.php	/^    class QRtools {$/;"	c
RECAPTCHA_API_SECURE_SERVER	recaptchalib.php	/^define("RECAPTCHA_API_SECURE_SERVER", "https:\/\/www.google.com\/recaptcha\/api");$/;"	d
RECAPTCHA_API_SERVER	recaptchalib.php	/^define("RECAPTCHA_API_SERVER", "http:\/\/www.google.com\/recaptcha\/api");$/;"	d
RECAPTCHA_VERIFY_SERVER	recaptchalib.php	/^define("RECAPTCHA_VERIFY_SERVER", "www.google.com");$/;"	d
RGCurrency	currency.php	/^class RGCurrency{$/;"	c
RGForms	gravityforms.php	/^class RGForms extends GFForms { }$/;"	c
RGFormsModel	forms_model.php	/^class RGFormsModel extends GFFormsModel { }$/;"	c
RGXML	xml.php	/^class RGXML{$/;"	c
RG_CURRENT_PAGE	gravityforms.php	/^    define("RG_CURRENT_PAGE", basename($_SERVER['PHP_SELF']));$/;"	d
RG_CURRENT_VIEW	gravityforms.php	/^define("RG_CURRENT_VIEW", RGForms::get("view"));$/;"	d
ReCaptchaResponse	recaptchalib.php	/^class ReCaptchaResponse {$/;"	c
ResendNotifications	entry_detail.php	/^            function ResendNotifications() {$/;"	f
RestoreForm	form_list.php	/^            function RestoreForm(form_id){$/;"	f
STRUCTURE_HEADER_BITS	includes/phpqrcode/phpqrcode.php	/^    define('STRUCTURE_HEADER_BITS',  20);$/;"	d
SaveCustomChoices	js.php	/^function SaveCustomChoices(){$/;"	f
SaveForm	js.php	/^function SaveForm(isNew){$/;"	f
SaveFormSettings	form_settings.php	/^        function SaveFormSettings() {$/;"	f
SaveJSMeta	notification.php	/^        function SaveJSMeta(){$/;"	f
Search	entry_list.php	/^            function Search(sort_field_id, sort_direction, form_id, search, star, read, filter, field_id, operator){$/;"	f
SelectColumns	select_columns.php	/^                    function SelectColumns(){$/;"	f
SelectCustomChoice	js/form_editor.js	/^function SelectCustomChoice(name){$/;"	f
SelectExportForm	export.php	/^            function SelectExportForm(formId){$/;"	f
SelectParser	js/chosen.jquery.min.js	/^!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":\/[\\&\\<\\>\\"\\'\\`]\/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=\/&(?!\\w+;)|[\\<\\>\\"\\'\\`]\/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1\/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(\/[-[\\]{}()*+?.,\\\\^$|#\\s]\/g,"\\\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"<\/em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(\/\\[|\\]\/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:\/iP(od|hone)\/i.test(window.navigator.userAgent)?!1:\/Android\/i.test(window.navigator.userAgent)&&\/Mobile\/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(\/[^\\w]\/g,"_")+"_chosen"),this.container=a("<div \/>",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" \/><\/li><\/ul><div class="chosen-drop"><ul class="chosen-results"><\/ul><\/div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'<\/span><div><b><\/b><\/div><\/a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" \/><\/div><ul class="chosen-results"><\/ul><\/div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li \/>",{"class":"search-choice"}).html("<span>"+b.html+"<\/span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a \/>",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"><\/abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div\/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span><\/span>"<\/li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div \/>",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);/;"	m
SelectPredefinedChoice	js/form_editor.js	/^function SelectPredefinedChoice(name){$/;"	f
SetAddressProperties	js/form_editor.js	/^function SetAddressProperties(){$/;"	f
SetAddressType	js/form_editor.js	/^function SetAddressType(isInit){$/;"	f
SetBasePrice	js/form_editor.js	/^function SetBasePrice(number){$/;"	f
SetButtonConditionalLogic	form_settings.php	/^        function SetButtonConditionalLogic(isChecked){$/;"	f
SetCategoryInitialItem	js/form_editor.js	/^function SetCategoryInitialItem(){$/;"	f
SetConditionalLogic	notification.php	/^        function SetConditionalLogic(isChecked){$/;"	f
SetCustomFieldTemplate	js/form_editor.js	/^function SetCustomFieldTemplate(){$/;"	f
SetDefaultValues	js.php	/^function SetDefaultValues(field){$/;"	f
SetDisableQuantity	js/form_editor.js	/^function SetDisableQuantity(isChecked){$/;"	f
SetFieldChoice	js/form_editor.js	/^function SetFieldChoice(inputType, index){$/;"	f
SetFieldColumns	js/form_editor.js	/^function SetFieldColumns(){$/;"	f
SetFieldPhoneFormat	js.php	/^function SetFieldPhoneFormat(phoneFormat){$/;"	f
SetNextButtonConditionalLogic	js/form_editor.js	/^function SetNextButtonConditionalLogic(isChecked){$/;"	f
SetPageButton	js/form_editor.js	/^function SetPageButton(button_name){$/;"	f
SetProductField	js.php	/^function SetProductField(field){$/;"	f
SetRouting	notification.php	/^        function SetRouting(ruleIndex){$/;"	f
SetRoutingValueDropDown	notification.php	/^        function SetRoutingValueDropDown(element){$/;"	f
ShowAdvancedFormSettings	form_settings.php	/^        function ShowAdvancedFormSettings() {$/;"	f
ShowSettingRow	form_settings.php	/^        function ShowSettingRow(elemId) {$/;"	f
ShowSettings	js.php	/^function ShowSettings(element_id){$/;"	f
SortFields	js/form_editor.js	/^function SortFields(){$/;"	f
StartAddField	js.php	/^function StartAddField(type){$/;"	f
StartChangeCaptchaType	js/form_editor.js	/^function StartChangeCaptchaType(captchaType){$/;"	f
StartChangeDonationType	js/form_editor.js	/^function StartChangeDonationType(type){$/;"	f
StartChangeInputType	js.php	/^function StartChangeInputType(type, field){$/;"	f
StartChangeNameFormat	js/form_editor.js	/^function StartChangeNameFormat(format){$/;"	f
StartChangePostCategoryType	js/form_editor.js	/^function StartChangePostCategoryType(type){$/;"	f
StartChangeProductType	js/form_editor.js	/^function StartChangeProductType(type){$/;"	f
StartChangeShippingType	js/form_editor.js	/^function StartChangeShippingType(type){$/;"	f
StartDeleteField	js/form_editor.js	/^function StartDeleteField(element){$/;"	f
StartDuplicateField	js/form_editor.js	/^function StartDuplicateField(element) {$/;"	f
String	js/gf_field_filter.js	/^    String.prototype.format = function () {$/;"	c
String.prototype.format	entry_list.php	/^            String.prototype.format = function() {$/;"	j
ToggleActive	form_list.php	/^            function ToggleActive(img, form_id){$/;"	f
ToggleActive	form_settings.php	/^            function ToggleActive(img, confirmation_id){$/;"	f
ToggleActive	notification.php	/^        function ToggleActive(img, notification_id){$/;"	f
ToggleAutoresponder	js/form_editor.js	/^function ToggleAutoresponder(){$/;"	f
ToggleButton	form_settings.php	/^        function ToggleButton(){$/;"	f
ToggleCategory	js/form_editor.js	/^function ToggleCategory(isInit){$/;"	f
ToggleChoiceValue	js/form_editor.js	/^function ToggleChoiceValue(isInit){$/;"	f
ToggleColumns	js.php	/^function ToggleColumns(isInit){$/;"	f
ToggleConditionalLogic	js/form_admin.js	/^function ToggleConditionalLogic(isInit, objectType){$/;"	f
ToggleCustomField	js/form_editor.js	/^function ToggleCustomField(isInit){$/;"	f
ToggleCustomFieldTemplate	js/form_editor.js	/^function ToggleCustomFieldTemplate(isInit){$/;"	f
ToggleFormSettings	gravityforms.php	/^            function ToggleFormSettings(){$/;"	f
ToggleInputMask	js/form_editor.js	/^function ToggleInputMask(isInit){$/;"	f
ToggleInputMaskOptions	js/form_editor.js	/^function ToggleInputMaskOptions(isInit){$/;"	f
ToggleInputName	js/form_editor.js	/^function ToggleInputName(isInit){$/;"	f
ToggleLimitEntry	form_settings.php	/^        function ToggleLimitEntry(){$/;"	f
ToggleMultiFile	js/form_editor.js	/^function ToggleMultiFile(isInit){$/;"	f
TogglePageBreakSettings	js/form_editor.js	/^function TogglePageBreakSettings(){$/;"	f
TogglePageButton	js/form_editor.js	/^function TogglePageButton(button_name, isInit){$/;"	f
TogglePasswordStrength	js/form_editor.js	/^function TogglePasswordStrength(isInit){$/;"	f
TogglePercentageConfirmationText	js/form_editor.js	/^function TogglePercentageConfirmationText(isInit){$/;"	f
TogglePercentageStyle	js/form_editor.js	/^function TogglePercentageStyle(isInit){$/;"	f
TogglePostCategoryInitialItem	js.php	/^function TogglePostCategoryInitialItem(isInit){$/;"	f
TogglePostContentTemplate	js/form_editor.js	/^function TogglePostContentTemplate(isInit){$/;"	f
TogglePostTitleTemplate	js/form_editor.js	/^function TogglePostTitleTemplate(isInit){$/;"	f
ToggleRead	entry_list.php	/^            function ToggleRead(lead_id, filter){$/;"	f
ToggleRequireLogin	form_settings.php	/^        function ToggleRequireLogin(){$/;"	f
ToggleSchedule	form_settings.php	/^        function ToggleSchedule(){$/;"	f
ToggleShowEmptyFields	entry_detail.php	/^            function ToggleShowEmptyFields(){$/;"	f
ToggleStar	entry_list.php	/^            function ToggleStar(img, lead_id, filter){$/;"	f
TrashForm	form_list.php	/^            function TrashForm(form_id){$/;"	f
TruncateMiddle	notification.php	/^        function TruncateMiddle(text, maxCharacters){$/;"	f
UpdateAddressFields	js/form_editor.js	/^function UpdateAddressFields(){$/;"	f
UpdateCount	entry_list.php	/^            function UpdateCount(element_id, change){$/;"	f
UpdateCount	form_list.php	/^            function UpdateCount(element_id, change){$/;"	f
UpdateDescriptionPlacement	form_settings.php	/^        function UpdateDescriptionPlacement(){$/;"	f
UpdateFormObject	js/form_editor.js	/^function UpdateFormObject(){$/;"	f
UpdateLabelPlacement	form_settings.php	/^        function UpdateLabelPlacement(){$/;"	f
UpdateLeadProperty	entry_list.php	/^            function UpdateLeadProperty(lead_id, name, value){$/;"	f
UpdatePagingCounts	entry_list.php	/^            function UpdatePagingCounts(change){$/;"	f
Utils	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	p	class:t.Placeholders
ValidateForm	js.php	/^function ValidateForm(){$/;"	f
__construct	currency.php	/^    public function __construct($currency){$/;"	f
__construct	form_settings.php	/^    function __construct($form) {$/;"	f
__construct	includes/addon/class-gf-addon-locking.php	/^    public function __construct($config, $addon) {$/;"	f
__construct	includes/addon/class-gf-addon.php	/^    function __construct() {$/;"	f
__construct	includes/addon/class-gf-auto-upgrade.php	/^    public function __construct($slug, $version, $min_gravityforms_version, $title, $full_path, $path, $url, $is_gravityforms_supported){$/;"	f
__construct	includes/addon/class-gf-feed-addon.php	/^    function __construct($feeds, $slug, $columns = array(), $bulk_actions, $action_links, $column_value_callback, $no_items_callback, $message_callback) {$/;"	f
__construct	includes/addon/class-gf-payment-addon.php	/^    function __construct($columns, $rows, $total_count, $page_size) {$/;"	f
__construct	includes/addon/class-gf-results.php	/^        public function __construct($slug, $config) {$/;"	f
__construct	includes/locking/class-gf-locking.php	/^    public function __construct($object_type, $redirect_url, $edit_url = "", $capabilities = array()) {$/;"	f
__construct	includes/locking/locking.php	/^    public function __construct() {$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^		public function __construct()$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct($dataStr, $input, $modeHint)$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs)$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct($mode, $size, $data, $bstream = null)$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct($version = 0, $level = QR_ECLEVEL_L)$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct($width, &$frame)$/;"	f
__construct	includes/phpqrcode/phpqrcode.php	/^        public function __construct(QRinput $input)$/;"	f
__construct	includes/webapi/webapi.php	/^        public function __construct() {$/;"	f
__construct	notification.php	/^    function __construct($form) {$/;"	f
__construct	widget.php	/^    function __construct() {$/;"	f
__construct	xml.php	/^    public function __construct($options=array()){$/;"	f
__gf_timeout_handle	js/conditional_logic.js	/^var __gf_timeout_handle;$/;"	v
__gf_tooltips	tooltips.php	/^    $__gf_tooltips = apply_filters("gform_tooltips", $__gf_tooltips);$/;"	v
__gf_tooltips	tooltips.php	/^$__gf_tooltips = array($/;"	v
__inlineId	js/thickbox.js	/^var __inlineId = "";$/;"	v
_action_links	includes/addon/class-gf-feed-addon.php	/^        $this->_action_links                = $action_links;$/;"	v
_action_links	includes/addon/class-gf-feed-addon.php	/^    private $_action_links;$/;"	v
_addon	includes/addon/class-gf-addon-locking.php	/^        $this->_addon = $addon;$/;"	v
_addon	includes/addon/class-gf-addon-locking.php	/^    protected $_addon;$/;"	v
_bulk_actions	includes/addon/class-gf-feed-addon.php	/^        $this->_bulk_actions                = $bulk_actions;$/;"	v
_bulk_actions	includes/addon/class-gf-feed-addon.php	/^    private $_bulk_actions;$/;"	v
_cache	common.php	/^    private static $_cache = array();$/;"	v
_callbacks	includes/addon/class-gf-results.php	/^            $this->_callbacks    = isset($config["callbacks"]) ? $config["callbacks"] : array();$/;"	v
_callbacks	includes/addon/class-gf-results.php	/^        protected $_callbacks;$/;"	v
_can_enqueue_script	includes/addon/class-gf-addon.php	/^    private function _can_enqueue_script($enqueue_conditions, $form, $is_ajax){$/;"	f
_capabilities	includes/addon/class-gf-addon.php	/^    protected $_capabilities = array();$/;"	v
_capabilities	includes/addon/class-gf-results.php	/^            $this->_capabilities = isset($config["capabilities"]) ? $config["capabilities"] : array();$/;"	v
_capabilities	includes/addon/class-gf-results.php	/^        protected $_capabilities;$/;"	v
_capabilities	includes/locking/class-gf-locking.php	/^        $this->_capabilities = $capabilities;$/;"	v
_capabilities	includes/locking/class-gf-locking.php	/^    private $_capabilities;$/;"	v
_capabilities	includes/webapi/webapi.php	/^        protected $_capabilities = array("gravityforms_api", "gravityforms_api_settings");$/;"	v
_capabilities_app_menu	includes/addon/class-gf-addon.php	/^    protected $_capabilities_app_menu = array();$/;"	v
_capabilities_app_settings	includes/addon/class-gf-addon.php	/^    protected $_capabilities_app_settings = array();$/;"	v
_capabilities_form_settings	includes/addon/class-gf-addon.php	/^    protected $_capabilities_form_settings = array();$/;"	v
_capabilities_plugin_page	includes/addon/class-gf-addon.php	/^    protected $_capabilities_plugin_page = array();$/;"	v
_capabilities_settings_page	includes/addon/class-gf-addon.php	/^    protected $_capabilities_settings_page = array();$/;"	v
_capabilities_settings_page	includes/webapi/webapi.php	/^        protected $_capabilities_settings_page = "gravityforms_api_settings";$/;"	v
_capabilities_uninstall	includes/addon/class-gf-addon.php	/^    protected $_capabilities_uninstall = array();$/;"	v
_capabilities_uninstall	includes/webapi/webapi.php	/^        protected $_capabilities_uninstall = "gravityforms_webapi_uninstall";$/;"	v
_cat_row	form_detail.php	/^    private static function _cat_row( $category, $level, &$output, $name_override = false ) {$/;"	f
_cat_rows	form_detail.php	/^    private static function _cat_rows( $categories, &$count, &$output, $parent = 0, $level = 0, $page = 1, $per_page = 9999999 ) {$/;"	f
_column_headers	form_settings.php	/^        $this->_column_headers = array($/;"	v
_column_headers	includes/addon/class-gf-feed-addon.php	/^        $this->_column_headers = array($/;"	v
_column_headers	includes/addon/class-gf-payment-addon.php	/^        $this->_column_headers = array($/;"	v
_column_headers	notification.php	/^        $this->_column_headers = array($/;"	v
_column_value_callback	includes/addon/class-gf-feed-addon.php	/^        $this->_column_value_callback       = $column_value_callback;$/;"	v
_column_value_callback	includes/addon/class-gf-feed-addon.php	/^    private $_column_value_callback = array();$/;"	v
_columns	includes/addon/class-gf-feed-addon.php	/^        $this->_columns                     = $columns;$/;"	v
_columns	includes/addon/class-gf-feed-addon.php	/^    private $_columns;$/;"	v
_confirmations	forms_model.php	/^    private static $_confirmations = array();$/;"	v
_current_feed_id	includes/addon/class-gf-feed-addon.php	/^		$this->_current_feed_id = $feed_id;$/;"	v
_current_feed_id	includes/addon/class-gf-feed-addon.php	/^	private $_current_feed_id = false;$/;"	v
_current_forms	forms_model.php	/^    private static $_current_forms = array();$/;"	v
_current_lead	forms_model.php	/^    private static $_current_lead = null;$/;"	v
_edit_url	includes/locking/class-gf-locking.php	/^                $this->_edit_url  = $edit_url;$/;"	v
_edit_url	includes/locking/class-gf-locking.php	/^    private $_edit_url;$/;"	v
_enable_rg_autoupgrade	includes/addon/class-gf-addon.php	/^    protected $_enable_rg_autoupgrade = false;$/;"	v
_enabled	includes/webapi/webapi.php	/^            $this->_enabled     = rgar($settings, "enabled");$/;"	v
_enabled	includes/webapi/webapi.php	/^        private $_enabled;$/;"	v
_entry_meta	forms_model.php	/^                $_entry_meta = array();$/;"	v
_feed_settings_fields	includes/addon/class-gf-feed-addon.php	/^        $this->_feed_settings_fields = $this->add_default_feed_settings_fields_props( $this->feed_settings_fields() );$/;"	v
_feed_settings_fields	includes/addon/class-gf-feed-addon.php	/^    private $_feed_settings_fields = array();$/;"	v
_feed_version	includes/addon/class-gf-feed-addon.php	/^    private $_feed_version = '0.3';$/;"	v
_feeds	includes/addon/class-gf-feed-addon.php	/^        $this->_feeds                       = $feeds;$/;"	v
_feeds	includes/addon/class-gf-feed-addon.php	/^    private $_feeds;$/;"	v
_field_condition_matches	includes/addon/class-gf-addon.php	/^    private function _field_condition_matches($field_types, $form){$/;"	f
_full_path	includes/addon/class-gf-addon.php	/^    protected $_full_path;$/;"	v
_full_path	includes/addon/class-gf-auto-upgrade.php	/^        $this->_full_path = $full_path;$/;"	v
_full_path	includes/addon/class-gf-auto-upgrade.php	/^    protected $_full_path;$/;"	v
_full_path	includes/webapi/webapi.php	/^        protected $_full_path = __FILE__;$/;"	v
_gaddon_posted_settings	includes/addon/class-gf-addon.php	/^        $_gaddon_posted_settings = array();$/;"	v
_get_base_path	includes/addon/class-gf-addon.php	/^    private static function _get_base_path() {$/;"	f
_get_base_url	includes/addon/class-gf-addon.php	/^    private static function _get_base_url() {$/;"	f
_get_term_hierarchy	form_detail.php	/^    private static function _get_term_hierarchy($taxonomy) {$/;"	f
_gf_state	form_display.php	/^            $_gf_state = json_decode($state[0], true);$/;"	v
_gf_uploaded_files	forms_model.php	/^            $_gf_uploaded_files = array();$/;"	v
_gform_lead_meta	forms_model.php	/^    $_gform_lead_meta = array();$/;"	v
_gform_lead_meta	forms_model.php	/^$_gform_lead_meta = array();$/;"	v
_icon	includes/addon/class-gf-results.php	/^            $this->_icon         = rgar($config, "icon");$/;"	v
_icon	includes/addon/class-gf-results.php	/^        protected $_icon;$/;"	v
_init_forms	form_display.php	/^                $_init_forms = array();$/;"	v
_is_gravityforms_supported	includes/addon/class-gf-auto-upgrade.php	/^        $this->_is_gravityforms_supported = $is_gravityforms_supported;$/;"	v
_is_gravityforms_supported	includes/addon/class-gf-auto-upgrade.php	/^    protected $_is_gravityforms_supported;$/;"	v
_message_callback	includes/addon/class-gf-feed-addon.php	/^        $this->_message_callback            = $message_callback;$/;"	v
_message_callback	includes/addon/class-gf-feed-addon.php	/^    private $_message_callback = array();$/;"	v
_min_gravityforms_version	includes/addon/class-gf-addon.php	/^    protected $_min_gravityforms_version;$/;"	v
_min_gravityforms_version	includes/addon/class-gf-auto-upgrade.php	/^        $this->_min_gravityforms_version = $min_gravityforms_version;$/;"	v
_min_gravityforms_version	includes/addon/class-gf-auto-upgrade.php	/^    protected $_min_gravityforms_version;$/;"	v
_min_gravityforms_version	includes/webapi/webapi.php	/^        protected $_min_gravityforms_version = "1.7.9999";$/;"	v
_multiple_feeds	includes/addon/class-gf-feed-addon.php	/^    protected $_multiple_feeds = true;$/;"	v
_no_conflict_scripts	includes/addon/class-gf-addon.php	/^        $this->_no_conflict_scripts = array_merge($scripts, $this->_no_conflict_scripts);$/;"	v
_no_conflict_scripts	includes/addon/class-gf-addon.php	/^    private $_no_conflict_scripts = array();$/;"	v
_no_conflict_styles	includes/addon/class-gf-addon.php	/^        $this->_no_conflict_styles = array_merge($styles, $this->_no_conflict_styles);$/;"	v
_no_conflict_styles	includes/addon/class-gf-addon.php	/^    private $_no_conflict_styles = array();$/;"	v
_no_items_callback	includes/addon/class-gf-feed-addon.php	/^        $this->_no_items_callback           = $no_items_callback;$/;"	v
_no_items_callback	includes/addon/class-gf-feed-addon.php	/^    private $_no_items_callback = array();$/;"	v
_object_id	includes/locking/class-gf-locking.php	/^                $this->_object_id = $this->get_object_id();$/;"	v
_object_id	includes/locking/class-gf-locking.php	/^    private $_object_id;$/;"	v
_object_type	includes/locking/class-gf-locking.php	/^        $this->_object_type  = $object_type;$/;"	v
_object_type	includes/locking/class-gf-locking.php	/^    private $_object_type;$/;"	v
_page_condition_matches	includes/addon/class-gf-addon.php	/^    private function _page_condition_matches($pages, $tab){$/;"	f
_page_size	includes/addon/class-gf-payment-addon.php	/^        $this->_page_size = $page_size;$/;"	v
_page_size	includes/addon/class-gf-payment-addon.php	/^    private $_page_size = 10;$/;"	v
_pagination	includes/addon/class-gf-payment-addon.php	/^        $this->_pagination = "<div class='tablenav-pages{$page_class}'>$output<\/div>";$/;"	v
_path	includes/addon/class-gf-addon.php	/^    protected $_path;$/;"	v
_path	includes/addon/class-gf-auto-upgrade.php	/^        $this->_path = $path;$/;"	v
_path	includes/addon/class-gf-auto-upgrade.php	/^    protected $_path;$/;"	v
_path	includes/webapi/webapi.php	/^        protected $_path = "gravityformswebapi\/webapi.php";$/;"	v
_payment_version	includes/addon/class-gf-payment-addon.php	/^    private $_payment_version = "1.2";$/;"	v
_preview_styles	includes/addon/class-gf-addon.php	/^    private $_preview_styles = array();$/;"	v
_previous_settings	includes/addon/class-gf-addon.php	/^        $this->_previous_settings = $settings;$/;"	v
_previous_settings	includes/addon/class-gf-addon.php	/^    private $_previous_settings = array();$/;"	v
_print_styles	includes/addon/class-gf-addon.php	/^    private $_print_styles = array();$/;"	v
_private_key	includes/webapi/webapi.php	/^            $this->_private_key = rgar($settings, "private_key");$/;"	v
_private_key	includes/webapi/webapi.php	/^        private $_private_key;$/;"	v
_public_key	includes/webapi/webapi.php	/^            $this->_public_key  = rgar($settings, "public_key");$/;"	v
_public_key	includes/webapi/webapi.php	/^        private $_public_key;$/;"	v
_recaptcha_aes_encrypt	recaptchalib.php	/^function _recaptcha_aes_encrypt($val,$ky) {$/;"	f
_recaptcha_aes_pad	recaptchalib.php	/^function _recaptcha_aes_pad($val) {$/;"	f
_recaptcha_http_post	recaptchalib.php	/^function _recaptcha_http_post($host, $path, $data, $port = 80) {$/;"	f
_recaptcha_mailhide_email_parts	recaptchalib.php	/^function _recaptcha_mailhide_email_parts ($email) {$/;"	f
_recaptcha_mailhide_urlbase64	recaptchalib.php	/^function _recaptcha_mailhide_urlbase64 ($x) {$/;"	f
_recaptcha_qsencode	recaptchalib.php	/^function _recaptcha_qsencode ($data) {$/;"	f
_redirect_url	includes/locking/class-gf-locking.php	/^        $this->_redirect_url = $redirect_url;$/;"	v
_redirect_url	includes/locking/class-gf-locking.php	/^    private $_redirect_url;$/;"	v
_registered_addons	includes/addon/class-gf-addon.php	/^	private static $_registered_addons = array( 'active' => array(), 'inactive' => array() );$/;"	v
_request_condition_matches	includes/addon/class-gf-addon.php	/^    private function _request_condition_matches($request, $query){$/;"	f
_requires_credit_card	includes/addon/class-gf-payment-addon.php	/^    protected $_requires_credit_card = false;$/;"	v
_rows	includes/addon/class-gf-payment-addon.php	/^        $this->_rows = $rows;$/;"	v
_rows	includes/addon/class-gf-payment-addon.php	/^    private $_rows = array();$/;"	v
_saved_settings	includes/addon/class-gf-addon.php	/^        $this->_saved_settings = $settings;$/;"	v
_saved_settings	includes/addon/class-gf-addon.php	/^    private $_saved_settings = array();$/;"	v
_search_title	includes/addon/class-gf-results.php	/^            $this->_search_title = rgempty("search_title", $config) ? __("Results Filters", "gravityforms") : rgar($config, "search_title");$/;"	v
_search_title	includes/addon/class-gf-results.php	/^        protected $_search_title;$/;"	v
_setting_field_errors	includes/addon/class-gf-addon.php	/^    private $_setting_field_errors = array();$/;"	v
_short_title	includes/addon/class-gf-addon.php	/^    protected $_short_title;$/;"	v
_short_title	includes/webapi/webapi.php	/^        protected $_short_title = "API";$/;"	v
_slug	includes/addon/class-gf-addon.php	/^    protected $_slug;$/;"	v
_slug	includes/addon/class-gf-auto-upgrade.php	/^        $this->_slug = $slug;$/;"	v
_slug	includes/addon/class-gf-auto-upgrade.php	/^    protected $_slug;$/;"	v
_slug	includes/addon/class-gf-feed-addon.php	/^        $this->_slug                        = $slug;$/;"	v
_slug	includes/addon/class-gf-feed-addon.php	/^    private $_slug;$/;"	v
_slug	includes/addon/class-gf-results.php	/^            $this->_slug         = $slug;$/;"	v
_slug	includes/addon/class-gf-results.php	/^        protected $_slug;$/;"	v
_slug	includes/webapi/webapi.php	/^        protected $_slug = "gravityformswebapi";$/;"	v
_strings	includes/addon/class-gf-addon-locking.php	/^        $this->_strings = isset($config["strings"]) ? $config["strings"] : array();$/;"	v
_strings	includes/addon/class-gf-addon-locking.php	/^    protected $_strings;$/;"	v
_supports_callbacks	includes/addon/class-gf-payment-addon.php	/^    protected $_supports_callbacks = false;$/;"	v
_tab_matches	includes/addon/class-gf-addon.php	/^    private function _tab_matches($tabs){$/;"	f
_title	includes/addon/class-gf-addon.php	/^    protected $_title;$/;"	v
_title	includes/addon/class-gf-auto-upgrade.php	/^        $this->_title = $title;$/;"	v
_title	includes/addon/class-gf-auto-upgrade.php	/^    protected $_title;$/;"	v
_title	includes/addon/class-gf-results.php	/^            $this->_title        = rgar($config, "title");$/;"	v
_title	includes/addon/class-gf-results.php	/^        protected $_title;$/;"	v
_title	includes/webapi/webapi.php	/^        protected $_title = "Gravity Forms API";$/;"	v
_total_items	includes/addon/class-gf-payment-addon.php	/^        $this->_total_items = $total_count;$/;"	v
_total_items	includes/addon/class-gf-payment-addon.php	/^    private $_total_items = 0;$/;"	v
_transient_prefix	common.php	/^    private static $_transient_prefix = "GFCache_";$/;"	v
_url	includes/addon/class-gf-addon.php	/^    protected $_url;$/;"	v
_url	includes/addon/class-gf-auto-upgrade.php	/^        $this->_url = $url;$/;"	v
_url	includes/addon/class-gf-auto-upgrade.php	/^    protected $_url;$/;"	v
_url	includes/webapi/webapi.php	/^        protected $_url = "http:\/\/www.gravityforms.com";$/;"	v
_version	includes/addon/class-gf-addon.php	/^    protected $_version;$/;"	v
_version	includes/addon/class-gf-auto-upgrade.php	/^        $this->_version = $version;$/;"	v
_version	includes/addon/class-gf-auto-upgrade.php	/^    protected $_version;$/;"	v
_version	includes/webapi/webapi.php	/^        protected $_version = "1.0";$/;"	v
a	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:n
a	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f
abort_email	common.php	/^        $abort_email = false;$/;"	v
account_choices	common.php	/^            $account_choices = array();$/;"	v
account_choices	common.php	/^        $account_choices = array();$/;"	v
account_choices	includes/webapi/webapi.php	/^            $account_choices = array();$/;"	v
account_id	includes/webapi/webapi.php	/^            $account_id = $settings["impersonate_account"];$/;"	v
accounts	common.php	/^            $accounts        = get_users($args);$/;"	v
accounts	includes/webapi/webapi.php	/^            $accounts = get_users($args);$/;"	v
action	common.php	/^                $action = !IS_ADMIN ? "gformMatchCard(\\"{$field_id}_1\\");" : "";$/;"	v
action	common.php	/^                $action = !IS_ADMIN ? "gformShowPasswordStrength(\\"$field_id\\");" : "";$/;"	v
action	entry_list.php	/^        $action = RGForms::post("action");$/;"	v
action	form_display.php	/^            $action = add_query_arg(array());$/;"	v
action	form_display.php	/^            $action = esc_url($action);$/;"	v
action	form_list.php	/^        $action = RGForms::post("action");$/;"	v
action	form_settings.php	/^        $action = rgpost('action');$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^            $action = rgpost("action2");$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^        $action = $this->get_bulk_action();$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^        $action = rgpost("action");$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^        foreach($actions as $action => &$link){$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^        if(empty($action) || $action == "-1")$/;"	v
action	includes/addon/class-gf-feed-addon.php	/^        return empty($action) || $action == "-1" ? false : $action;$/;"	v
action	includes/addon/class-gf-payment-addon.php	/^        $action = wp_parse_args( $action, array($/;"	v
action	includes/addon/class-gf-payment-addon.php	/^     * $action = array($/;"	v
action	notification.php	/^        $action = rgpost('action');$/;"	v
action_hook	includes/addon/class-gf-addon.php	/^        $action_hook = "gform_addon_app_" . $page . "_" . str_replace(" ", "_", $current_tab);$/;"	v
action_links	includes/addon/class-gf-feed-addon.php	/^        $action_links          = $this->get_action_links();$/;"	v
actions	form_settings.php	/^        $actions = apply_filters('gform_confirmation_actions', array($/;"	v
actions	includes/addon/class-gf-feed-addon.php	/^        $actions  = apply_filters($this->_slug . '_feed_actions', $this->_action_links, $item, $column);$/;"	v
actions	notification.php	/^        $actions = apply_filters('gform_notification_actions', array($/;"	v
active	form_list.php	/^                    <li><a class="<?php echo $active == "0" ? "current" : ""?>" href="?page=gf_edit_forms&active=0"><?php _e("Inactive", "gravityforms"); ?> <span class="count">(<span id="inactive_count"><?php echo $form_count["inactive"] ?><\/span>)<\/span><\/a> | <\/li>$/;"	v
active	form_list.php	/^                    <li><a class="<?php echo $active == "0" ? "current" : ""?>" href="?page=gf_edit_forms&trash=1"><?php _e("Trash", "gravityforms"); ?> <span class="count">(<span id="trash_count"><?php echo $form_count["trash"] ?><\/span>)<\/span><\/a><\/li>$/;"	v
active	form_list.php	/^                    <li><a class="<?php echo $active == "1" ? "current" : ""?>" href="?page=gf_edit_forms&active=1"><?php _e("Active", "gravityforms"); ?> <span class="count">(<span id="active_count"><?php echo $form_count["active"] ?><\/span>)<\/span><\/a> | <\/li>$/;"	v
active	form_list.php	/^        $active = RGForms::get("active") == "" ? null : RGForms::get("active");$/;"	v
active	forms_model.php	/^            $active = 0;$/;"	v
active	forms_model.php	/^        $active = $wpdb->get_var($wpdb->prepare(" SELECT count(id) as active$/;"	v
active	includes/api.php	/^    public static function get_forms( $active = true, $trash = false ) {$/;"	v
active_addons	includes/addon/class-gf-addon.php	/^		$active_addons = array_unique(self::$_registered_addons['active']);$/;"	v
active_class	form_display.php	/^                        $active_class = $step_number == $current_page ? " gf_step_active" : "";$/;"	v
active_count	common.php	/^    	$active_count = $form_counts["active"];$/;"	v
active_lead_count	entry_list.php	/^        $active_lead_count = $summary["total"];$/;"	v
active_paypal_feed	includes/addon/class-gf-feed-addon.php	/^				$active_paypal_feed = $paypal_feed;$/;"	v
active_paypal_feed	includes/addon/class-gf-feed-addon.php	/^		$active_paypal_feed = '';$/;"	v
active_plugins	common.php	/^        $active_plugins = get_option( 'active_plugins' );$/;"	v
active_plugins	gravityforms.php	/^        $active_plugins = get_option('active_plugins');$/;"	v
addFile	js/gravityforms.js	/^        function addFile(fieldID, fileInfo){$/;"	f
addFilterMode	js/gf_field_filter.js	/^    function addFilterMode ($filterRow) {$/;"	f
addInputErrorIcon	form_list.php	/^            function addInputErrorIcon( elem ) {$/;"	f
add_action_links	includes/addon/class-gf-feed-addon.php	/^    function add_action_links($item, $column, $value){$/;"	f
add_api_call	common.php	/^    public static function add_api_call(){$/;"	f
add_categories_as_choices	common.php	/^    public static function add_categories_as_choices($field, $value) {$/;"	f
add_default_export_fields	export.php	/^	public static function add_default_export_fields($form){$/;"	f
add_default_feed_settings_fields_props	includes/addon/class-gf-feed-addon.php	/^    public function add_default_feed_settings_fields_props( $fields ) {$/;"	f
add_default_properties	forms_model.php	/^    public static function add_default_properties($form){$/;"	f
add_default_save_button	includes/addon/class-gf-addon.php	/^    protected function add_default_save_button( $sections ) {$/;"	f
add_delayed_payment_support	includes/addon/class-gf-feed-addon.php	/^    protected function add_delayed_payment_support( $options ) {$/;"	f
add_emails_sent	common.php	/^    public static function add_emails_sent(){$/;"	f
add_entries	includes/api.php	/^    public static function add_entries($entries, $form_id = null) {$/;"	f
add_entry	includes/api.php	/^    public static function add_entry($entry) {$/;"	f
add_entry_meta	includes/addon/class-gf-feed-addon.php	/^    public static function add_entry_meta($form){$/;"	f
add_error_message	common.php	/^    public static function add_error_message($message) {$/;"	f
add_feed	includes/api.php	/^    public static function add_feed($form_id, $feed_meta, $addon_slug) {$/;"	f
add_field	form_detail.php	/^    public static function add_field(){$/;"	f
add_field	gravityforms.php	/^    public static function add_field(){$/;"	f
add_field	includes/addon/class-gf-addon.php	/^    protected function add_field( $name, $fields, $settings, $pos ) {$/;"	f
add_field_after	includes/addon/class-gf-addon.php	/^    protected function add_field_after( $name, $fields, $settings ) {$/;"	f
add_field_before	includes/addon/class-gf-addon.php	/^    protected function add_field_before( $name, $fields, $settings ) {$/;"	f
add_form	includes/api.php	/^    public static function add_form($form_meta) {$/;"	f
add_form_action	includes/addon/class-gf-results.php	/^        public function add_form_action($actions, $form_id) {$/;"	f
add_form_button	gravityforms.php	/^    public static function add_form_button(){$/;"	f
add_form_settings_menu	includes/addon/class-gf-addon.php	/^    public function add_form_settings_menu($tabs, $form_id) {$/;"	f
add_forms	includes/api.php	/^    public static function add_forms($forms) {$/;"	f
add_icon	common.php	/^                    $add_icon = !rgempty("addIconUrl", $field) ? $field["addIconUrl"] : GFCommon::get_base_url() . "\/images\/add.png";$/;"	v
add_init_script	form_display.php	/^    public static function add_init_script($form_id, $script_name, $location, $script){$/;"	f
add_mce_popup	gravityforms.php	/^    public static function add_mce_popup(){$/;"	f
add_message	common.php	/^    public static function add_message($message, $is_error = false) {$/;"	f
add_new_url	form_settings.php	/^        $add_new_url = add_query_arg(array("cid" => 0));$/;"	v
add_new_url	notification.php	/^        $add_new_url = add_query_arg(array("nid" => 0));$/;"	v
add_no_conflict_scripts	includes/addon/class-gf-addon.php	/^    private function add_no_conflict_scripts($scripts) {$/;"	f
add_no_conflict_styles	includes/addon/class-gf-addon.php	/^    private function add_no_conflict_styles($styles) {$/;"	f
add_node	js/chosen.jquery.min.js	/^!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":\/[\\&\\<\\>\\"\\'\\`]\/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=\/&(?!\\w+;)|[\\<\\>\\"\\'\\`]\/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1\/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(\/[-[\\]{}()*+?.,\\\\^$|#\\s]\/g,"\\\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"<\/em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(\/\\[|\\]\/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:\/iP(od|hone)\/i.test(window.navigator.userAgent)?!1:\/Android\/i.test(window.navigator.userAgent)&&\/Mobile\/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(\/[^\\w]\/g,"_")+"_chosen"),this.container=a("<div \/>",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" \/><\/li><\/ul><div class="chosen-drop"><ul class="chosen-results"><\/ul><\/div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'<\/span><div><b><\/b><\/div><\/a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" \/><\/div><ul class="chosen-results"><\/ul><\/div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li \/>",{"class":"search-choice"}).html("<span>"+b.html+"<\/span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a \/>",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"><\/abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div\/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span><\/span>"<\/li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div \/>",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);/;"	m	class:SelectParser.return
add_note	forms_model.php	/^    public static function add_note($lead_id, $user_id, $user_name, $note, $note_type = "note"){$/;"	f
add_note	includes/addon/class-gf-payment-addon.php	/^    public function add_note( $entry_id, $note, $note_type = null ) {$/;"	f
add_option	js/chosen.jquery.min.js	/^!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":\/[\\&\\<\\>\\"\\'\\`]\/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=\/&(?!\\w+;)|[\\<\\>\\"\\'\\`]\/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1\/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(\/[-[\\]{}()*+?.,\\\\^$|#\\s]\/g,"\\\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"<\/em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(\/\\[|\\]\/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:\/iP(od|hone)\/i.test(window.navigator.userAgent)?!1:\/Android\/i.test(window.navigator.userAgent)&&\/Mobile\/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(\/[^\\w]\/g,"_")+"_chosen"),this.container=a("<div \/>",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" \/><\/li><\/ul><div class="chosen-drop"><ul class="chosen-results"><\/ul><\/div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'<\/span><div><b><\/b><\/div><\/a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" \/><\/div><ul class="chosen-results"><\/ul><\/div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li \/>",{"class":"search-choice"}).html("<span>"+b.html+"<\/span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a \/>",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"><\/abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div\/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span><\/span>"<\/li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div \/>",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);/;"	m
add_paypal_settings	includes/addon/class-gf-feed-addon.php	/^    public function add_paypal_settings( $feed, $form ) {$/;"	f
add_pending_payment	includes/addon/class-gf-payment-addon.php	/^    public function add_pending_payment( $entry, $action ){$/;"	f
add_script_dependencies	gravityforms.php	/^    private static function add_script_dependencies($registered, $scripts){$/;"	f
add_settings_page	gravityforms.php	/^    public static function add_settings_page( $name, $handle = '', $icon_path = '' ){$/;"	f
add_settings_page	settings.php	/^    public static function add_settings_page($name, $handler, $icon_path){$/;"	f
add_subscription_payment	includes/addon/class-gf-payment-addon.php	/^    public function add_subscription_payment( $entry, $action ) {$/;"	f
add_toolbar_menu_item	includes/addon/class-gf-results.php	/^        public function add_toolbar_menu_item($menu_items, $form_id) {$/;"	f
add_tooltips	includes/addon/class-gf-results.php	/^        public static function add_tooltips($tooltips) {$/;"	f
add_view	includes/addon/class-gf-results.php	/^        public function add_view($view, $form_id) {$/;"	f
addon_feeds	includes/addon/class-gf-feed-addon.php	/^        $addon_feeds = array();$/;"	v
addon_menus	gravityforms.php	/^        $addon_menus = apply_filters("gform_addon_navigation", $addon_menus);$/;"	v
addon_menus	gravityforms.php	/^        $addon_menus = array();$/;"	v
addon_menus	includes/addon/class-gf-addon.php	/^        $addon_menus = apply_filters('gform_addon_app_navigation_' . $this->_slug, $addon_menus);$/;"	v
addon_menus	includes/addon/class-gf-addon.php	/^        $addon_menus = array();$/;"	v
addon_name	includes/addon/class-gf-feed-addon.php	/^        $addon_name = $this->_slug;$/;"	v
addon_pages	settings.php	/^    public static $addon_pages = array();$/;"	v
addon_slug	includes/webapi/webapi.php	/^                $addon_slug = isset($feed["addon_slug"]) ? $feed["addon_slug"] : rgget("addon");$/;"	v
addon_slug	includes/webapi/webapi.php	/^            $addon_slug = rgget("addon");$/;"	v
addons	gravityforms.php	/^        $addons = unserialize($raw_response["body"]);$/;"	v
addons_page	gravityforms.php	/^    public static function addons_page(){$/;"	f
addr	includes/phpqrcode/phpqrcode.php	/^                    $addr = $filler->next();$/;"	v
addr	includes/phpqrcode/phpqrcode.php	/^                $addr = $filler->next();$/;"	v
addr_ary	common.php	/^                        $addr_ary = array();$/;"	v
addr_type	common.php	/^                $addr_type = empty($field["addressType"]) ? "international" : $field["addressType"];$/;"	v
address	common.php	/^                        $address = $street_value;$/;"	v
address	common.php	/^                        $address = implode("<br \/>", $addr_ary);$/;"	v
address	includes/addon/class-gf-addon.php	/^        $address = $street_value;$/;"	v
address	js/forms.js	/^    "address" :         ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .address_setting, .rules_setting, .description_setting, .visibility_setting, .css_class_setting",$/;"	p	class:fieldSettings
addressTypes	common.php	/^        $addressTypes = array($/;"	v
addressTypes	form_detail.php	/^                                    $addressTypes = GFCommon::get_address_types(rgar($form,"id"));$/;"	v
address_display_format	common.php	/^                    $address_display_format = apply_filters("gform_address_display_format", "default");$/;"	v
address_display_format	common.php	/^                $address_display_format = apply_filters("gform_address_display_format", "default");$/;"	v
address_qs	common.php	/^                        $address_qs = str_replace($line_break, " ", $address); \/\/replacing <br\/> and \\n with spaces$/;"	v
address_qs	common.php	/^                        $address_qs = urlencode($address_qs);$/;"	v
address_type	common.php	/^                $address_type = $address_types[$addr_type];$/;"	v
address_type	common.php	/^        $address_type = rgempty("addressType", $field) ? "international" : $field["addressType"];$/;"	v
address_types	common.php	/^                $address_types = self::get_address_types($form_id);$/;"	v
address_types	common.php	/^        $address_types = self::get_address_types($form_id);$/;"	v
adjust_by	export.php	/^                    $adjust_by = 0;$/;"	v
admin_bar	gravityforms.php	/^    public static function admin_bar() {$/;"	f
admin_buttons	form_display.php	/^        $admin_buttons = IS_ADMIN ? "<div class='gfield_admin_icons'><div class='gfield_admin_header_title'>{$field_type_title} : " . __("Field ID", "gravityforms") . " {$field["id"]}<\/div>" . $delete_field_link . $duplicate_field_link . "<a class='field_edit_icon edit_icon_collapsed' title='" . __("click to expand and edit the options for this field", "gravityforms") . "'><i class='fa fa-caret-down fa-lg'><\/i><\/a><\/div>" : "";$/;"	v
admin_notification	forms_model.php	/^            $admin_notification = $form["notification"];$/;"	v
admin_notification	forms_model.php	/^            $admin_notification = self::convert_property_to_merge_tag($form, $form["notification"], "from", "fromField");$/;"	v
admin_notification	forms_model.php	/^            $admin_notification = self::convert_property_to_merge_tag($form, $form["notification"], "fromName", "fromNameField");$/;"	v
admin_notification	forms_model.php	/^            $admin_notification = self::convert_property_to_merge_tag($form, $form["notification"], "replyTo", "replyToField");$/;"	v
admin_only_class	form_display.php	/^        $admin_only_class =  rgget("adminOnly", $field) ? "field_admin_only" : "";$/;"	v
admin_page_matches	includes/addon/class-gf-addon.php	/^                $admin_page_matches = isset($condition["admin_page"]) ? $this->_page_condition_matches($condition["admin_page"], rgar($condition,"tab")) : true;$/;"	v
admin_title	gravityforms.php	/^            $admin_title = sprintf( __( '%1$s &lsaquo; %2$s &#8212; WordPress' , 'gravityforms'), $page_title, $admin_title );$/;"	v
advanced_fields	form_detail.php	/^                                    $advanced_fields = array($/;"	v
after_save_form	includes/webapi/webapi.php	/^        public function after_save_form($form, $is_new) {$/;"	f
agg_rank	includes/addon/class-gf-results.php	/^                    $agg_rank = 1;$/;"	v
ajax	form_display.php	/^					$ajax = isset($attr["ajax"]) && strtolower(substr($attr["ajax"],0, 4)) == "true";$/;"	v
ajax	form_display.php	/^	public static function handle_submission($form, &$lead, $ajax=false){$/;"	v
ajax	form_display.php	/^            $ajax = false;$/;"	v
ajax	form_display.php	/^            $ajax = isset($_POST["gform_ajax"]);$/;"	v
ajax	form_display.php	/^    public static function enqueue_form_scripts( $form, $ajax = false ){$/;"	v
ajax	form_display.php	/^    public static function handle_confirmation($form, $lead, $ajax=false){$/;"	v
ajax	gravityforms.php	/^                $ajax = strtolower($ajax) == "true" ? true : false;$/;"	v
ajax_cancel_subscription	includes/addon/class-gf-payment-addon.php	/^    public function ajax_cancel_subscription() {$/;"	f
ajax_get_more_results	includes/addon/class-gf-results.php	/^        public static function ajax_get_more_results() {$/;"	f
ajax_get_results	includes/addon/class-gf-results.php	/^        public function ajax_get_results() {$/;"	f
ajax_lock_request	includes/locking/class-gf-locking.php	/^    public function ajax_lock_request() {$/;"	f
ajax_parse_request	gravityforms.php	/^    public static function ajax_parse_request($wp) {$/;"	f
ajax_qrcode	includes/webapi/webapi.php	/^        public static function ajax_qrcode() {$/;"	f
ajax_reject_lock_request	includes/locking/class-gf-locking.php	/^    public function ajax_reject_lock_request() {$/;"	f
ajax_toggle_is_active	includes/addon/class-gf-feed-addon.php	/^    public function ajax_toggle_is_active(){$/;"	f
akismet_enabled	common.php	/^    public static function akismet_enabled($form_id) {$/;"	f
akismet_exists	common.php	/^    	$akismet_exists = function_exists('akismet_http_post') || function_exists('Akismet::http_post');$/;"	v
akismet_info	common.php	/^        $akismet_info = apply_filters("gform_akismet_fields_{$form["id"]}", apply_filters("gform_akismet_fields", $akismet_info, $form, $lead), $form, $lead);$/;"	v
akismet_info	common.php	/^        $akismet_info = array();$/;"	v
akismet_setting	settings.php	/^                        $akismet_setting = get_option('rg_gforms_enable_akismet');$/;"	v
align	common.php	/^                    $align = "none";$/;"	v
align	common.php	/^                $align = empty($match[5]) ? "none" : $match[5];$/;"	v
alignmentPattern	includes/phpqrcode/phpqrcode.php	/^        public static $alignmentPattern = array($/;"	v
alignment_options	form_settings.php	/^        $alignment_options = array($/;"	v
allSettings	js/form_editor.js	/^    var allSettings = fieldSettings[field.type];$/;"	v
all_caps	common.php	/^    public static function all_caps(){$/;"	f
all_choices	forms_model.php	/^        $all_choices = self::get_custom_choices();$/;"	v
all_cols	includes/addon/class-gf-feed-addon.php	/^        $all_cols = array_merge($standard_cols, $columns);$/;"	v
all_fields	common.php	/^        $all_fields = $form["fields"];$/;"	v
all_fields	forms_model.php	/^            $all_fields = array("adminLabel"=>"","adminOnly"=>"","allowsPrepopulate"=>"","defaultValue"=>"","description"=>"","content"=>"","cssClass"=>"",$/;"	v
all_fields	includes/addon/class-gf-results.php	/^            $all_fields = $form["fields"];$/;"	v
all_form_ids	includes/addon/class-gf-addon.php	/^        $all_form_ids = array();$/;"	v
all_leads_page	entry_list.php	/^    public static function all_leads_page(){$/;"	f
all_leads_page	gravityforms.php	/^    public static function all_leads_page(){$/;"	f
allocate	includes/phpqrcode/phpqrcode.php	/^        public function allocate($setLength)$/;"	f
allow_display_empty_fields	entry_detail.php	/^    public static function lead_detail_grid($form, $lead, $allow_display_empty_fields=false){$/;"	v
allow_html	forms_model.php	/^		$allow_html     = in_array( $field["type"], array( "post_custom_field", "post_title", "post_content", "post_excerpt", "post_tags" ) ) || in_array( $input_type, array( "checkbox", "radio" ) ) ? true : false;$/;"	v
allow_trash	forms_model.php	/^    public static function get_form($form_id, $allow_trash = false){$/;"	v
allowable_tags	forms_model.php	/^		$allowable_tags = '<a><abbr><acronym><address><area><area \/><b><base><base \/><bdo><big><blockquote><body><br><br \/><button><caption><cite><code><col><col \/><colgroup><command><command \/><dd><del><dfn><div><dl><DOCTYPE><dt><em><fieldset><form><h1><h2><h3><h4><h5><h6><head><html><hr><hr \/><i><img><img \/><input><input \/><ins><kbd><label><legend><li><link><map><meta><meta \/><noscript><ol><optgroup><option><p><param><param \/><pre><q><samp><select><small><span><strong><style><sub><sup><table><tbody><td><textarea><tfoot><th><thead><title><tr><tt><ul><var><wbr><wbr \/><3>';$/;"	v
allowable_tags	forms_model.php	/^		$allowable_tags = apply_filters( "gform_allowable_tags_{$form_id}", apply_filters( "gform_allowable_tags", $allow_html, $field, $form_id ), $field, $form_id );$/;"	v
allowed_extensions	common.php	/^                        $allowed_extensions="*";$/;"	v
allowed_extensions	common.php	/^                    $allowed_extensions = isset($field["allowedExtensions"]) && !empty($field["allowedExtensions"]) ? join(",", GFCommon::clean_extensions(explode(",", strtolower($field["allowedExtensions"])))) : array();$/;"	v
allowed_extensions	form_display.php	/^								$allowed_extensions    = isset($field["allowedExtensions"]) && !empty($field["allowedExtensions"]) ? GFCommon::clean_extensions(explode(",", strtolower($field["allowedExtensions"]))) : array();$/;"	v
allowed_extensions	includes/upload.php	/^        $allowed_extensions    = isset($field["allowedExtensions"]) && !empty($field["allowedExtensions"]) ? GFCommon::clean_extensions(explode(",", strtolower($field["allowedExtensions"]))) : array();$/;"	v
alpha_to	includes/phpqrcode/phpqrcode.php	/^        public $alpha_to = array();  \/\/ log lookup table$/;"	v
alternate_row	entry_list.php	/^                        $alternate_row = false;$/;"	v
alternate_row	form_list.php	/^                            $alternate_row = false;$/;"	v
am_selected	common.php	/^                    $am_selected = rgar($matches,3) == "am" ? "selected='selected'" : "";$/;"	v
am_selected	common.php	/^                    $am_selected = rgar($value,2) == "am" ? "selected='selected'" : "";$/;"	v
amount	includes/addon/class-gf-feed-addon.php	/^		$amount       = 0;$/;"	v
amount	includes/addon/class-gf-payment-addon.php	/^        $amount = 0;$/;"	v
amount_field	includes/addon/class-gf-payment-addon.php	/^        $amount_field = array($/;"	v
amount_formatted	includes/addon/class-gf-payment-addon.php	/^            $amount_formatted = GFCommon::to_money( $action['amount'], $entry['currency'] );$/;"	v
amount_formatted	includes/addon/class-gf-payment-addon.php	/^            $amount_formatted = GFCommon::to_money( $payment['amount'], $entry['currency'] );$/;"	v
ampm	forms_model.php	/^                    $ampm = " $ampm";$/;"	v
ampm	forms_model.php	/^                $ampm = strip_tags(rgar($value,2));$/;"	v
ampm_field	common.php	/^                $ampm_field = is_admin() || rgar($field, "timeFormat") != "24" ? "<div class='gfield_time_ampm ginput_container' {$ampm_field_style}><select name='input_{$id}[]' id='{$field_id}_3' $ampm_tabindex {$disabled_text}><option value='am' {$am_selected}>" . __("AM", "gravityforms") . "<\/option><option value='pm' {$pm_selected}>" . __("PM", "gravityforms") . "<\/option><\/select><\/div>" : "";$/;"	v
ampm_field_style	common.php	/^                $ampm_field_style = is_admin() && rgar($field, "timeFormat") == "24" ? "style='display:none;'" : "";$/;"	v
ampm_tabindex	common.php	/^                $ampm_tabindex = self::get_tabindex();$/;"	v
anTable	includes/phpqrcode/phpqrcode.php	/^        public static $anTable = array($/;"	v
anchor	form_display.php	/^            $anchor = apply_filters("gform_confirmation_anchor_{$form["id"]}", apply_filters("gform_confirmation_anchor", $default_anchor)) ? "<a id='gf_{$form["id"]}' name='gf_{$form["id"]}' class='gform_anchor' ><\/a>" : "";$/;"	v
and	includes/addon/class-gf-addon.php	/^     * To activate the results page override this function and return an array with the configuration data.$/;"	f
animation	form_display.php	/^        $animation = rgar($form,"enableAnimation") ? "1" : "0";$/;"	v
answers	recaptchalib.php	/^	$answers = explode ("\\n", $response [1]);$/;"	v
api	gravityforms.php	/^            $api = new stdClass();$/;"	v
api_key	includes/webapi/webapi.php	/^            $api_key = rgget("api_key");$/;"	v
app_hook_suffix	includes/addon/class-gf-addon.php	/^        $this->app_hook_suffix = add_menu_page($this->get_short_title(), $this->get_short_title(), $has_full_access ? "gform_full_access" : $min_cap, $parent_menu["name"], $callback, $this->get_app_menu_icon(), apply_filters('gform_app_menu_position_', "16.10"));$/;"	v
app_hook_suffix	includes/addon/class-gf-addon.php	/^    public $app_hook_suffix;$/;"	v
app_settings	includes/addon/class-gf-addon.php	/^    protected function app_settings(){$/;"	f
app_settings_fields	includes/addon/class-gf-addon.php	/^    public function app_settings_fields(){$/;"	f
app_settings_icon	includes/addon/class-gf-addon.php	/^    protected function app_settings_icon(){$/;"	f
app_settings_tab	includes/addon/class-gf-addon.php	/^    protected function app_settings_tab(){$/;"	f
app_settings_title	includes/addon/class-gf-addon.php	/^    protected function app_settings_title(){$/;"	f
app_settings_uninstall_tab	includes/addon/class-gf-addon.php	/^    protected function app_settings_uninstall_tab(){$/;"	f
app_tab_page	includes/addon/class-gf-addon.php	/^    public function app_tab_page(){$/;"	f
app_tab_page_footer	includes/addon/class-gf-addon.php	/^    protected function app_tab_page_footer(){$/;"	f
app_tab_page_header	includes/addon/class-gf-addon.php	/^    protected function app_tab_page_header($tabs, $current_tab, $title, $message = ''){$/;"	f
append	includes/phpqrcode/phpqrcode.php	/^        public function append($mode, $size, $data)$/;"	f
append	includes/phpqrcode/phpqrcode.php	/^        public function append(QRbitstream $arg)$/;"	f
appendBytes	includes/phpqrcode/phpqrcode.php	/^        public function appendBytes($size, $data)$/;"	f
appendEntry	includes/phpqrcode/phpqrcode.php	/^        public function appendEntry(QRinputItem $entry)$/;"	f
appendNum	includes/phpqrcode/phpqrcode.php	/^        public function appendNum($bits, $num)$/;"	f
appendPaddingBit	includes/phpqrcode/phpqrcode.php	/^        public function appendPaddingBit(&$bstream)$/;"	f
apply_button	entry_detail.php	/^                $apply_button = '<input type="submit" class="button" value="' . __("Apply", "gravityforms") . '" onclick="jQuery(\\'#action\\').val(\\'bulk\\');" style="width: 50px;" \/>';$/;"	v
apply_button	entry_list.php	/^                        $apply_button = '<input type="submit" class="button" value="' . __("Apply", "gravityforms") . '" onclick="return handleBulkApply(\\'bulk_action2\\');" \/>';$/;"	v
apply_button	entry_list.php	/^                        $apply_button = '<input type="submit" class="button" value="' . __("Apply", "gravityforms") . '" onclick="return handleBulkApply(\\'bulk_action\\');" \/>';$/;"	v
apply_button	form_list.php	/^                            $apply_button = '<input type="submit" class="button" value="' . __("Apply", "gravityforms") . '" onclick="return gfConfirmBulkAction(\\'bulk_action2\\');"\/>';$/;"	v
apply_button	form_list.php	/^                            $apply_button = '<input type="submit" class="button" value="' . __("Apply", "gravityforms") . '" onclick="return gfConfirmBulkAction(\\'bulk_action\\');"\/>';$/;"	v
apply_filter	forms_model.php	/^    public static function get_field_value_long($lead, $field_number, $form, $apply_filter=true){$/;"	v
appname	recaptchalib.php	/^function recaptcha_get_signup_url ($domain = null, $appname = null) {$/;"	v
args	common.php	/^                    $args = apply_filters("gform_post_category_args_{$field["id"]}", apply_filters("gform_post_category_args", $args, $field), $field);$/;"	v
args	common.php	/^                    $args = array('echo' => 0, 'selected' => $selected, "class" => esc_attr($class) . " gfield_select",  'hide_empty' => 0, 'name' => "input_$id", 'orderby' => 'name', 'hierarchical' => true );$/;"	v
args	common.php	/^            $args    = apply_filters("gform_filters_get_users", array("number" => 200));$/;"	v
args	common.php	/^        $args = apply_filters("gform_post_category_args_{$field["id"]}", apply_filters("gform_post_category_args", $args, $field), $field);$/;"	v
args	common.php	/^        $args = array('hide_empty' => false, 'orderby' => 'name');$/;"	v
args	form_detail.php	/^                                        $args = apply_filters("gform_author_dropdown_args_" . rgar($form, "id"), apply_filters("gform_author_dropdown_args", $args));$/;"	v
args	form_detail.php	/^                                        $args = array('name' => 'field_post_author');$/;"	v
args	form_detail.php	/^            $args = array('hide_empty' => 0);$/;"	v
args	includes/addon/class-gf-addon.php	/^                    $args = compact("form", "is_ajax");$/;"	v
args	includes/addon/class-gf-addon.php	/^        $args = is_array( rgar( $field, 'args' ) ) ? rgar( $field, 'args' ) : array( rgar( $field, 'args' ) );$/;"	v
args	includes/addon/class-gf-addon.php	/^        $args = wp_parse_args( $args, array($/;"	v
args	includes/addon/class-gf-addon.php	/^     *     $args = array($/;"	v
args	includes/addon/class-gf-addon.php	/^    public function get_form_fields_as_choices( $form, $args = array() ) {$/;"	v
args	includes/webapi/webapi.php	/^            $args          = compact("offset", "page_size", "schema");$/;"	v
args	includes/webapi/webapi.php	/^            $args = apply_filters("gform_webapi_get_users_settings_page", array("number" => 200));$/;"	v
args	includes/webapi/webapi.php	/^            $args = array($form, $fields, $search_criteria);$/;"	v
arr	recaptchalib.php	/^	$arr = preg_split("\/@\/", $email );$/;"	v
arrAdd	includes/phpqrcode/phpqrcode.php	/^                $arrAdd = array();$/;"	v
array	common.php	/^            $array = array();$/;"	v
array	common.php	/^        $array = str_split($clean_number);$/;"	v
array	common.php	/^        $array = str_split($number);$/;"	v
array	common.php	/^        $array=array();$/;"	v
array	currency.php	/^        $array = str_split($clean_number);$/;"	v
array	currency.php	/^        $array = str_split($text);$/;"	v
array	gravityforms.php	/^            $array = $_GET;$/;"	v
array	gravityforms.php	/^        $array = $_GET;$/;"	v
array	gravityforms.php	/^        $array = $_POST;$/;"	v
array	gravityforms.php	/^    public static function get($name, $array=null){$/;"	v
array	gravityforms.php	/^function rgempty( $name, $array = null ) {$/;"	v
array	gravityforms.php	/^function rgget($name, $array=null){$/;"	v
array_filter_non_blank	includes/addon/class-gf-payment-addon.php	/^	protected function array_filter_non_blank ( $value ){$/;"	f
ary	common.php	/^			$ary   = explode( '|', $value );$/;"	v
ary	common.php	/^                        $ary = array();$/;"	v
ary	common.php	/^                $ary = explode("|:|", $value);$/;"	v
ary	common.php	/^            $ary = explode(":", $cat_string);$/;"	v
ary	common.php	/^        $ary = array();$/;"	v
ary	common.php	/^        $ary = array_values($val);$/;"	v
ary	common.php	/^        $ary = explode("?", $truncated_url);$/;"	v
ary	common.php	/^        $ary = explode("|", $value);$/;"	v
ary	forms_model.php	/^                                $ary = explode("|", $lead[$field_id]);$/;"	v
ary	forms_model.php	/^                    $ary = !empty($value) ? explode("|:|", $value) : array();$/;"	v
ary	forms_model.php	/^            $ary = explode("|", $value);$/;"	v
ary	forms_model.php	/^        $ary = explode("|:|", $file_url);$/;"	v
ary	gravityforms.php	/^            $ary = array();$/;"	v
ary	gravityforms.php	/^        $ary = get_option("gf_dismissed_upgrades");$/;"	v
ary	gravityforms.php	/^    $ary = explode($sep, $string);$/;"	v
ary_dismissed	gravityforms.php	/^        $ary_dismissed = get_option("gf_dismissed_upgrades");$/;"	v
ary_rows	forms_model.php	/^                    $ary_rows = array_merge($ary_rows, rgexplode("|", $row, $column_count));$/;"	v
ary_rows	forms_model.php	/^            $ary_rows = array();$/;"	v
as	common.php	/^        $as = $is_spam ? "spam" : "ham";$/;"	v
as	common.php	/^     * deprecrated insert_variables() function as the new gfMergeTags object has not yet been applied to the Post Content$/;"	f
attachment	forms_model.php	/^        $attachment = array_merge( array($/;"	v
attachments	common.php	/^            $attachments = array();$/;"	v
attachments	common.php	/^            $attachments = is_array( $attachments ) ? $attachments : array( $attachments );$/;"	v
attachments	common.php	/^        $attachments = apply_filters("gform_admin_notification_attachments_{$form_id}", apply_filters("gform_admin_notification_attachments", array(), $lead, $form), $lead, $form);$/;"	v
attachments	common.php	/^        $attachments = apply_filters("gform_user_notification_attachments_{$form_id}", apply_filters("gform_user_notification_attachments", array(), $lead, $form), $lead, $form);$/;"	v
attachments	common.php	/^        $attachments = rgar( $notification, "attachments" );$/;"	v
attr	form_detail.php	/^                echo " $attr=\\"{$button[$attr]}\\"";$/;"	v
attr	form_display.php	/^                $attr = shortcode_parse_atts($match[1]);$/;"	v
attributes	includes/addon/class-gf-addon.php	/^        $attributes    = $this->get_field_attributes($field);$/;"	v
attributes	includes/addon/class-gf-addon.php	/^        $attributes = $this->get_field_attributes( $field );$/;"	v
attributes	includes/addon/class-gf-addon.php	/^        $attributes = $this->get_field_attributes($field);$/;"	v
authenticate	includes/webapi/webapi.php	/^        private function authenticate() {$/;"	f
authenticated	includes/webapi/webapi.php	/^                        $authenticated = true;$/;"	v
authenticated	includes/webapi/webapi.php	/^            $authenticated = false;$/;"	v
authorization	includes/addon/class-gf-payment-addon.php	/^			$this->authorization = $this->authorize( $feed, $submission_data, $form, $entry );$/;"	v
authorization	includes/addon/class-gf-payment-addon.php	/^    protected $authorization = array();$/;"	v
authorization_error	includes/addon/class-gf-payment-addon.php	/^    public function authorization_error( $error_message ) {$/;"	f
authorize	includes/addon/class-gf-payment-addon.php	/^    protected function authorize($feed, $submission_data, $form, $entry){$/;"	f
authorize	includes/webapi/webapi.php	/^        public function authorize($caps = array()) {$/;"	f
auto_upgrade	gravityforms.php	/^                $auto_upgrade = sprintf(__(" or %sUpgrade Automatically%s", "gravityforms"), "<a href='{$upgrade_url}'>", "<\/a>");$/;"	v
auto_upgrade	gravityforms.php	/^            $auto_upgrade = "";$/;"	v
autocomplete	common.php	/^                $autocomplete = RGFormsModel::is_html5_enabled() ? "autocomplete='off'" : "";$/;"	v
average_score	includes/addon/class-gf-results.php	/^                        $average_score = $sum == 0 ? 0 : round($sum \/ $entry_count, 3);$/;"	v
b	includes/phpqrcode/phpqrcode.php	/^            $b = 0;$/;"	v
b	includes/phpqrcode/phpqrcode.php	/^            $b = QRbitstream::newFromBytes($size, $data);$/;"	v
b	includes/phpqrcode/phpqrcode.php	/^            $b = QRbitstream::newFromNum($bits, $num);$/;"	v
b1	includes/phpqrcode/phpqrcode.php	/^            $b1   = self::$eccTable[$version][$level][0];$/;"	v
b1	includes/phpqrcode/phpqrcode.php	/^            $this->b1 = QRspec::rsBlockNum1($spec);$/;"	v
b1	includes/phpqrcode/phpqrcode.php	/^        public $b1;$/;"	v
b2	includes/phpqrcode/phpqrcode.php	/^            $b2   = self::$eccTable[$version][$level][1];$/;"	v
b22	includes/phpqrcode/phpqrcode.php	/^                        $b22 = ord($frameY[$x]) & ord($frameY[$x-1]) & ord($frameYM[$x]) & ord($frameYM[$x-1]);$/;"	v
bar_height	includes/addon/class-gf-results.php	/^                    $bar_height        = 40;$/;"	v
barcode_array	includes/phpqrcode/phpqrcode.php	/^            $barcode_array = array();$/;"	v
base_class	includes/addon/class-gf-addon.php	/^    protected final function method_is_overridden( $method_name, $base_class = 'GFAddOn' ) {$/;"	v
base_class	includes/addon/class-gf-payment-addon.php	/^    private function payment_method_is_overridden( $method_name, $base_class = 'GFPaymentAddOn' ){$/;"	v
base_image	includes/phpqrcode/phpqrcode.php	/^            $base_image =ImageCreate($imgW, $imgH);$/;"	v
base_url	gravityforms.php	/^        $base_url = GFCommon::get_base_url();$/;"	v
bcc	common.php	/^        $bcc   = str_replace( " ", "", $bcc );$/;"	v
bcc	common.php	/^        $bcc = GFCommon::replace_variables(rgar($notification, "bcc"), $form, $lead, false, false);$/;"	v
bcc	common.php	/^        $bcc = GFCommon::replace_variables(rgget("bcc", $form["autoResponder"]), $form, $lead, false, false);$/;"	v
bcc	common.php	/^        $bcc = GFCommon::replace_variables(rgget("bcc", $form["notification"]), $form, $lead, false, false);$/;"	v
because	form_settings.php	/^        \/\/page header loaded in below function because admin messages were not yet available to the header to display$/;"	f
before	form_settings.php	/^            \/\/ allow users to update form with custom function before save$/;"	f
bestMask	includes/phpqrcode/phpqrcode.php	/^                    $bestMask = $mask;$/;"	v
bestMask	includes/phpqrcode/phpqrcode.php	/^            $bestMask = $frame;$/;"	v
bestMask	includes/phpqrcode/phpqrcode.php	/^            $bestMask = array();$/;"	v
bestMaskNum	includes/phpqrcode/phpqrcode.php	/^                    $bestMaskNum = $i;$/;"	v
bestMaskNum	includes/phpqrcode/phpqrcode.php	/^            $bestMaskNum = 0;$/;"	v
bg	js/form_editor.js	/^    var bg = field.simpleCaptchaBackgroundColor == undefined ? "" : field.simpleCaptchaBackgroundColor;$/;"	v
bgcolor	form_display.php	/^        $bgcolor = $style == "custom" ? " background-color:{$form["pagination"]["backgroundColor"]};" : "";$/;"	v
billing_cycles	includes/addon/class-gf-payment-addon.php	/^        $billing_cycles = array($/;"	v
billing_fields	includes/addon/class-gf-payment-addon.php	/^        $billing_fields = $this->billing_info_fields();$/;"	v
billing_info_fields	includes/addon/class-gf-payment-addon.php	/^    protected function billing_info_fields() {$/;"	f
binarize	includes/phpqrcode/phpqrcode.php	/^        public static function binarize($frame)$/;"	f
binary_mode	includes/phpqrcode/phpqrcode.php	/^        public static function debug($frame, $binary_mode = false)$/;"	v
bit	includes/phpqrcode/phpqrcode.php	/^                    $bit = $bit >> 1;$/;"	v
bit	includes/phpqrcode/phpqrcode.php	/^                    $this->bit = 0;$/;"	v
bit	includes/phpqrcode/phpqrcode.php	/^                $bit = 0x80;$/;"	v
bit	includes/phpqrcode/phpqrcode.php	/^            $this->bit = -1;$/;"	v
bit	includes/phpqrcode/phpqrcode.php	/^        public $bit;$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^				$bitMask = array_fill(0, $width, array_fill(0, $width, 0));$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^                    $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^                    $bitMask = self::unserial(file_get_contents($fileName));$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^                $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^            $bitMask = array();$/;"	v
bitMask	includes/phpqrcode/phpqrcode.php	/^            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                $bits = $item->encodeBitStream($this->version);$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                $bits = $this->createBitStream();$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                $bits = $this->estimateBitStreamSize($prev);$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                case QR_MODE_8:            $bits = QRinput::estimateBitsMode8($this->size);    break;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                case QR_MODE_AN:        $bits = QRinput::estimateBitsModeAn($this->size);    break;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                case QR_MODE_KANJI:        $bits = QRinput::estimateBitsModeKanji($this->size);break;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^                case QR_MODE_NUM:        $bits = QRinput::estimateBitsModeNum($this->size);    break;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^            $bits = $bstream->size();$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^            $bits = $w * 10;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^            $bits = $w * 11;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^            $bits = 0;$/;"	v
bits	includes/phpqrcode/phpqrcode.php	/^            $bits = self::$lengthTableBits[$mode][$l];$/;"	v
blacks	includes/phpqrcode/phpqrcode.php	/^                $blacks  = $this->makeMaskNo($i, $width, $frame, $mask);$/;"	v
blacks	includes/phpqrcode/phpqrcode.php	/^                $blacks  = (int)(100 * $blacks \/ ($width * $width));$/;"	v
blacks	includes/phpqrcode/phpqrcode.php	/^                $blacks = 0;$/;"	v
blacks	includes/phpqrcode/phpqrcode.php	/^            $blacks = 0;$/;"	v
blockNo	includes/phpqrcode/phpqrcode.php	/^            $blockNo = 0;$/;"	v
block_size	recaptchalib.php	/^	$block_size = 16;$/;"	v
blocks	includes/phpqrcode/phpqrcode.php	/^            $this->blocks = QRspec::rsBlockNum($spec);$/;"	v
blocks	includes/phpqrcode/phpqrcode.php	/^        public $blocks;$/;"	v
blog_id	gravityforms.php	/^            $blog_id = get_current_blog_id();$/;"	v
blue	includes/addon/class-gf-results.php	/^                            $blue    = (int)(($xb + (($percent * ($yb - $xb)) \/ ($n - 1))));$/;"	v
body	common.php	/^        $body = "key=$key";$/;"	v
body	entry_detail.php	/^                    $body = stripslashes( $_POST["new_note"] );$/;"	v
body	gravityforms.php	/^        $body = "key=$key";$/;"	v
body	gravityforms.php	/^        $body = array("plugins" => urlencode(serialize($installed_plugins)), "nonces" => urlencode(serialize($nonces)), "key" => GFCommon::get_key());$/;"	v
body	includes/addon/class-gf-auto-upgrade.php	/^        $body = "key=$key";$/;"	v
body	settings.php	/^        $body = "key=$key";$/;"	v
browse_button_id	common.php	/^                    $browse_button_id = 'gform_browse_button_' . $form_id . "_" . $id;$/;"	v
bs	includes/phpqrcode/phpqrcode.php	/^                $bs =  new QRbitstream();$/;"	v
bs	includes/phpqrcode/phpqrcode.php	/^                $bs = new QRbitrtream();$/;"	v
bs	includes/phpqrcode/phpqrcode.php	/^                $bs = new QRbitstream();$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^                    $this->bstream = new QRbitstream();$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^                $this->bstream = $bs;$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^            $bstream = $this->getBitStream();$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^            $bstream = $this->mergeBitStream();$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^            $bstream = new QRbitstream();$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^            $this->bstream = $bstream;$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^        public $bstream;$/;"	v
bstream	includes/phpqrcode/phpqrcode.php	/^        public function __construct($mode, $size, $data, $bstream = null)$/;"	v
buf	includes/phpqrcode/phpqrcode.php	/^            $buf = array($size, $index, $parity);$/;"	v
buffer_length	export.php	/^            $buffer_length = ob_get_length(); \/\/length or false if no buffer$/;"	v
buildCache	includes/phpqrcode/phpqrcode.php	/^        public static function buildCache()$/;"	f
build_choices	includes/addon/class-gf-addon.php	/^    public function build_choices( $key_value_pairs ) {$/;"	f
build_lead_array	forms_model.php	/^    public static function build_lead_array($results, $use_long_values = true){$/;"	f
bulk_action	entry_list.php	/^                $bulk_action = !empty($_POST["bulk_action"]) ? $_POST["bulk_action"] : $_POST["bulk_action2"];$/;"	v
bulk_action	form_list.php	/^        $bulk_action = !empty($bulk_action) ? $bulk_action : RGForms::post("bulk_action2");$/;"	v
bulk_action	form_list.php	/^        $bulk_action = RGForms::post("bulk_action");$/;"	v
bulk_actions	includes/addon/class-gf-feed-addon.php	/^        $bulk_actions          = $this->get_bulk_actions();$/;"	v
bulk_actions	includes/addon/class-gf-feed-addon.php	/^        $bulk_actions = array('delete' => __('Delete', 'gravityforms'));$/;"	v
button_click	entry_detail.php	/^                                                $button_click = $mode == "view" ? "jQuery('#screen_mode').val('edit');" : "jQuery('#action').val('update'); jQuery('#screen_mode').val('view');";$/;"	v
button_conditional_checked	form_settings.php	/^			$button_conditional_checked = 'checked="checked"';$/;"	v
button_conditional_checked	form_settings.php	/^        $button_conditional_checked = "";$/;"	v
button_conditional_script	form_display.php	/^            $button_conditional_script = "jQuery('#gform_{$form['id']}').submit(" .$/;"	v
button_conditional_script	form_display.php	/^        $button_conditional_script = "";$/;"	v
button_input	form_display.php	/^            $button_input = "<input type='{$input_type}' id='{$button_input_id}' class='{$class}' value='" . esc_attr($button_text) . "' {$tabindex} {$onclick}\/>";$/;"	v
button_input	form_display.php	/^            $button_input= "<input type='image' src='{$imageUrl}' id='{$button_input_id}' class='{$class}' alt='{$alt}' {$tabindex} {$onclick}\/>";$/;"	v
button_input	form_display.php	/^        $button_input = apply_filters("gform_submit_button", $button_input, $form);$/;"	v
button_input	form_display.php	/^        $button_input = apply_filters("gform_submit_button_{$form_id}", $button_input, $form);$/;"	v
button_input	form_display.php	/^        $button_input = self::get_form_button($form["id"], "gform_submit_button_{$form["id"]}", $form["button"], __("Submit", "gravityforms"), "gform_button", __("Submit", "gravityforms"), 0);$/;"	v
button_label	entry_list.php	/^                            $button_label = $filter == "trash" ? __("Empty Trash", "gravityforms") : __("Delete All Spam", "gravityforms");$/;"	v
button_label	notification.php	/^                    $button_label = $is_new_notification ? __("Save Notification", "gravityforms") : __("Update Notification", "gravityforms");$/;"	v
button_text	entry_detail.php	/^                                                $button_text = $mode == "view" ? __("Edit", "gravityforms") : __("Update", "gravityforms");$/;"	v
button_text	form_detail.php	/^                                $button_text = rgar($form,"id") > 0 ? __("Update Form", "gravityforms") : __("Save Form", "gravityforms");$/;"	v
button_text	form_display.php	/^            $button_text = !empty($button["text"]) ? $button["text"] : $default_text;$/;"	v
bytes	includes/phpqrcode/phpqrcode.php	/^            $bytes = (int)($size \/ 8);$/;"	v
c	includes/addon/class-gf-results.php	/^            $c = 0;$/;"	v
c	includes/phpqrcode/phpqrcode.php	/^            $c = $this->dataStr[$pos];$/;"	v
c	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:r
cache	common.php	/^    public static function check_update($option, $cache=true){$/;"	v
cache_expired	includes/webapi/webapi.php	/^            $cache_expired   = $cache_expiry ? $cache_expiry > $cache_timestamp : false;$/;"	v
cache_expiry	includes/webapi/webapi.php	/^            $cache_expiry    = rgar($cache_meta, "timestamp");$/;"	v
cache_key	common.php	/^        $cache_key = "GFCommon::is_section_empty_{$form['id']}_{$section_field['id']}";$/;"	v
cache_key	forms_model.php	/^                $cache_key = "GFFormsModel::get_lead_field_value_" . $lead["id"] . "_" . $field["id"];$/;"	v
cache_key	forms_model.php	/^        $cache_key = "GFFormsModel::get_lead_field_value_" . $lead["id"] . "_" . $field["id"];$/;"	v
cache_key	forms_model.php	/^        $cache_key = "GFFormsModel::get_lead_field_value_" . $lead_id . "_" . $field_id;$/;"	v
cache_key	forms_model.php	/^        $cache_key = "GFFormsModel::is_field_hidden_" . $form["id"] . "_" . $field["id"];$/;"	v
cache_key	forms_model.php	/^    $cache_key = $entry_id . "_" . $meta_key;$/;"	v
cache_meta	includes/webapi/webapi.php	/^            $cache_meta         = $this->get_results_cache_meta($form_id);$/;"	v
cache_meta	includes/webapi/webapi.php	/^            $cache_meta = $this->get_results_cache_meta($form_id);$/;"	v
cache_meta	includes/webapi/webapi.php	/^            $cache_meta = get_option($key);$/;"	v
cache_options	forms_model.php	/^        $cache_options = array($/;"	v
cache_remote_message	common.php	/^    public static function cache_remote_message(){$/;"	f
cache_timestamp	includes/webapi/webapi.php	/^            $cache_timestamp = isset($data["timestamp"]) ? $data["timestamp"] : 0;$/;"	v
cache_value	forms_model.php	/^        $cache_value = GFCache::get($cache_key);$/;"	v
cached_fields_hash	includes/webapi/webapi.php	/^            $cached_fields_hash = rgar($cache_meta, "fields_hash");$/;"	v
calcN1N3	includes/phpqrcode/phpqrcode.php	/^        public function calcN1N3($length)$/;"	f
calcParity	includes/phpqrcode/phpqrcode.php	/^        public function calcParity()$/;"	f
calculate	common.php	/^    public static function calculate($field, $form, $lead) {$/;"	f
calculate_signature	includes/webapi/webapi.php	/^        private function calculate_signature($string) {$/;"	f
calculated_sig	includes/webapi/webapi.php	/^            $calculated_sig = $this->calculate_signature($string_to_check);$/;"	v
calculation	js/forms.js	/^    "calculation" :     ".disable_quantity_setting, .rules_setting, .duplicate_setting, .calculation_setting, .conditional_logic_field_setting",$/;"	p	class:fieldSettings
calculation_class	form_display.php	/^        $calculation_class = RGFormsModel::get_input_type($field) == 'calculation' ? 'gfield_calculation' : '';$/;"	v
calculation_class	form_display.php	/^        $calculation_class = RGFormsModel::get_input_type($field) == 'number' && GFCommon::has_field_calculation($field) ? 'gfield_calculation' : '';$/;"	v
calculation_fields	forms_model.php	/^        $calculation_fields = array();$/;"	v
call	gravityforms.php	/^\/\/Main function call. Should be used to insert a Gravity Form from code.$/;"	f
callback	form_detail.php	/^    private static function insert_variable_prepopulate($element_id, $callback=""){$/;"	v
callback	forms_model.php	/^                $callback = $entry_meta[$key]['update_entry_meta_callback'];$/;"	v
callback	includes/addon/class-gf-addon.php	/^            $callback = isset($menu_item["callback"]) ? $menu_item["callback"] : array($this, "app_tab_page");$/;"	v
callback	includes/addon/class-gf-addon.php	/^        $callback = isset($parent_menu["callback"]) ? $parent_menu["callback"] : array($this, "app_tab_page");$/;"	v
callback	includes/addon/class-gf-payment-addon.php	/^    protected function callback() { }$/;"	f
callback_action	includes/addon/class-gf-payment-addon.php	/^        $callback_action = $this->callback();$/;"	v
canHaveConditionalLogic	js/form_editor.js	/^    var canHaveConditionalLogic = GetFirstRuleField() > 0;$/;"	v
cancel	includes/addon/class-gf-payment-addon.php	/^    protected function cancel($entry, $feed){$/;"	f
cancel_subscription	includes/addon/class-gf-payment-addon.php	/^    public function cancel_subscription( $entry, $feed, $note = null ) {$/;"	f
cancel_subscription	includes/addon/js/gaddon_payment.js	/^function cancel_subscription(entryId){$/;"	f
cancelsub_button	includes/addon/class-gf-payment-addon.php	/^        $cancelsub_button = "";$/;"	v
capabilities	includes/addon/class-gf-addon-locking.php	/^        $capabilities = isset($config["capabilities"]) ? $config["capabilities"] : array();$/;"	v
capabilities	includes/locking/locking.php	/^        $capabilities = array("gravityforms_edit_entries");$/;"	v
capabilities	includes/locking/locking.php	/^        $capabilities = array("gravityforms_edit_forms");$/;"	v
capabilities	includes/locking/locking.php	/^        $capabilities = array("gravityforms_edit_settings");$/;"	v
capability	gravityforms.php	/^        $capability = rgar($cap, 0);$/;"	v
capacity	includes/phpqrcode/phpqrcode.php	/^        public static $capacity = array($/;"	v
captcha	common.php	/^                        $captcha = self::get_captcha($field);$/;"	v
captcha	common.php	/^        $captcha = new ReallySimpleCaptcha();$/;"	v
captcha	common.php	/^        $captcha = self::get_simple_captcha();$/;"	v
captcha	gravityforms.php	/^            $captcha = GFCommon::get_captcha($field);$/;"	v
captcha	gravityforms.php	/^            $captcha = GFCommon::get_math_captcha($field, $_GET["pos"]);$/;"	v
captcha	js/forms.js	/^    "captcha"   :       ".captcha_type_setting, .captcha_size_setting, .captcha_fg_setting, .captcha_bg_setting, .conditional_logic_field_setting, .captcha_language_setting, .captcha_theme_setting, .error_message_setting, .label_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
captcha_1	common.php	/^                        $captcha_1 = self::get_math_captcha($field, 1);$/;"	v
captcha_2	common.php	/^                        $captcha_2 = self::get_math_captcha($field, 2);$/;"	v
captcha_3	common.php	/^                        $captcha_3 = self::get_math_captcha($field, 3);$/;"	v
captcha_image	gravityforms.php	/^    public static function captcha_image(){$/;"	f
captcha_obj	form_display.php	/^                                        $captcha_obj = GFCommon::get_simple_captcha();$/;"	v
captcha_obj	form_display.php	/^                                    $captcha_obj = GFCommon::get_simple_captcha();$/;"	v
caption	common.php	/^                $caption = count($ary) > 2 ? $ary[2] : "";$/;"	v
caption	common.php	/^                $caption = esc_attr(rgget($field["id"] . ".4", $value));$/;"	v
caption	forms_model.php	/^                    $caption = count($ary) > 2 ? $ary[2] : "";$/;"	v
caption_field	common.php	/^                $caption_field = rgget("displayCaption", $field) || IS_ADMIN ? sprintf("<span class='ginput_full$class_suffix ginput_post_image_caption' $caption_style><input type='text' name='input_%d.4' id='%s_4' value='%s' $tabindex %s\/><label for='%s_4'>" . apply_filters("gform_postimage_caption_{$form_id}",apply_filters("gform_postimage_caption",__("Caption", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $caption, $disabled_text, $field_id) : "";$/;"	v
caption_style	common.php	/^                $caption_style = !rgget("displayCaption", $field) && IS_ADMIN ? $hidden_style : "";$/;"	v
capture	includes/addon/class-gf-payment-addon.php	/^    protected function capture($authorization, $feed, $submission_data, $form, $entry){$/;"	f
card_field	common.php	/^                $card_field =   sprintf("<span class='ginput_full{$class_suffix}' id='{$field_id}_1_container' >{$card_icons}<input type='text' name='input_%d.1' id='%s_1' value='%s' {$tabindex} %s {$onchange} {$onkeyup} {$autocomplete} {$html5_output}\/><label for='%s_1' id='{$field_id}_1_label'>" . apply_filters("gform_card_number_{$form_id}", apply_filters("gform_card_number",__("Card Number", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $card_number, $disabled_text, $field_id);$/;"	v
card_field	includes/addon/class-gf-payment-addon.php	/^        $card_field = $this->get_credit_card_field($form);$/;"	v
card_icons	common.php	/^                $card_icons = "{$payment_options}<div class='gform_card_icon_container gform_card_icon_{$card_style}'>{$card_radio_button}{$card_icons}<\/div>";$/;"	v
card_icons	common.php	/^                $card_icons = '';$/;"	v
card_name	common.php	/^                    $card_name = esc_attr(rgget($field["id"] . ".5",$value));$/;"	v
card_name	common.php	/^                $card_name = "";$/;"	v
card_name_field	common.php	/^                $card_name_field = sprintf("<span class='ginput_full{$class_suffix}' id='{$field_id}_5_container'><input type='text' name='input_%d.5' id='%s_5' value='%s' {$tabindex} %s \/><label for='%s_5' id='{$field_id}_5_label'>" . apply_filters("gform_card_name_{$form_id}", apply_filters("gform_card_name",__("Cardholder Name", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $card_name, $disabled_text, $field_id);$/;"	v
card_number	common.php	/^                    $card_number = esc_attr(rgget($field["id"] . ".1",$value));$/;"	v
card_number	common.php	/^                    $card_number = trim(rgget($field["id"] . ".1", $value));$/;"	v
card_number	common.php	/^                $card_number = "";$/;"	v
card_number	form_display.php	/^                            $card_number = rgpost("input_" . $field["id"] . "_1");$/;"	v
card_number	forms_model.php	/^                        $card_number = rgpost( "input_{$field_id_token}_1" );$/;"	v
card_number_length	forms_model.php	/^                    $card_number_length = strlen($value);$/;"	v
card_radio_button	common.php	/^                $card_radio_button = empty($payment_options) ? "" : "<input type='radio' name='gform_payment_method' id='gform_payment_method_creditcard' value='creditcard' onclick='gformToggleCreditCard();'   {$checked}\/>";$/;"	v
card_rules	form_display.php	/^        $card_rules = self::get_credit_card_rules();$/;"	v
card_style	common.php	/^                $card_style = rgar($field, 'creditCardStyle') ? rgar($field, 'creditCardStyle') : 'style1';$/;"	v
card_type	common.php	/^                    $card_type = trim(rgget($field["id"] . ".4", $value));$/;"	v
card_type	form_display.php	/^                                $card_type = GFCommon::get_card_type($card_number);$/;"	v
card_type	forms_model.php	/^                        $card_type = GFCommon::get_card_type( $card_number );$/;"	v
cards	common.php	/^                $cards = GFCommon::get_card_types();$/;"	v
cards	common.php	/^        $cards =   array ($/;"	v
cards	common.php	/^        $cards = apply_filters("gform_creditcard_types", $cards);$/;"	v
cards	common.php	/^        $cards = self::get_card_types();$/;"	v
cards	form_detail.php	/^                                        <?php $cards = GFCommon::get_card_types();$/;"	v
cards	form_detail.php	/^                                    <?php $cards = GFCommon::get_card_types();$/;"	v
cards	form_display.php	/^        $cards = GFCommon::get_card_types();$/;"	v
casesensitive	includes/phpqrcode/phpqrcode.php	/^        public $casesensitive = true;$/;"	v
casesensitive	includes/phpqrcode/phpqrcode.php	/^        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)$/;"	v
cat	common.php	/^                                    $cat = self::format_post_category($item, $use_id);$/;"	v
cat	form_detail.php	/^        $cat = get_category( $category, OBJECT, 'display' );$/;"	v
cat	forms_model.php	/^                $cat = get_term($cat_id, 'category');$/;"	v
cat_id	common.php	/^            $cat_id = count($ary) > 1 ? $ary[1] : $ary[0];$/;"	v
cat_ids	common.php	/^        $cat_ids = array();$/;"	v
cat_name	common.php	/^            $cat_name = count($ary) > 0 ? $ary[0] : "";$/;"	v
cat_names	common.php	/^        $cat_names = array();$/;"	v
categories	common.php	/^        $categories = $walker->walk($terms_copy, 0, array(0)); \/\/ 3rd parameter prevents notices triggered by $walker::display_element() function which checks $args[0]$/;"	v
categories	form_detail.php	/^                                            $categories = get_categories( array('hide_empty' => 0) );$/;"	v
categories	form_detail.php	/^            $categories = get_categories( $args );$/;"	v
categories	forms_model.php	/^        $categories = array();$/;"	v
category_rows	form_detail.php	/^                                            $category_rows = '';$/;"	v
cats	common.php	/^                                $cats = array();$/;"	v
change_input_type	form_detail.php	/^    public static function change_input_type(){$/;"	f
change_input_type	gravityforms.php	/^    public static function change_input_type(){$/;"	f
changelog	update.php	/^                $changelog = RGForms::get_changelog();$/;"	v
char	common.php	/^            $char = $array[$i];$/;"	v
char	common.php	/^            else if(empty($decimal_char) && ($char == "." || $char == ",") && strlen($clean_number) - $i <= 3)$/;"	v
char	common.php	/^            if (($char >= '0' && $char <= '9') || $char=="," || $char==".")$/;"	v
char	currency.php	/^            $char = $array[$i];$/;"	v
char	currency.php	/^            if (($char >= '0' && $char <= '9') || $char == $this->currency["decimal_separator"])$/;"	v
charset	export.php	/^            $charset = get_option('blog_charset');$/;"	v
charset_collate	forms_model.php	/^            $charset_collate = "DEFAULT CHARACTER SET $wpdb->charset";$/;"	v
charset_collate	gravityforms.php	/^            $charset_collate = "DEFAULT CHARACTER SET $wpdb->charset";$/;"	v
charset_collate	includes/addon/class-gf-feed-addon.php	/^            $charset_collate = "DEFAULT CHARACTER SET $wpdb->charset";$/;"	v
charset_collate	includes/addon/class-gf-payment-addon.php	/^        $charset_collate = GFFormsModel::get_db_charset();$/;"	v
chart_area_height	includes/addon/class-gf-results.php	/^                    $chart_area_height = (count($choices) * $bar_height);$/;"	v
chart_data	includes/addon/class-gf-payment-addon.php	/^            $chart_data = $this->get_chart_data($data);$/;"	v
chart_data	includes/addon/class-gf-payment-addon.php	/^        $chart_data = array();$/;"	v
chart_options	includes/addon/class-gf-payment-addon.php	/^        $chart_options = array($/;"	v
chart_options	includes/addon/class-gf-results.php	/^                    $chart_options = array($/;"	v
check	includes/phpqrcode/phpqrcode.php	/^        public static function check($mode, $size, $data)$/;"	f
checkModeAn	includes/phpqrcode/phpqrcode.php	/^        public static function checkModeAn($size, $data)$/;"	f
checkModeKanji	includes/phpqrcode/phpqrcode.php	/^        public static function checkModeKanji($size, $data)$/;"	f
checkModeNum	includes/phpqrcode/phpqrcode.php	/^        public static function checkModeNum($size, $data)$/;"	f
check_lock	includes/locking/class-gf-locking.php	/^    protected function check_lock($object_id) {$/;"	f
check_lock_request	includes/locking/class-gf-locking.php	/^    protected function check_lock_request($object_id) {$/;"	f
check_signature	includes/webapi/webapi.php	/^        private function check_signature() {$/;"	f
check_status	includes/addon/class-gf-payment-addon.php	/^    public function check_status(){$/;"	f
check_update	common.php	/^    public static function check_update($option, $cache=true){$/;"	f
check_update	gravityforms.php	/^    public static function check_update($update_plugins_option){$/;"	f
check_update	includes/addon/class-gf-auto-upgrade.php	/^    public function check_update($option){$/;"	f
check_upload_folder	gravityforms.php	/^    public static function check_upload_folder(){$/;"	f
checkbox	js/forms.js	/^    "checkbox" :        ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .choices_setting, .rules_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
checkbox_field	includes/addon/class-gf-feed-addon.php	/^        $checkbox_field = array($/;"	v
checkbox_input	includes/addon/class-gf-addon.php	/^	protected function checkbox_input( $choice, $attributes, $value, $tooltip ) {$/;"	f
checkbox_item	includes/addon/class-gf-addon.php	/^		$checkbox_item = '$/;"	v
checkbox_item	includes/addon/class-gf-addon.php	/^	protected function checkbox_item( $choice, $horizontal_class, $attributes, $value, $tooltip ) {$/;"	f
checkbox_label	includes/addon/class-gf-feed-addon.php	/^        $checkbox_label = isset($field["checkbox_label"]) ? $field["checkbox_label"] : __('Enable Condition', 'gravityforms');$/;"	v
checkdate	form_display.php	/^    public static function checkdate($month, $day, $year){$/;"	f
checked	common.php	/^                        $checked = "checked='checked'";$/;"	v
checked	common.php	/^                        $checked = rgpost("gform_payment_method") == $payment_method["key"] ? "checked='checked'" : "";$/;"	v
checked	common.php	/^                    $checked = "";$/;"	v
checked	common.php	/^                    $checked = "checked='checked'";$/;"	v
checked	common.php	/^                    $checked = RGFormsModel::choice_value_match($field, $choice, $value) ? "checked='checked'" : "";$/;"	v
checked	common.php	/^                    $checked = rgar($choice,"isSelected") ? "checked='checked'" : "";$/;"	v
checked	common.php	/^                $checked = rgpost("gform_payment_method") == "creditcard" || rgempty("gform_payment_method") ? "checked='checked'" : "";$/;"	v
checked	includes/addon/class-gf-addon.php	/^                $checked     = checked($selected_value, $radio_value, false);$/;"	v
checked	includes/locking/class-gf-locking.php	/^        $checked       = array();$/;"	v
checked_masks	includes/phpqrcode/phpqrcode.php	/^                    $checked_masks = array_values($checked_masks);$/;"	v
checked_masks	includes/phpqrcode/phpqrcode.php	/^            $checked_masks = array(0,1,2,3,4,5,6,7);$/;"	v
checksum	common.php	/^        $checksum = 0;$/;"	v
checksum	form_display.php	/^            $checksum = wp_hash(crc32($state[0]));$/;"	v
checksum	form_display.php	/^        $checksum = wp_hash(crc32($hash));$/;"	v
child_node_name	xml.php	/^        $child_node_name = isset($this->options[$path]["array_tag"]) ? $this->options[$path]["array_tag"] : $this->to_singular($parent_node_name);$/;"	v
child_obj	xml.php	/^                $child_obj = $this->unserialize_node($values, $child["index"]);$/;"	v
child_path	xml.php	/^                $child_path = "$path\/$key";$/;"	v
child_path	xml.php	/^            $child_path = "$path\/$node_name";$/;"	v
child_xml	xml.php	/^                $child_xml = $this->serialize($node_name, $obj, $child_path);$/;"	v
children	form_detail.php	/^        $children = array();$/;"	v
children	form_detail.php	/^        $children = get_option("{$taxonomy}_children");$/;"	v
children	form_detail.php	/^        $children = self::_get_term_hierarchy('category');$/;"	v
children	xml.php	/^        $children = $this->get_children($values, $index);$/;"	v
choice	forms_model.php	/^                $choice = $field["choices"][$i];$/;"	v
choice_attributes	includes/addon/class-gf-addon.php	/^				$choice_attributes = $this->get_choice_attributes( $choice, $field_attributes, $default_choice_attributes );$/;"	v
choice_attributes	includes/addon/class-gf-addon.php	/^		$choice_attributes = $field_attributes;$/;"	v
choice_attributes	includes/addon/class-gf-addon.php	/^                $choice_attributes = $this->get_choice_attributes($choice, $field_attributes);$/;"	v
choice_id	common.php	/^            $choice_id = 0;$/;"	v
choice_index	form_display.php	/^                $choice_index = $input_type == "radio" ? 0 : 1;$/;"	v
choice_index	forms_model.php	/^                $choice_index = 0;$/;"	v
choice_is_selected	includes/addon/class-gf-results.php	/^                                        $choice_is_selected = true;$/;"	v
choice_is_selected	includes/addon/class-gf-results.php	/^                                $choice_is_selected = false;$/;"	v
choice_number	common.php	/^            $choice_number = 1;$/;"	v
choice_number	common.php	/^        $choice_number = 1;$/;"	v
choice_search_operator	forms_model.php	/^												$choice_search_operator = '=';$/;"	v
choice_search_operator	forms_model.php	/^												$choice_search_operator = 'like';$/;"	v
choice_selected	common.php	/^                        $choice_selected = false;$/;"	v
choice_selected	common.php	/^                        $choice_selected = rgar($choice,"isSelected");$/;"	v
choice_setting	includes/addon/class-gf-addon.php	/^            $choice_setting = rgar( $settings, rgar( $choice, 'name' ) );$/;"	v
choice_text	common.php	/^                        $choice_text = $choice;$/;"	v
choice_text	common.php	/^                        $choice_text = rgar($choice,"text");$/;"	v
choice_texts_clause	forms_model.php	/^						$choice_texts_clause = "$/;"	v
choice_texts_clause	forms_model.php	/^						$choice_texts_clause = join( ' OR ', $choice_texts_clauses );$/;"	v
choice_texts_clause	forms_model.php	/^					$choice_texts_clause = '';$/;"	v
choice_texts_clauses	forms_model.php	/^					$choice_texts_clauses = array();$/;"	v
choice_texts_clauses_for_field	forms_model.php	/^								$choice_texts_clauses_for_field = array();$/;"	v
choice_texts_clauses_for_form	forms_model.php	/^							$choice_texts_clauses_for_form = array();$/;"	v
choice_val	includes/addon/class-gf-results.php	/^                    foreach ($results as $choice_val => $score) {$/;"	v
choice_value	common.php	/^                        $choice_value = $choice;$/;"	v
choice_value	common.php	/^                        $choice_value = rgar($choice,"value");$/;"	v
choice_value	common.php	/^                $choice_value = $choice["value"];$/;"	v
choice_value	forms_model.php	/^												$choice_value =  $choice['value'];$/;"	v
choice_value	forms_model.php	/^												$choice_value =  '%' . $choice['value'] . '%' ;$/;"	v
choice_value	forms_model.php	/^        $choice_value = GFFormsModel::maybe_trim_input($choice["value"], rgar($field, "formId"), $field);$/;"	v
choice_value	includes/addon/class-gf-results.php	/^                                    $choice_value = rgar($choice, "value");$/;"	v
choice_value	includes/addon/class-gf-results.php	/^                                $choice_value       = rgar($choice, "value");$/;"	v
choice_value	includes/webapi/webapi.php	/^                    foreach ($choice_counts as $choice_value => $choice_count) {$/;"	v
choice_value_clause	forms_model.php	/^					$choice_value_clause = $wpdb->prepare( "value {$operator} %s", $search_term );$/;"	v
choice_value_match	forms_model.php	/^    public static function choice_value_match($field, $choice, $value){$/;"	f
choices	common.php	/^                        $choices = "<option value='-1' {$selected}>{$field["categoryInitialItem"]}<\/option>" . $choices;$/;"	v
choices	common.php	/^                    $choices = self::get_select_choices($field, $value);$/;"	v
choices	common.php	/^        $choices = "";$/;"	v
choices	common.php	/^        $choices = $inputs = array();$/;"	v
choices	forms_model.php	/^            $choices = array();$/;"	v
choices	forms_model.php	/^        $choices = get_option("gform_custom_choices");$/;"	v
choices	forms_model.php	/^        $choices = self::get_custom_choices();$/;"	v
choices	includes/addon/class-gf-addon.php	/^        $choices = array();$/;"	v
choices	includes/addon/class-gf-payment-addon.php	/^        $choices = array($/;"	v
choices	includes/addon/class-gf-payment-addon.php	/^        $choices = array();$/;"	v
choices	includes/addon/class-gf-results.php	/^                            $choices = $field["choices"];$/;"	v
choices	includes/addon/class-gf-results.php	/^                    $choices = $field["choices"];$/;"	v
choices	includes/webapi/webapi.php	/^                    $choices = rgar($field, "choices");$/;"	v
choices_value_match	forms_model.php	/^    public static function choices_value_match($field, $choices, $value) {$/;"	f
chosen_fields	form_display.php	/^        $chosen_fields = array();$/;"	v
chosen_script	form_display.php	/^            $chosen_script = self::get_chosen_init_script($form);$/;"	v
chunk	includes/upload.php	/^        $chunk  = isset($_REQUEST["chunk"]) ? intval($_REQUEST["chunk"]) : 0;$/;"	v
chunk	includes/upload.php	/^        if (!$chunks || $chunk == $chunks - 1) {$/;"	v
chunks	includes/phpqrcode/phpqrcode.php	/^                    $chunks = (int)($payload \/ 10);$/;"	v
chunks	includes/phpqrcode/phpqrcode.php	/^                    $chunks = (int)($payload \/ 11);$/;"	v
chunks	includes/upload.php	/^        $chunks = isset($_REQUEST["chunks"]) ? intval($_REQUEST["chunks"]) : 0;$/;"	v
city	common.php	/^                    $city = sprintf("<span class='ginput_{$city_location}$class_suffix' id='" . $field_id . "_3_container'><input type='text' name='input_%d.3' id='%s_3' value='%s' $tabindex %s\/><label for='%s_3' id='{$field_id}_3_label'>" . apply_filters("gform_address_city_{$form_id}", apply_filters("gform_address_city",__("City", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $city_value, $disabled_text, $field_id);$/;"	v
city	form_display.php	/^                                $city = $_POST["input_" . $field["id"] . "_3"];$/;"	v
city_location	common.php	/^                $city_location = $address_display_format == "zip_before_city" ? "right" : "left";$/;"	v
city_value	common.php	/^                    $city_value = esc_attr(rgget($field["id"] . ".3",$value));$/;"	v
city_value	common.php	/^                    $city_value = trim(rgget($field["id"] . ".3", $value));$/;"	v
city_value	common.php	/^                $city_value ="";$/;"	v
city_value	includes/addon/class-gf-addon.php	/^        $city_value = str_replace("  ", " ", trim($entry[$field_id . ".3"]));$/;"	v
class	common.php	/^        $class = $size . $class_suffix;$/;"	v
class	common.php	/^        $class = 'gform_merge_tags';$/;"	v
class	common.php	/^        $class = trim($class_name . " gform_merge_tags");$/;"	v
class	entry_detail.php	/^                                                                $class = $index == $count ? " class='lastitem'" : "";$/;"	v
class	entry_detail.php	/^                    $class = $note->note_type ? " gforms_note_{$note->note_type}" : "";$/;"	v
class	form_display.php	/^                $class = !empty($form["firstPageCssClass"]) ? " {$form["firstPageCssClass"]}" : "";$/;"	v
class	form_settings.php	/^        <?php $class = !$is_default && !$is_valid && $confirmation_type == 'page' && !rgar($confirmation, 'name') ? 'gfield_error' : ''; ?>$/;"	v
class	form_settings.php	/^        <?php $class = !$is_valid && $confirmation_type == 'page' && !rgar($confirmation, 'pageId') ? 'gfield_error' : ''; ?>$/;"	v
class	form_settings.php	/^        <?php $class = !$is_valid && $confirmation_type == 'redirect' && !rgar($confirmation, 'url') ? 'gfield_error' : ''; ?>$/;"	v
class	includes/addon/class-gf-addon.php	/^        $class = $gf_locking->list_row_class($object_id, false);$/;"	v
class	notification.php	/^                            $class = $is_invalid_rule ? "class='grouting_rule_error'" : "";$/;"	v
class_attr	common.php	/^                $class_attr = "";$/;"	v
class_attribute	common.php	/^                $class_attribute = IS_ADMIN ? "" : "class='gform_hidden'";$/;"	v
class_suffix	common.php	/^        $class_suffix = RG_CURRENT_VIEW == "entry" ? "_admin" : "";$/;"	v
classes	common.php	/^        $classes = array();$/;"	v
classes	form_display.php	/^                        $classes = "gf_step" . $active_class . $first_class . $last_class . $complete_class . $previous_class . $next_class . $pending_class;$/;"	v
classes	form_display.php	/^                        $classes = GFCommon::trim_all($classes);$/;"	v
classes	includes/addon/class-gf-addon.php	/^        $classes = array( 'gaddon-section' );$/;"	v
classes	includes/locking/class-gf-locking.php	/^        $classes      = " gf-locking " . $locked_class;$/;"	v
clean_extensions	common.php	/^    public static function clean_extensions($extensions){$/;"	f
clean_number	common.php	/^        $clean_number = "";$/;"	v
clean_number	common.php	/^    public static function clean_number($number, $number_format=""){$/;"	f
clean_number	currency.php	/^        $clean_number = "";$/;"	v
clean_up_files	form_display.php	/^	public static function clean_up_files($form){$/;"	f
cleanup	export.php	/^    private static function cleanup(&$forms){$/;"	f
cleanup_target_dir	includes/upload.php	/^        $cleanup_target_dir = true; \/\/ Remove old files$/;"	v
clearCache	includes/phpqrcode/phpqrcode.php	/^        public static function clearCache()$/;"	f
clearFilterForm	includes/addon/js/gaddon_results.js	/^    clearFilterForm: function () {$/;"	m	class:gresults
clearSelectAllEntries	entry_list.php	/^            function clearSelectAllEntries(){$/;"	f
clearSelectAllMessage	entry_list.php	/^            function clearSelectAllMessage(){$/;"	f
closeModal	entry_list.php	/^            function closeModal(isSuccess) {$/;"	f
clr	includes/addon/class-gf-results.php	/^                            $clr     = 'rgb(' . $red . ',' . $green . ',' . $blue . ')';$/;"	v
code	common.php	/^                $code = "USD";$/;"	v
code	common.php	/^                $code = $country;$/;"	v
code	common.php	/^                $code = $state;$/;"	v
code	common.php	/^            $code = GFCommon::get_currency();$/;"	v
code	common.php	/^            $code = isset($states[strtoupper($state_name)]) ? $states[strtoupper($state_name)] : strtoupper($state_name);$/;"	v
code	common.php	/^        foreach($countries as $code => $country){$/;"	v
code	common.php	/^        foreach($states as $code => $state){$/;"	v
code	includes/phpqrcode/phpqrcode.php	/^                $code = $raw->getCode();$/;"	v
code	includes/phpqrcode/phpqrcode.php	/^            $code = new QRcode();$/;"	v
code	notification.php	/^                foreach($notification_events as $code => $label){$/;"	v
code	settings.php	/^                                foreach(RGCurrency::get_currencies() as $code => $currency){$/;"	v
codeArr	includes/phpqrcode/phpqrcode.php	/^            $codeArr = array();$/;"	v
codeLines	includes/phpqrcode/phpqrcode.php	/^            $codeLines = explode("\\n", gzuncompress($code));$/;"	v
codes	common.php	/^        $codes = array($/;"	v
col	includes/phpqrcode/phpqrcode.php	/^                $col = $this->count \/ $this->blocks;$/;"	v
col	includes/phpqrcode/phpqrcode.php	/^                $col = ($this->count - $this->dataLength) \/ $this->blocks;$/;"	v
col_count	forms_model.php	/^            $col_count = count(rgar($field, "choices"));$/;"	v
col_index	forms_model.php	/^            $col_index = 0;$/;"	v
col_val	includes/webapi/webapi.php	/^                            foreach ($choice_count as $col_val => $col_count) {$/;"	v
collection	includes/webapi/webapi.php	/^            $collection = strtolower(rgar($path_array, 0));$/;"	v
collection2	includes/webapi/webapi.php	/^            $collection2 = strtolower(rgar($path_array, 2));$/;"	v
colnum	common.php	/^                    $colnum = 1;$/;"	v
colnum	common.php	/^                    for( $colnum = 1; $colnum <= count( $columns ) + 1; $colnum++ ) {$/;"	v
color	common.php	/^            $color = substr($color, 1);$/;"	v
color	form_display.php	/^        $color = $style == "custom" ? " color:{$form["pagination"]["color"]};" : "";$/;"	v
color_picker	form_detail.php	/^    public static function color_picker($field_name, $callback){$/;"	f
column_cb	form_settings.php	/^    function column_cb($item) {$/;"	f
column_cb	includes/addon/class-gf-feed-addon.php	/^    function column_cb($item) {$/;"	f
column_cb	notification.php	/^    function column_cb($item) {$/;"	f
column_content	form_settings.php	/^    function column_content($item) {$/;"	f
column_count	entry_list.php	/^                                $column_count = sizeof($columns) + 2;$/;"	v
column_count	entry_list.php	/^                        $column_count = sizeof($columns) + 3;$/;"	v
column_count	forms_model.php	/^            $column_count = count(rgar($field,"choices"));$/;"	v
column_default	form_settings.php	/^    function column_default($item, $column) {$/;"	f
column_default	includes/addon/class-gf-feed-addon.php	/^    function column_default($item, $column) {$/;"	f
column_default	includes/addon/class-gf-payment-addon.php	/^    function column_default($item, $column){$/;"	f
column_default	notification.php	/^    function column_default($item, $column) {$/;"	f
column_index	common.php	/^        $column_index = 1;$/;"	v
column_is_active	includes/addon/class-gf-feed-addon.php	/^    function column_is_active($item) {$/;"	f
column_name	form_settings.php	/^    function column_name($item) {$/;"	f
column_name	notification.php	/^    function column_name($item) {$/;"	f
column_type	form_settings.php	/^    function column_type($item) {$/;"	f
column_value_callback	includes/addon/class-gf-feed-addon.php	/^        $column_value_callback = array( $this, 'get_column_value' );$/;"	v
columns	common.php	/^                    $columns = array_keys($value[0]);$/;"	v
columns	common.php	/^                $columns = $has_columns ? rgar($field, "choices") : array(array());$/;"	v
columns	entry_list.php	/^                $columns = GFCommon::json_decode(stripslashes($_POST["grid_columns"]), true);$/;"	v
columns	entry_list.php	/^        $columns = RGFormsModel::get_grid_columns($form_id, true);$/;"	v
columns	forms_model.php	/^        $columns = array();$/;"	v
columns	forms_model.php	/^        $columns = self::get_grid_column_meta($form_id);$/;"	v
columns	includes/addon/class-gf-feed-addon.php	/^        $columns               = $this->feed_list_columns();$/;"	v
columns	includes/addon/class-gf-feed-addon.php	/^        $columns = array_keys($this->_columns);$/;"	v
columns	includes/addon/class-gf-feed-addon.php	/^    function __construct($feeds, $slug, $columns = array(), $bulk_actions, $action_links, $column_value_callback, $no_items_callback, $message_callback) {$/;"	v
columns	select_columns.php	/^                $columns = RGFormsModel::get_grid_columns($form_id);$/;"	v
compact	gravityforms.php	/^	public static function format_toolbar_menu_items($menu_items, $compact = false){$/;"	v
compact	gravityforms.php	/^	public static function get_toolbar_menu_items($form_id, $compact = false){$/;"	v
compact	gravityforms.php	/^	public static function toolbar_sub_menu_items($menu_items, $compact = false){$/;"	v
compare_floats	common.php	/^    public static function compare_floats( $float1, $float2, $operator ) {$/;"	f
complete_class	form_display.php	/^                        $complete_class = $step_number < $current_page ? " gf_step_completed" : "";$/;"	v
complete_payment	includes/addon/class-gf-payment-addon.php	/^    public function complete_payment( &$entry, $action ) {$/;"	f
conditional_fields	includes/addon/class-gf-addon.php	/^        $conditional_fields = $this->get_conditional_logic_fields();$/;"	v
conditional_logic	includes/addon/class-gf-feed-addon.php	/^            $conditional_logic = '{}';$/;"	v
conditional_logic	includes/addon/class-gf-feed-addon.php	/^            $conditional_logic = json_encode( GFFormsModel::trim_conditional_logic_values_from_element($conditional_logic_object, $form) ) ;$/;"	v
conditional_logic_object	includes/addon/class-gf-feed-addon.php	/^        $conditional_logic_object = $this->get_setting( 'feed_condition_conditional_logic_object' );$/;"	v
conditional_shortcode	common.php	/^    public static function conditional_shortcode($attributes, $content = null) {$/;"	f
config	includes/addon/class-gf-addon.php	/^            $config = $this->get_locking_config();$/;"	v
confirm	form_display.php	/^                                $confirm = rgpost("input_" . $field["id"] . "_2");$/;"	v
confirm	form_display.php	/^                            $confirm = $_POST["input_" . $field["id"] . "_2"];$/;"	v
confirm_pass	common.php	/^                $confirm_pass = RGForms::post("input_" . $id ."_2");$/;"	v
confirm_style	common.php	/^                    $confirm_style = rgget("emailConfirmEnabled", $field) ? "" : "style='display:none;'";$/;"	v
confirmation	form_display.php	/^				$confirmation = array( 'redirect' => $url );$/;"	v
confirmation	form_display.php	/^				$confirmation = self::get_js_redirect_confirmation( $url, $ajax );$/;"	v
confirmation	form_display.php	/^                $confirmation = self::handle_confirmation($form, $lead, $ajax);$/;"	v
confirmation	form_display.php	/^                $confirmation = self::handle_submission($form, $lead, $ajax);$/;"	v
confirmation	form_display.php	/^            $confirmation = GFCommon::gform_do_shortcode($confirmation); \/\/enabling shortcodes$/;"	v
confirmation	form_display.php	/^            $confirmation = empty($form["confirmation"]["message"]) ? "{$anchor} " : "{$anchor}<div id='gform_confirmation_wrapper_{$form["id"]}' class='gform_confirmation_wrapper {$cssClass}'><div id='gform_confirmation_message_{$form["id"]}' class='gform_confirmation_message_{$form["id"]} gform_confirmation_message'>" . GFCommon::replace_variables($form["confirmation"]["message"], $form, $lead, false, true, $nl2br) . "<\/div><\/div>";$/;"	v
confirmation	form_display.php	/^            $confirmation = self::get_js_redirect_confirmation($confirmation["redirect"], $ajax); \/\/redirecting via client side$/;"	v
confirmation	form_display.php	/^        $confirmation = "";$/;"	v
confirmation	form_display.php	/^        $confirmation = "<script type=\\"text\/javascript\\">" . apply_filters("gform_cdata_open", "") . " function gformRedirect(){document.location.href='$url';}";$/;"	v
confirmation	form_display.php	/^        $confirmation = apply_filters("gform_confirmation_{$form["id"]}", apply_filters("gform_confirmation", $confirmation, $form, $lead, $ajax), $form, $lead, $ajax);$/;"	v
confirmation	form_settings.php	/^        $confirmation = GFFormsModel::trim_conditional_logic_values_from_element($confirmation, $form);$/;"	v
confirmation	form_settings.php	/^        $confirmation = apply_filters("gform_pre_confirmation_save_{$form['id']}", apply_filters('gform_pre_confirmation_save', $confirmation, $form), $form);$/;"	v
confirmation	form_settings.php	/^        $confirmation = self::handle_confirmation_edit_submission( rgar($form["confirmations"], $confirmation_id), $form );$/;"	v
confirmation	forms_model.php	/^        $confirmation = rgar($form,'confirmation');$/;"	v
confirmation	includes/addon/class-gf-payment-addon.php	/^		$confirmation = array( 'redirect' => $this->redirect_url );$/;"	v
confirmation	includes/addon/class-gf-payment-addon.php	/^    public function confirmation($confirmation, $form, $entry, $ajax){$/;"	f
confirmation_deleted	form_settings.php	/^                $confirmation_deleted = self::delete_confirmation($object_id, rgget('id'));$/;"	v
confirmation_id	form_detail.php	/^            $confirmation_id = uniqid();$/;"	v
confirmation_id	form_settings.php	/^            $confirmation_id = $duplicated_cid;$/;"	v
confirmation_id	form_settings.php	/^        $confirmation_id = rgget("cid");$/;"	v
confirmation_message	form_display.php	/^            $confirmation_message = rgget("confirmation_message", $submission_info);$/;"	v
confirmation_message	form_display.php	/^        $confirmation_message = "";$/;"	v
confirmation_table	form_settings.php	/^        $confirmation_table = new GFConfirmationTable($form);$/;"	v
confirmation_type	form_settings.php	/^        $confirmation_type = rgar($confirmation, 'type') ? rgar($confirmation, 'type') : 'message';$/;"	v
confirmation_ui_settings	form_settings.php	/^        $confirmation_ui_settings = self::get_confirmation_ui_settings($confirmation);$/;"	v
confirmations	form_detail.php	/^            $confirmations = array();$/;"	v
confirmations	forms_model.php	/^        $confirmations = $meta["confirmations"];$/;"	v
confirmations	forms_model.php	/^        $confirmations = rgars($results, '0\/confirmations');$/;"	v
confirmations	forms_model.php	/^        $confirmations = self::get_form_confirmations($form['id']);$/;"	v
confirmations	gravityforms.php	/^            $confirmations = GFFormsModel::trim_conditional_logic_values($confirmations, $form, $confirmations_updated);$/;"	v
confirmations	gravityforms.php	/^            $confirmations = GFFormsModel::unserialize($result["confirmations"]);$/;"	v
confirmations_edit_page	form_settings.php	/^    public static function confirmations_edit_page($form_id, $confirmation_id) {$/;"	f
confirmations_list_page	form_settings.php	/^    public static function confirmations_list_page($form_id) {$/;"	f
confirmations_page	form_settings.php	/^    public static function confirmations_page() {$/;"	f
confirmations_updated	gravityforms.php	/^            $confirmations_updated = false;$/;"	v
container_id	common.php	/^                    $container_id = 'gform_multifile_upload_' . $form_id . "_" . $id;$/;"	v
contains	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
contains	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
content	common.php	/^                $content = GFCommon::replace_variables_prepopulate($content); \/\/adding support for merge tags$/;"	v
content	common.php	/^                $content = IS_ADMIN ? "<div class='gf-html-container'><span class='gf_blockheader'><i class='fa fa-code fa-lg'><\/i> " . __("HTML Content", "gravityforms") . "<\/span><span>" . __("This is a content placeholder. HTML content is not displayed in the form admin. Preview this form to view the content.", "gravityforms") . "<\/span><\/div>" : $field["content"];$/;"	v
content	common.php	/^                $content = do_shortcode($content); \/\/adding support for shortcodes$/;"	v
content	common.php	/^    public static function conditional_shortcode($attributes, $content = null) {$/;"	v
content	entry_detail.php	/^                                $content = "<tr valign='top'><td class='detail-view' id='{$td_id}'><label class='detail-label'>" . esc_html(GFCommon::get_label($field)) . "<\/label>" .$/;"	v
content	entry_detail.php	/^                                $content = '$/;"	v
content	entry_detail.php	/^                                $content = apply_filters("gform_field_content", $content, $field, $value, $lead["id"], $form["id"]);$/;"	v
content	forms_model.php	/^                $content = $image_meta['caption'];$/;"	v
content	forms_model.php	/^        $content = '';$/;"	v
content	gravityforms.php	/^    public static function parse_shortcode( $attributes, $content = null ) {$/;"	v
content	includes/addon/class-gf-results.php	/^                        $content = join(" ", $content);$/;"	v
content	includes/addon/class-gf-results.php	/^                    $content = apply_filters("gform_entries_field_value", $value, $form_id, $field["id"], $lead);$/;"	v
contentType	includes/upload.php	/^            $contentType = $_SERVER["CONTENT_TYPE"];$/;"	v
contentType	includes/upload.php	/^            $contentType = $_SERVER["HTTP_CONTENT_TYPE"];$/;"	v
content_type	common.php	/^        $content_type = $message_format == "html" ? "text\/html" : "text\/plain";$/;"	v
continue	includes/addon/class-gf-addon.php	/^        $continue = $this->uninstall();$/;"	v
conversion	form_list.php	/^                                    $conversion = (number_format($form->lead_count \/ $form->view_count, 3) * 100) . "%";$/;"	v
conversion	form_list.php	/^                                $conversion = "0%";$/;"	v
convertData	includes/phpqrcode/phpqrcode.php	/^        public function convertData()$/;"	f
convert_confirmation	forms_model.php	/^    public static function convert_confirmation($form) {$/;"	f
convert_property_to_merge_tag	forms_model.php	/^    private static function convert_property_to_merge_tag($form, $array, $target_property, $source_property){$/;"	f
copy_post_image	forms_model.php	/^    private static function copy_post_image($url, $post_id){$/;"	f
count	common.php	/^            $count = 0;$/;"	v
count	common.php	/^            $count = 1;$/;"	v
count	common.php	/^            for($i=0, $count=sizeof($form["fields"]); $i<$count; $i++){$/;"	v
count	common.php	/^        $count = get_option("gform_api_count");$/;"	v
count	common.php	/^        $count = get_option("gform_email_count");$/;"	v
count	common.php	/^        $count = self::get_api_calls();$/;"	v
count	common.php	/^        $count = self::get_emails_sent();$/;"	v
count	common.php	/^        $count = sizeof($extensions);$/;"	v
count	common.php	/^        for($i=0, $count = sizeof($array); $i<$count; $i++)$/;"	v
count	currency.php	/^        for($i=0, $count = sizeof($array); $i<$count; $i++)$/;"	v
count	entry_detail.php	/^                                                            $count = sizeof($product["options"]);$/;"	v
count	entry_detail.php	/^                $count = 0;$/;"	v
count	entry_detail.php	/^            $count = 0;$/;"	v
count	export.php	/^                    for($i=1, $count = sizeof($field["choices"]); $i<=$count; $i++){$/;"	v
count	export.php	/^                $count = self::import_file($_FILES["gf_import_file"]["tmp_name"], $forms);$/;"	v
count	export.php	/^            $count = 2;$/;"	v
count	form_detail.php	/^                                            $count = 0;$/;"	v
count	form_detail.php	/^            if ( $count == $start && $category->parent > 0 ) {$/;"	v
count	form_display.php	/^                    for($i=0, $count = sizeof($pages); $i<$count; $i++){$/;"	v
count	form_settings.php	/^            $count = 2;$/;"	v
count	forms_model.php	/^            for($i=0, $count=sizeof($field["inputs"]); $i<$count; $i++){$/;"	v
count	forms_model.php	/^            for($i=0, $count=sizeof($form["fields"]); $i<$count && $i<5; $i++){$/;"	v
count	forms_model.php	/^        $count = 1;$/;"	v
count	forms_model.php	/^        $count = 2;$/;"	v
count	forms_model.php	/^        $count = apply_filters("gform_is_duplicate_{$form_id}", apply_filters('gform_is_duplicate', $wpdb->get_var($sql), $form_id, $field, $value), $form_id, $field, $value);$/;"	v
count	forms_model.php	/^        $count = sizeof($columns);$/;"	v
count	forms_model.php	/^        $count = sizeof($form["fields"]);$/;"	v
count	forms_model.php	/^        for($i=0; $count = sizeof($forms), $i<$count; $i++){$/;"	v
count	includes/addon/class-gf-addon.php	/^        $count = $wpdb->get_var("SHOW TABLES LIKE '{$table_name}'");$/;"	v
count	includes/api.php	/^        $count = 2;$/;"	v
count	includes/phpqrcode/phpqrcode.php	/^            $this->count = 0;$/;"	v
count	includes/phpqrcode/phpqrcode.php	/^        public $count;$/;"	v
count	includes/webapi/webapi.php	/^            $count  = 0;$/;"	v
count	includes/webapi/webapi.php	/^            $count = 0;$/;"	v
count	notification.php	/^                        $count = sizeof($notification["routing"]);$/;"	v
count	notification.php	/^        $count = 2;$/;"	v
count	xml.php	/^        for($i= $parent_index + 1, $count = sizeof($values); $i<$count; $i++){$/;"	v
countByCharacters	js/jquery.textareaCounter.plugin.js	/^		function countByCharacters(){$/;"	f	function:fn.textareaCount
countFiles	js/gravityforms.js	/^        function countFiles(fieldID){$/;"	f
countWord	js/jquery.textareaCounter.plugin.js	/^		function countWord(cleanedWordString){$/;"	f	function:countByCharacters
count_entries	includes/api.php	/^    public static function count_entries($form_ids, $search_criteria = array()) {$/;"	f
count_search_leads	forms_model.php	/^    public static function count_search_leads($form_id, $search_criteria = array()) {$/;"	f
count_search_leads	includes/addon/class-gf-results.php	/^            $count_search_leads  = GFAPI::count_entries($form_id, $search_criteria);$/;"	v
count_sub_menu_items	gravityforms.php	/^                        $count_sub_menu_items = count($sub_menu_items);$/;"	v
count_sub_menu_items	gravityforms.php	/^                    $count_sub_menu_items = 0;$/;"	v
counter	forms_model.php	/^        $counter = 1;$/;"	v
countries	common.php	/^        $countries = array_merge(array(''), self::get_countries());$/;"	v
country	common.php	/^                    $country = sprintf("<input type='hidden' class='gform_hidden' name='input_%d.6' id='%s_6' value='%s'\/>", $id, $field_id, $country_value);$/;"	v
country	common.php	/^                    $country = sprintf("<span class='ginput_{$country_location}$class_suffix' id='" . $field_id . "_6_container' $style><select name='input_%d.6' id='%s_6' $tabindex %s>%s<\/select><label for='%s_6' id='" . $field_id . "_6_label'>" . apply_filters("gform_address_country_{$form_id}", apply_filters("gform_address_country",__("Country", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $disabled_text, $country_list, $field_id);$/;"	v
country	form_display.php	/^                                $country = $_POST["input_" . $field["id"] . "_6"];$/;"	v
country_list	common.php	/^                $country_list = self::get_country_dropdown($country_value);$/;"	v
country_location	common.php	/^                $country_location = rgar($field,"hideState") ? "left" : "right";$/;"	v
country_value	common.php	/^                    $country_value = esc_attr(rgget($field["id"] . ".6",$value));$/;"	v
country_value	common.php	/^                    $country_value = rgget("defaultCountry", $field);$/;"	v
country_value	common.php	/^                    $country_value = trim(rgget($field["id"] . ".6", $value));$/;"	v
country_value	common.php	/^                $country_value ="";$/;"	v
country_value	includes/addon/class-gf-addon.php	/^        $country_value = GFCommon::get_country_code(trim($entry[$field_id . ".6"]));$/;"	v
counts_for_row	includes/webapi/webapi.php	/^                            $counts_for_row = array();$/;"	v
createBitStream	includes/phpqrcode/phpqrcode.php	/^        public function createBitStream()$/;"	f
createCookie	entry_detail.php	/^            function createCookie(name,value,days) {$/;"	f
createFrame	includes/phpqrcode/phpqrcode.php	/^        public static function createFrame($version)$/;"	f
create_app_menu	includes/addon/class-gf-addon.php	/^    public function create_app_menu() {$/;"	f
create_lead	forms_model.php	/^    public static function create_lead($form) {$/;"	f
create_list_array	forms_model.php	/^    private static function create_list_array($field, $value){$/;"	f
create_menu	gravityforms.php	/^    public static function create_menu(){$/;"	f
create_plugin_page_menu	includes/addon/class-gf-addon.php	/^    public function create_plugin_page_menu($menus){$/;"	f
create_post	common.php	/^    public static function create_post($form, &$lead) {$/;"	f
create_post	forms_model.php	/^    public static function create_post($form, &$lead){$/;"	f
credit_card_page	includes/addon/class-gf-payment-addon.php	/^                $credit_card_page = $field["pageNumber"];$/;"	v
credit_card_page	includes/addon/class-gf-payment-addon.php	/^        $credit_card_page = 0;$/;"	v
creditcard	js/forms.js	/^    "creditcard" :      ".conditional_logic_field_setting, .force_ssl_field_setting, .credit_card_style_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .description_setting, .css_class_setting, .credit_card_setting",$/;"	p	class:fieldSettings
creditcard_warning_class	form_display.php	/^        $creditcard_warning_class = $input_type == "creditcard" && !GFCommon::is_ssl() ? "gfield_creditcard_warning" : "";$/;"	v
cron_name	includes/addon/class-gf-payment-addon.php	/^        $cron_name = "{$this->_slug}_cron";$/;"	v
cryptmail	recaptchalib.php	/^	$cryptmail = _recaptcha_aes_encrypt ($email, $ky);$/;"	v
cssClass	form_display.php	/^            $cssClass = rgar($form, "cssClass");$/;"	v
css_class	common.php	/^                $css_class = trim(esc_attr($class) . " gfield_select");$/;"	v
css_class	form_display.php	/^        $css_class = "$selectable_class gfield $error_class $section_class $admin_only_class $custom_class $hidden_class $html_block_class $html_formatted_class $html_no_follows_desc_class $option_class $quantity_class $product_class $donation_class $shipping_class $page_class $required_class $hidden_product_class $creditcard_warning_class $calculation_class";$/;"	v
css_class	form_display.php	/^        $css_class = apply_filters("gform_field_css_class_{$form["id"]}", apply_filters("gform_field_css_class", trim($css_class), $field, $form), $field, $form);$/;"	v
css_class	tooltips.php	/^    $css_class = empty($css_class) ? "tooltip" : $css_class;$/;"	v
css_class	tooltips.php	/^function gform_tooltip($name, $css_class="", $return=false){$/;"	v
currencies	currency.php	/^        $currencies = array($/;"	v
currencies	currency.php	/^        $currencies = self::get_currencies();$/;"	v
currency	common.php	/^            $currency = $lead["currency"];$/;"	v
currency	common.php	/^            $currency = RGCurrency::get_currency($code);$/;"	v
currency	common.php	/^            $currency = new RGCurrency( GFCommon::get_currency() );$/;"	v
currency	common.php	/^        $currency = "";$/;"	v
currency	common.php	/^        $currency = empty($currency) ? "USD" : $currency;$/;"	v
currency	common.php	/^        $currency = get_option("rg_gforms_currency");$/;"	v
currency	common.php	/^        $currency = new RGCurrency($currency_code);$/;"	v
currency	common.php	/^    public static function get_lead_field_display($field, $value, $currency="", $use_text=false, $format="html", $media="screen"){$/;"	v
currency	common.php	/^    public static function remove_currency_symbol($value, $currency = null){$/;"	v
currency	common.php	/^    public static function selection_display($value, $field, $currency="", $use_text=false){$/;"	v
currency	currency.php	/^            $this->currency = $currency;$/;"	v
currency	currency.php	/^            $this->currency = self::get_currency($currency);$/;"	v
currency	currency.php	/^    private $currency;$/;"	v
currency	form_display.php	/^        $currency = RGCurrency::get_currency( GFCommon::get_currency() );$/;"	v
currency	forms_model.php	/^                    $currency = new RGCurrency(GFCommon::get_currency());$/;"	v
currency	forms_model.php	/^            $currency = GFCommon::get_currency();$/;"	v
currency	includes/api.php	/^        $currency       = isset($entry["currency"]) ? $entry["currency"] : GFCommon::get_currency();$/;"	v
currency_code	common.php	/^            $currency_code = self::get_currency();$/;"	v
currency_code	common.php	/^    public static function to_money($number, $currency_code=""){$/;"	v
currency_code	common.php	/^    public static function to_number($text, $currency_code=""){$/;"	v
currency_fields	form_display.php	/^        $currency_fields = array();$/;"	v
current	includes/addon/class-gf-payment-addon.php	/^        $current = $this->get_pagenum();$/;"	v
current	includes/addon/class-gf-payment-addon.php	/^        if ( $current == $total_pages )$/;"	v
current	includes/addon/class-gf-payment-addon.php	/^        if ( $current == 1 )$/;"	v
current	xml.php	/^            $current = $values[$i];$/;"	v
current	xml.php	/^        $current = isset($values[$index]) ? $values[$index] : false;$/;"	v
current_action	gravityforms.php	/^        $current_action = self::post("action");$/;"	v
current_currency	js.php	/^    $current_currency = RGCurrency::get_currency(GFCommon::get_currency());$/;"	v
current_currency	settings.php	/^                                    <option value="<?php echo $code ?>" <?php echo $current_currency == $code ? "selected='selected'" : "" ?>><?php echo $currency["name"]?><\/option>$/;"	v
current_currency	settings.php	/^                                $current_currency = GFCommon::get_currency();$/;"	v
current_entry	includes/api.php	/^        $current_entry = $original_entry = self::get_entry($entry_id);$/;"	v
current_feed	includes/addon/class-gf-payment-addon.php	/^		$this->current_feed = $feed;$/;"	v
current_feed	includes/addon/class-gf-payment-addon.php	/^	protected $current_feed = false;$/;"	v
current_fields	forms_model.php	/^        $current_fields = $wpdb->get_results($wpdb->prepare("SELECT id, field_number FROM $lead_detail_table WHERE lead_id=%d", $lead["id"]));$/;"	v
current_fields	includes/api.php	/^        $current_fields = $wpdb->get_results($wpdb->prepare("SELECT id, field_number FROM $lead_detail_table WHERE lead_id=%d", $entry_id));$/;"	v
current_fields_hash	includes/webapi/webapi.php	/^            $current_fields_hash = wp_hash(json_encode($fields));$/;"	v
current_key	forms_model.php	/^        $current_key = get_option("rg_gforms_key");$/;"	v
current_menu_item	includes/addon/class-gf-addon.php	/^                    $current_menu_item = $menu_item;$/;"	v
current_menu_item	includes/addon/class-gf-addon.php	/^            $current_menu_item = false;$/;"	v
current_page	form_display.php	/^            $current_page = self::get_current_page($form_id);$/;"	v
current_page	form_display.php	/^        $current_page = self::get_current_page($form_id);$/;"	v
current_page	gravityforms.php	/^            $current_page = RG_CURRENT_PAGE;$/;"	v
current_page	gravityforms.php	/^            $current_page = trim(strtolower(rgget("gf_page")));$/;"	v
current_page	gravityforms.php	/^        $current_page = trim(strtolower(rgget("page")));$/;"	v
current_page	gravityforms.php	/^        $current_page = trim(strtolower(self::get("page")));$/;"	v
current_page	includes/addon/class-gf-payment-addon.php	/^        $current_page = rgempty("paged") ? 1 : absint(rgpost("paged"));$/;"	v
current_page	includes/webapi/webapi.php	/^                    $current_page = intval($_GET["paging"]["current_page"]);$/;"	v
current_row_count	export.php	/^                $current_row_count = isset($row_counts[$result["field_id"]]) ? intval($row_counts[$result["field_id"]]) : 0;$/;"	v
current_section	forms_model.php	/^                $current_section = $field;$/;"	v
current_section	forms_model.php	/^                $current_section = null;$/;"	v
current_section	forms_model.php	/^        $current_section = null;$/;"	v
current_status	forms_model.php	/^            $current_status = $lead["status"];$/;"	v
current_submission_data	includes/addon/class-gf-payment-addon.php	/^		$this->current_submission_data = $submission_data;$/;"	v
current_submission_data	includes/addon/class-gf-payment-addon.php	/^	protected $current_submission_data = false;$/;"	v
current_tab	export.php	/^                        <li <?php echo $current_tab == $tab["name"] ? "class='active'" : ""?>>$/;"	v
current_tab	export.php	/^        $current_tab = rgempty("view", $_GET) ? "export_entry" : rgget("view");$/;"	v
current_tab	form_settings.php	/^                        <li <?php echo $current_tab == $tab["name"] ? "class='active'" : ""?>>$/;"	v
current_tab	form_settings.php	/^        $current_tab = rgempty("subview", $_GET) ? "settings" : rgget("subview");$/;"	v
current_tab	includes/addon/class-gf-addon.php	/^                    $current_tab = $tab["name"];$/;"	v
current_tab	includes/addon/class-gf-addon.php	/^        $current_tab = rgempty("subview", $_GET) ? "settings" : rgget("subview");$/;"	v
current_tab	includes/addon/class-gf-addon.php	/^        $current_tab = rgget("view");$/;"	v
current_tab	settings.php	/^        $current_tab = self::get_subview();$/;"	v
current_user_can_any	common.php	/^    public static function current_user_can_any($caps){$/;"	f
current_user_can_any	includes/addon/class-gf-addon.php	/^    protected function current_user_can_any($caps) {$/;"	f
current_user_can_any	includes/api.php	/^    public static function current_user_can_any($capabilities){$/;"	f
current_user_can_which	common.php	/^    public static function current_user_can_which($caps){$/;"	f
current_value	includes/addon/class-gf-addon.php	/^        $current_value = $this->get_setting($dependency_field);$/;"	v
custom_choices	form_detail.php	/^                                            $custom_choices = RGFormsModel::get_custom_choices();$/;"	v
custom_class	form_display.php	/^                $custom_class = !empty($custom_class) ? " {$custom_class}" : "";$/;"	v
custom_class	form_display.php	/^        $custom_class = IS_ADMIN ? "" : rgget("cssClass", $field);$/;"	v
custom_field	forms_model.php	/^                $custom_field = self::get_custom_field($form, $meta_name, $meta_index);$/;"	v
custom_field_name	common.php	/^            $custom_field_name = $match[1];$/;"	v
custom_field_names	form_detail.php	/^                                                $custom_field_names = RGFormsModel::get_custom_field_names();$/;"	v
custom_field_value	common.php	/^            $custom_field_value = !empty($post_array["ID"]) ? get_post_meta($post_array["ID"], $custom_field_name, true) : "";$/;"	v
custom_fields	forms_model.php	/^        $custom_fields = GFCommon::get_fields_by_type($form, array("post_custom_field"));$/;"	v
custom_group	common.php	/^        $custom_group = apply_filters('gform_custom_merge_tags', array(), rgars($fields, '0\/formId'), $fields, $element_id);$/;"	v
custom_merge_tags	common.php	/^            $custom_merge_tags = apply_filters('gform_custom_merge_tags', array(), rgars($fields, '0\/formId'), $fields, $element_id);$/;"	v
custom_name	forms_model.php	/^    private static function get_input_value($field, $standard_name, $custom_name = "", $field_values=array(), $get_from_post=true){$/;"	v
custom_validation_result	form_display.php	/^            $custom_validation_result = apply_filters("gform_field_validation", array("is_valid"=> rgar($field, "failed_validation") ? false : true, "message"=>rgar($field, "validation_message")), $value, $form, $field);$/;"	v
custom_validation_result	form_display.php	/^            $custom_validation_result = apply_filters("gform_field_validation_{$form["id"]}", $custom_validation_result, $value, $form, $field);$/;"	v
custom_validation_result	form_display.php	/^            $custom_validation_result = apply_filters("gform_field_validation_{$form["id"]}_{$field["id"]}", $custom_validation_result, $value, $form, $field);$/;"	v
custom_wrapper_css_class	form_display.php	/^            $custom_wrapper_css_class = !empty($form["cssClass"]) ? " {$form["cssClass"]}_wrapper": "";$/;"	v
cx	includes/phpqrcode/phpqrcode.php	/^                $cx = self::$alignmentPattern[$version][0];$/;"	v
cx	includes/phpqrcode/phpqrcode.php	/^            $cx = self::$alignmentPattern[$version][0];$/;"	v
cy	includes/phpqrcode/phpqrcode.php	/^            $cy = self::$alignmentPattern[$version][0];$/;"	v
d	includes/phpqrcode/phpqrcode.php	/^                    $d = $this->dataStr[$pos+1];$/;"	v
d	includes/phpqrcode/phpqrcode.php	/^            $d = $s;$/;"	v
d	includes/phpqrcode/phpqrcode.php	/^            $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0];$/;"	v
d	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:r
dashboard	gravityforms.php	/^    public static function dashboard(){$/;"	f
dashboard_dismiss_upgrade	gravityforms.php	/^    public static function dashboard_dismiss_upgrade(){$/;"	f
dashboard_setup	gravityforms.php	/^    public static function dashboard_setup(){$/;"	f
dashboard_title	gravityforms.php	/^        $dashboard_title = apply_filters("gform_dashboard_title", __("Forms", "gravityforms"));$/;"	v
dashboard_update_message	gravityforms.php	/^    public static function dashboard_update_message(){$/;"	f
data	common.php	/^            $data  = rgar(self::$_cache[$key], "data");$/;"	v
data	common.php	/^            $data = get_site_transient($key);$/;"	v
data	common.php	/^            $data = get_transient($key);$/;"	v
data	common.php	/^        $data = self::get_transient($key);$/;"	v
data	includes/addon/class-gf-payment-addon.php	/^        $data = $error->get_error_data();$/;"	v
data	includes/addon/class-gf-payment-addon.php	/^        $data = $this->get_sales_data($form["id"], $search_criteria, $state_array);$/;"	v
data	includes/addon/class-gf-payment-addon.php	/^        $data = array( "chart" => array("hAxis" => array(), "vAxis" => array("column" => "revenue", "label" => __("Revenue", "gravityforms"))),$/;"	v
data	includes/addon/class-gf-results.php	/^                    $data = call_user_func($this->_callbacks["calculation"], $data, $form, $fields, $leads);$/;"	v
data	includes/addon/class-gf-results.php	/^                $data        = isset($this->_callbacks["data"]) ? call_user_func($this->_callbacks["data"], $form, $fields, $search_criteria, $state_array) : $this->get_results_data($form, $fields, $search_criteria, $state_array);$/;"	v
data	includes/addon/class-gf-results.php	/^                $data   = $state_array;$/;"	v
data	includes/addon/class-gf-results.php	/^            $data        = array();$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^                $this->data = $arg->data;$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $data = array_fill(0, (int)(($size + 7) \/ 8), 0);$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $data = self::getDataLength($version, $level);$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $this->data = $data;$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $this->data = $masked;$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $this->data = $setData;$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $this->data = array_fill(0, $setLength, 0);$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^            $this->data = array_values(array_merge($this->data, $arg->data));$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^        public $data = array();$/;"	v
data	includes/phpqrcode/phpqrcode.php	/^        public $data;$/;"	v
data	includes/webapi/webapi.php	/^                    $data = get_option($key);$/;"	v
data	includes/webapi/webapi.php	/^            $data                  = array();$/;"	v
data	includes/webapi/webapi.php	/^            $data                = $wp_error->get_error_data();$/;"	v
data	includes/webapi/webapi.php	/^            $data          = array();$/;"	v
data	includes/webapi/webapi.php	/^            $data = array($/;"	v
data	includes/webapi/webapi.php	/^            $data = get_option($key, array());$/;"	v
data	includes/webapi/webapi.php	/^            $data = json_decode($HTTP_RAW_POST_DATA, true);$/;"	v
dataLength	includes/phpqrcode/phpqrcode.php	/^            $this->dataLength = $dl;$/;"	v
dataLength	includes/phpqrcode/phpqrcode.php	/^            $this->dataLength = QRspec::rsDataLength($spec);$/;"	v
dataLength	includes/phpqrcode/phpqrcode.php	/^        public $dataLength;$/;"	v
dataPos	includes/phpqrcode/phpqrcode.php	/^            $dataPos = 0;$/;"	v
dataStr	includes/phpqrcode/phpqrcode.php	/^                $this->dataStr = substr($this->dataStr, $length);$/;"	v
dataStr	includes/phpqrcode/phpqrcode.php	/^            $this->dataStr  = $dataStr;$/;"	v
dataStr	includes/phpqrcode/phpqrcode.php	/^        public $dataStr = '';$/;"	v
dataStrLen	includes/phpqrcode/phpqrcode.php	/^            $dataStrLen = strlen($this->dataStr);$/;"	v
data_table	includes/addon/class-gf-payment-addon.php	/^        $data_table    = array();$/;"	v
data_table	includes/addon/class-gf-results.php	/^                    $data_table    = array();$/;"	v
data_table_json	includes/addon/class-gf-payment-addon.php	/^        $data_table_json = json_encode($data_table);$/;"	v
data_table_json	includes/addon/class-gf-results.php	/^                    $data_table_json = htmlentities(json_encode($data_table), ENT_QUOTES, 'UTF-8', true);$/;"	v
datacode	includes/phpqrcode/phpqrcode.php	/^            $this->datacode = $input->getByteStream();$/;"	v
datacode	includes/phpqrcode/phpqrcode.php	/^        public $datacode = array();$/;"	v
date	common.php	/^        $date = preg_replace("|[\/\\.]|", "-", $date);$/;"	v
date	common.php	/^        $date = self::parse_date($value, $format);$/;"	v
date	export.php	/^        $date = gmdate("Y-m-d H:i:s", $gmt_timestamp);$/;"	v
date	form_display.php	/^                                $date = GFCommon::parse_date($value, $format);$/;"	v
date	js/forms.js	/^    "date" :            ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .date_input_type_setting, .duplicate_setting, .visibility_setting, .date_format_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
date_created	includes/api.php	/^        $date_created   = isset($entry["date_created"]) && $entry["date_created"] != "" ? sprintf("'%s'", esc_sql($entry["date_created"])) : "utc_timestamp()";$/;"	v
date_created	includes/api.php	/^        $date_created   = isset($entry["date_created"]) ? sprintf("'%s'", esc_sql($entry["date_created"])) : "utc_timestamp()";$/;"	v
date_display	common.php	/^                $date_display = $include_time ? sprintf(__('%1$s at %2$s', 'gravityforms'), date_i18n($date_format, $lead_local_time, true), date_i18n(get_option('time_format'), $lead_local_time, true)) : date_i18n($date_format, $lead_local_time, true);$/;"	v
date_display	common.php	/^                $date_display = sprintf(__('%s ago', 'gravityforms'), human_time_diff($lead_gmt_time));$/;"	v
date_display	common.php	/^            $date_display = $include_time ? sprintf(__('%1$s at %2$s', 'gravityforms'), date_i18n($date_format, $lead_local_time, true), date_i18n(get_option('time_format'), $lead_local_time, true)) : date_i18n($date_format, $lead_local_time, true);$/;"	v
date_display	common.php	/^    public static function date_display($value, $format = "mdy"){$/;"	f
date_display	gravityforms.php	/^                        $date_display = GFCommon::format_date($form["last_lead_date"]);$/;"	v
date_format	common.php	/^            $date_format = get_option('date_format');$/;"	v
date_info	common.php	/^                    $date_info = self::parse_date($value, $format);$/;"	v
date_info	common.php	/^        $date_info = array();$/;"	v
date_info	form_display.php	/^                    $date_info = GFcommon::parse_date($field_val, $format);$/;"	v
date_info	forms_model.php	/^        $date_info = GFCommon::parse_date($value, $format);$/;"	v
date_range_where	forms_model.php	/^        $date_range_where = self::get_date_range_where($search_criteria);$/;"	v
date_type	common.php	/^                                $field_str .= $date_type == "datedropdown"$/;"	v
date_type	common.php	/^                    $date_type = rgget("dateType", $field);$/;"	v
datefield_display	common.php	/^                    $datefield_display = rgget("dateType", $field) == "datefield" ? "inline" : "none";$/;"	v
datepicker_display	common.php	/^                    $datepicker_display = in_array(rgget("dateType", $field), array("datefield", "datedropdown")) ? "none" : "inline";$/;"	v
day_dropdown	common.php	/^                    $day_dropdown = "<div class='gfield_date_dropdown_day ginput_date_dropdown' id='gfield_dropdown_date_day' style='display:$dropdown_display'>" . self::get_day_dropdown("","","","","disabled='disabled'") . "<\/div>";$/;"	v
day_field	common.php	/^                    $day_field = "<div class='gfield_date_day ginput_date' id='gfield_input_date_day' style='display:$datefield_display'><input name='ginput_day' type='text' disabled='disabled'\/><label>" . __("DD", "gravityforms") . "<\/label><\/div>";$/;"	v
dbDelta	forms_model.php	/^    public static function dbDelta($sql){$/;"	f
db_columns	forms_model.php	/^            $db_columns = self::get_lead_db_columns();$/;"	v
db_fields	common.php	/^    var $db_fields = array ('parent' => 'parent', 'id' => 'term_id');$/;"	v
dbdelta_fix_case	gravityforms.php	/^    public static function dbdelta_fix_case($cqueries){$/;"	f
debug	includes/phpqrcode/phpqrcode.php	/^        public static function debug($frame, $binary_mode = false)$/;"	f
decimal_char	common.php	/^            $decimal_char = ",";$/;"	v
decimal_char	common.php	/^            $decimal_char = ".";$/;"	v
decimal_char	common.php	/^        $decimal_char = "";$/;"	v
decimal_separator	currency.php	/^        $decimal_separator = $this->currency && $this->currency["decimal_separator"] ? $this->currency["decimal_separator"] : ".";$/;"	v
decode_merge_tag	common.php	/^    public static function decode_merge_tag($text){$/;"	f
decrypt	common.php	/^    public static function decrypt( $text ) {$/;"	f
decrypted_value	common.php	/^			$decrypted_value = $wpdb->get_var( $wpdb->prepare('SELECT AES_DECRYPT(%s, %s) AS data', base64_decode( $text ), wp_salt( 'nonce' ) ) );$/;"	v
decrypted_value	common.php	/^			$decrypted_value = trim( mcrypt_decrypt( MCRYPT_RIJNDAEL_256, $key, base64_decode( $text ), MCRYPT_MODE_ECB, mcrypt_create_iv( $iv_size, MCRYPT_RAND ) ) );$/;"	v
default	includes/addon/class-gf-addon.php	/^    protected function get_field_attributes($field, $default = array()){$/;"	v
default_anchor	form_display.php	/^            $default_anchor = $has_pages || $ajax ? true : false;$/;"	v
default_anchor	form_display.php	/^            $default_anchor = self::has_pages($form) ? 1 : 0;$/;"	v
default_attr_name	includes/addon/class-gf-addon.php	/^		foreach ( $default_choice_attributes as $default_attr_name => $default_attr_value ){$/;"	v
default_cards	common.php	/^        $default_cards = array('amex', 'discover', 'mastercard', 'visa');$/;"	v
default_cat_id	form_detail.php	/^        $default_cat_id = (int) get_option( 'default_category' );$/;"	v
default_category	common.php	/^                    $default_category = rgget("categoryInitialItemEnabled", $field) ? "-1" : get_option('default_category');$/;"	v
default_choice_attributes	includes/addon/class-gf-addon.php	/^		$default_choice_attributes = array( 'onclick' => 'jQuery(this).siblings("input[type=hidden]").val(jQuery(this).prop("checked") ? 1 : 0);' );$/;"	v
default_choice_attributes	includes/addon/class-gf-addon.php	/^    protected function get_choice_attributes($choice, $field_attributes, $default_choice_attributes = array()){$/;"	v
default_if_empty	form_display.php	/^    private static function default_if_empty($field, $value){$/;"	f
default_message	form_display.php	/^                        $default_message = __("This date has already been taken. Please select a new date.", "gravityforms");$/;"	v
default_message	form_display.php	/^                        $default_message = is_array($value) ? __("This field requires a unique entry and the values you entered have been already been used.", "gravityforms") :$/;"	v
default_notification	form_detail.php	/^                $default_notification = array(  "id" => uniqid(),$/;"	v
default_props	includes/addon/class-gf-addon.php	/^        $default_props = array($/;"	v
default_value	includes/addon/class-gf-addon.php	/^        $default_value = rgar( $field, 'value' ) ? rgar( $field, 'value' ) : rgar( $field, 'default_value' );$/;"	v
default_value	includes/addon/class-gf-addon.php	/^    protected function get_setting( $setting_name, $default_value = "" , $settings = false ) {$/;"	v
default_values	form_display.php	/^        $default_values = array();$/;"	v
definitions	js/jquery.maskedinput-1.3.1.min.js	/^(function(e){function t(){var e=document.createElement("input"),t="onpaste";return e.setAttribute(t,""),"function"==typeof e[t]?"paste":"input"}var n,a=t()+".mask",r=navigator.userAgent,i=\/iphone\/i.test(r),o=\/android\/i.test(r);e.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},dataName:"rawMaskFn",placeholder:"_"},e.fn.extend({caret:function(e,t){var n;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&(n=this.createTextRange(),n.collapse(!0),n.moveEnd("character",t),n.moveStart("character",e),n.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(n=document.selection.createRange(),e=0-n.duplicate().moveStart("character",-1e5),t=e+n.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(t,r){var c,l,s,u,f,h;return!t&&this.length>0?(c=e(this[0]),c.data(e.mask.dataName)()):(r=e.extend({placeholder:e.mask.placeholder,completed:null},r),l=e.mask.definitions,s=[],u=h=t.length,f=null,e.each(t.split(""),function(e,t){"?"==t?(h--,u=e):l[t]?(s.push(RegExp(l[t])),null===f&&(f=s.length-1)):s.push(null)}),this.trigger("unmask").each(function(){function c(e){for(;h>++e&&!s[e];);return e}function d(e){for(;--e>=0&&!s[e];);return e}function m(e,t){var n,a;if(!(0>e)){for(n=e,a=c(t);h>n;n++)if(s[n]){if(!(h>a&&s[n].test(R[a])))break;R[n]=R[a],R[a]=r.placeholder,a=c(a)}b(),x.caret(Math.max(f,e))}}function p(e){var t,n,a,i;for(t=e,n=r.placeholder;h>t;t++)if(s[t]){if(a=c(t),i=R[t],R[t]=n,!(h>a&&s[a].test(i)))break;n=i}}function g(e){var t,n,a,r=e.which;8===r||46===r||i&&127===r?(t=x.caret(),n=t.begin,a=t.end,0===a-n&&(n=46!==r?d(n):a=c(n-1),a=46===r?c(a):a),k(n,a),m(n,a-1),e.preventDefault()):27==r&&(x.val(S),x.caret(0,y()),e.preventDefault())}function v(t){var n,a,i,l=t.which,u=x.caret();t.ctrlKey||t.altKey||t.metaKey||32>l||l&&(0!==u.end-u.begin&&(k(u.begin,u.end),m(u.begin,u.end-1)),n=c(u.begin-1),h>n&&(a=String.fromCharCode(l),s[n].test(a)&&(p(n),R[n]=a,b(),i=c(n),o?setTimeout(e.proxy(e.fn.caret,x,i),0):x.caret(i),r.completed&&i>=h&&r.completed.call(x))),t.preventDefault())}function k(e,t){var n;for(n=e;t>n&&h>n;n++)s[n]&&(R[n]=r.placeholder)}function b(){x.val(R.join(""))}function y(e){var t,n,a=x.val(),i=-1;for(t=0,pos=0;h>t;t++)if(s[t]){for(R[t]=r.placeholder;pos++<a.length;)if(n=a.charAt(pos-1),s[t].test(n)){R[t]=n,i=t;break}if(pos>a.length)break}else R[t]===a.charAt(pos)&&t!==u&&(pos++,i=t);return e?b():u>i+1?(x.val(""),k(0,h)):(b(),x.val(x.val().substring(0,i+1))),u?t:f}var x=e(this),R=e.map(t.split(""),function(e){return"?"!=e?l[e]?r.placeholder:e:void 0}),S=x.val();x.data(e.mask.dataName,function(){return e.map(R,function(e,t){return s[t]&&e!=r.placeholder?e:null}).join("")}),x.attr("readonly")||x.one("unmask",function(){x.unbind(".mask").removeData(e.mask.dataName)}).bind("focus.mask",function(){clearTimeout(n);var e;S=x.val(),e=y(),n=setTimeout(function(){b(),e==t.length?x.caret(0,e):x.caret(e)},10)}).bind("blur.mask",function(){y(),x.val()!=S&&x.change()}).bind("keydown.mask",g).bind("keypress.mask",v).bind(a,function(){setTimeout(function(){var e=y(!0);x.caret(e),r.completed&&e==x.val().length&&r.completed.call(x)},0)}),y()}))}})})(jQuery);/;"	p	class:e.mask
delay	includes/addon/class-gf-feed-addon.php	/^		$delay = rgar( $paypal_feed['meta'], 'delay_' . $this->_slug );$/;"	v
delay_in_seconds	includes/webapi/webapi.php	/^        public function schedule_results_cron($form, $fields, $search_criteria, $delay_in_seconds = 10) {$/;"	v
delayed_payment_integration	includes/addon/class-gf-feed-addon.php	/^        $this->delayed_payment_integration = $options;$/;"	v
delete	common.php	/^    public static function delete($key) {$/;"	f
delete_cached_results	includes/webapi/webapi.php	/^        public function delete_cached_results($form_id) {$/;"	f
delete_confirmation	form_settings.php	/^    public static function delete_confirmation($confirmation_id, $form_id) {$/;"	f
delete_confirmation	gravityforms.php	/^    public static function delete_confirmation() {$/;"	f
delete_custom_choice	form_detail.php	/^    public static function delete_custom_choice(){$/;"	f
delete_custom_choice	forms_model.php	/^    public static function delete_custom_choice($name){$/;"	f
delete_custom_choice	gravityforms.php	/^    public static function delete_custom_choice(){$/;"	f
delete_directory	common.php	/^    public static function delete_directory($dir) {$/;"	f
delete_display	common.php	/^                $delete_display = count($value) == 1 ? "visibility:hidden;" : "";$/;"	v
delete_entries	includes/webapi/webapi.php	/^        public function delete_entries($entry_ids) {$/;"	f
delete_entry	includes/api.php	/^    public static function delete_entry($entry_id) {$/;"	f
delete_feed	includes/addon/class-gf-feed-addon.php	/^    public function delete_feed($id){$/;"	f
delete_feed	includes/api.php	/^    public static function delete_feed($feed_id) {$/;"	f
delete_feeds	includes/addon/class-gf-feed-addon.php	/^    public function delete_feeds($form_id = null){$/;"	f
delete_feeds	includes/webapi/webapi.php	/^        public function delete_feeds($feed_ids, $form_id = null) {$/;"	f
delete_field	form_detail.php	/^    public static function delete_field(){$/;"	f
delete_field	forms_model.php	/^    public static function delete_field($form_id, $field_id){$/;"	f
delete_field	gravityforms.php	/^    public static function delete_field(){$/;"	f
delete_field_link	form_display.php	/^        $delete_field_link = "<a class='field_delete_icon' id='gfield_delete_$id' title='" . __("click to delete this field", "gravityforms") . "' href='#' onclick='StartDeleteField(this); return false;'><i class='fa fa-times fa-lg'><\/i><\/a>";$/;"	v
delete_field_link	form_display.php	/^        $delete_field_link = apply_filters("gform_delete_field_link", $delete_field_link);$/;"	v
delete_file	forms_model.php	/^    public static function delete_file($entry_id, $field_id, $file_index = 0){$/;"	f
delete_file	gravityforms.php	/^    public static function delete_file(){$/;"	f
delete_files	forms_model.php	/^    public static function delete_files($lead_id, $form=null){$/;"	f
delete_files_by_form	forms_model.php	/^    public static function delete_files_by_form($form_id, $status=""){$/;"	f
delete_form	forms_model.php	/^    public static function delete_form($form_id){$/;"	f
delete_form	includes/api.php	/^    public static function delete_form($form_id) {$/;"	f
delete_forms	forms_model.php	/^    public static function delete_forms($forms){$/;"	f
delete_forms	includes/api.php	/^    public static function delete_forms($form_ids) {$/;"	f
delete_forms	includes/webapi/webapi.php	/^        public function delete_forms($form_ids) {$/;"	f
delete_icon	common.php	/^                    $delete_icon = !rgempty("deleteIconUrl", $field) ? $field["deleteIconUrl"] : GFCommon::get_base_url() . "\/images\/remove.png";$/;"	v
delete_lead	forms_model.php	/^    public static function delete_lead($lead_id){$/;"	f
delete_leads	forms_model.php	/^    public static function delete_leads($leads){$/;"	f
delete_leads_by_form	forms_model.php	/^    public static function delete_leads_by_form($form_id, $status=""){$/;"	f
delete_link	entry_list.php	/^                                                                $delete_link ='<a data-wp-lists="delete:gf_entry_list:lead_row_' . $lead["id"] . '::status=delete&entry=' . $lead["id"] . '" title="' . __("Delete this entry permanently", "gravityforms"). '"  href="' . wp_nonce_url("?page=gf_entries", "gf_delete_entry") . '">' . __("Delete Permanently", "gravityforms") .'<\/a>';$/;"	v
delete_lock_meta	includes/locking/class-gf-locking.php	/^    protected function delete_lock_meta($object_id) {$/;"	f
delete_lock_request_meta	includes/locking/class-gf-locking.php	/^    protected function delete_lock_request_meta($object_id) {$/;"	f
delete_note	forms_model.php	/^    public static function delete_note($note_id){$/;"	f
delete_notes	forms_model.php	/^    public static function delete_notes($notes){$/;"	f
delete_notification	notification.php	/^    public static function delete_notification($notification_id, $form_id) {$/;"	f
delete_password	forms_model.php	/^	public static function delete_password( $entry, $form ) {$/;"	f
delete_physical_file	forms_model.php	/^    private static function delete_physical_file($file_url){$/;"	f
delete_results_cache_meta	includes/webapi/webapi.php	/^        public function delete_results_cache_meta($form_id) {$/;"	f
delete_transient	common.php	/^    private static function delete_transient($key) {$/;"	f
delete_views	forms_model.php	/^    public static function delete_views($form_id){$/;"	f
demerit	includes/phpqrcode/phpqrcode.php	/^                $demerit = (int)((int)(abs($blacks - 50) \/ 5) * N4);$/;"	v
demerit	includes/phpqrcode/phpqrcode.php	/^                $demerit = 0;$/;"	v
demerit	includes/phpqrcode/phpqrcode.php	/^            $demerit = 0;$/;"	v
dependency_field	includes/addon/class-gf-addon.php	/^            $dependency_field = $dependency;$/;"	v
dependency_field	includes/addon/class-gf-addon.php	/^            $dependency_field = $dependency["field"];$/;"	v
dependency_value	includes/addon/class-gf-addon.php	/^            $dependency_value = "_notempty_";$/;"	v
dependency_value	includes/addon/class-gf-addon.php	/^            $dependency_value = $dependency["values"];$/;"	v
dependency_value	includes/addon/class-gf-addon.php	/^            $dependency_value = array($dependency_value);$/;"	v
dependent_scripts	common.php	/^        $dependent_scripts = array( 'gform_form_admin', 'gform_gravityforms', 'gform_form_editor', 'gform_field_filter' );$/;"	v
dependents	form_display.php	/^            $dependents = substr($dependents, 0, strlen($dependents) - 1); \/\/removing last comma;$/;"	v
dependents	form_display.php	/^        $dependents = "";$/;"	v
dependents	gravityforms.php	/^            $dependents = array();$/;"	v
deps	gravityforms.php	/^                $deps = isset($registered[$script]) && is_array($registered[$script]->deps) ? $registered[$script]->deps : array();$/;"	v
deps	includes/addon/class-gf-addon.php	/^                $deps = isset($style["deps"]) ? $style["deps"] : array();$/;"	v
deps	includes/addon/class-gf-addon.php	/^            $deps = isset($script["deps"]) ? $script["deps"] : array();$/;"	v
deps	includes/addon/class-gf-addon.php	/^            $deps = isset($style["deps"]) ? $style["deps"] : array();$/;"	v
depth	common.php	/^    function start_el( &$output, $object, $depth = 0, $args = array(), $current_object_id = 0) {$/;"	v
depth	xml.php	/^        $depth = sizeof(explode("\/", $path)) - 1;$/;"	v
description	common.php	/^                $description = count($ary) > 3 ? $ary[3] : "";$/;"	v
description	common.php	/^                $description = esc_attr(rgget($field["id"] . ".7", $value));$/;"	v
description	form_display.php	/^                $description = self::get_description(rgget("description", $field), "gsection_description");$/;"	v
description	form_display.php	/^                $description = self::get_description(rgget("description", $field),"gfield_description");$/;"	v
description	forms_model.php	/^                    $description = count($ary) > 3 ? $ary[3] : "";$/;"	v
description	gravityforms.php	/^                $description = strtolower($description) == "false" ? false : true;$/;"	v
description	includes/addon/class-gf-payment-addon.php	/^				$description = __("options: ", "gravityforms") . " " . implode(", ", $options);$/;"	v
description	includes/addon/class-gf-payment-addon.php	/^			$description = "";$/;"	v
description	widget.php	/^        $description = __('Gravity Forms Widget', "gravityforms");$/;"	v
description_class	form_detail.php	/^                        $description_class = rgar($form,"descriptionPlacement") == "above" ? "description_above" : "description_below";$/;"	v
description_class	form_display.php	/^            $description_class = rgar($form,"descriptionPlacement") == "above" ? "description_above" : "description_below";$/;"	v
description_dd	form_settings.php	/^        $description_dd = "";$/;"	v
description_field	common.php	/^                $description_field = rgget("displayDescription", $field) || IS_ADMIN? sprintf("<span class='ginput_full$class_suffix ginput_post_image_description' $description_style><input type='text' name='input_%d.7' id='%s_7' value='%s' $tabindex %s\/><label for='%s_7'>" . apply_filters("gform_postimage_description_{$form_id}",apply_filters("gform_postimage_description",__("Description", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $description, $disabled_text, $field_id) : "";$/;"	v
description_options	form_settings.php	/^        $description_options = array($/;"	v
description_placement	forms_model.php	/^        $description_placement = rgar($form, "descriptionPlacement") == "above" ? "above" : "below";$/;"	v
description_style	common.php	/^                $description_style = !rgget("displayDescription", $field) && IS_ADMIN ? $hidden_style : "";$/;"	v
designed	includes/addon/class-gf-feed-addon.php	/^ * Specialist Add-On class designed for use by Add-Ons that require form feed settings$/;"	c
designed	includes/addon/class-gf-payment-addon.php	/^ * Specialist Add-On class designed for use by Add-Ons that collect payment$/;"	c
detail_table_name	forms_model.php	/^	    $detail_table_name = self::get_lead_details_table_name();$/;"	v
detail_table_name	forms_model.php	/^        $detail_table_name = GFFormsModel::get_lead_details_table_name();$/;"	v
detail_table_name	forms_model.php	/^        $detail_table_name = self::get_lead_details_table_name();$/;"	v
die_bad_request	includes/webapi/webapi.php	/^        public function die_bad_request() {$/;"	f
die_error	includes/webapi/webapi.php	/^        public function die_error() {$/;"	f
die_not_authorized	includes/webapi/webapi.php	/^        public function die_not_authorized() {$/;"	f
die_not_found	includes/webapi/webapi.php	/^        public function die_not_found() {$/;"	f
die_not_implemented	includes/webapi/webapi.php	/^        public function die_not_implemented() {$/;"	f
die_permission_denied	includes/webapi/webapi.php	/^        public function die_permission_denied() {$/;"	f
dif	includes/phpqrcode/phpqrcode.php	/^                    $dif = QRinput::estimateBitsMode8($p)  \/\/ + 4 + l8$/;"	v
dif	includes/phpqrcode/phpqrcode.php	/^                    $dif = QRinput::estimateBitsMode8($p) \/\/ + 4 + l8$/;"	v
dif	includes/phpqrcode/phpqrcode.php	/^                    $dif = QRinput::estimateBitsModeAn($p) \/\/ + 4 + la$/;"	v
dif	includes/phpqrcode/phpqrcode.php	/^                $dif = QRinput::estimateBitsModeAn($run) + 4 + $la$/;"	v
dif	includes/phpqrcode/phpqrcode.php	/^                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln$/;"	v
dimensions	common.php	/^                        $dimensions = IS_ADMIN ? "" : "width='" . rgar($captcha,"width") . "' height='" . rgar($captcha,"height") . "'";$/;"	v
dimensions	common.php	/^                        $dimensions = IS_ADMIN ? "" : "width='{$captcha_1["width"]}' height='{$captcha_1["height"]}'";$/;"	v
dir	entry_list.php	/^                                $dir = $sort_direction == "ASC" ? "DESC" : "ASC";$/;"	v
dir	entry_list.php	/^                            $dir = $field_id == 0 ? "DESC" : "ASC"; \/\/default every field so ascending sorting except date_created (id=0)$/;"	v
dir	form_list.php	/^                                $dir = $sort_column == "id" && $sort_direction == "ASC" ? "DESC" : "ASC";$/;"	v
dir	form_list.php	/^                                $dir = $sort_column == "title" && $sort_direction == "ASC" ? "DESC" : "ASC";$/;"	v
dir	form_list.php	/^                            $dir = $sort_column == "is_active" && $sort_direction == "ASC" ? "DESC" : "ASC";$/;"	v
dir	forms_model.php	/^        $dir = wp_upload_dir();$/;"	v
dir	includes/phpqrcode/phpqrcode.php	/^                        $this->dir = -1;$/;"	v
dir	includes/phpqrcode/phpqrcode.php	/^                        $this->dir = 1;$/;"	v
dir	includes/phpqrcode/phpqrcode.php	/^            $this->dir = -1;$/;"	v
dir	includes/phpqrcode/phpqrcode.php	/^        public $dir;$/;"	v
dir_qs	entry_list.php	/^        $dir_qs = empty($sort_field) ? "" : "&dir=$sort_direction";$/;"	v
direction	form_display.php	/^        $direction = $page_number >= $current_page ? 1 : -1;$/;"	v
disableAutoformat	common.php	/^        $disableAutoformat = "1";$/;"	v
disable_entry_info_payment	includes/addon/class-gf-payment-addon.php	/^    public function disable_entry_info_payment($is_enabled, $entry){$/;"	f
disable_first	includes/addon/class-gf-payment-addon.php	/^            $disable_first = ' disabled';$/;"	v
disable_first	includes/addon/class-gf-payment-addon.php	/^        $disable_first = $disable_last = '';$/;"	v
disable_last	includes/addon/class-gf-payment-addon.php	/^            $disable_last = ' disabled';$/;"	v
disable_post	common.php	/^        $disable_post = apply_filters("gform_disable_post_creation_{$form["id"]}", apply_filters("gform_disable_post_creation", false, $form, $lead), $form, $lead);$/;"	v
disabled	settings.php	/^                        $disabled = apply_filters("gform_currency_disabled", false) ? "disabled='disabled'" : ""$/;"	v
disabled_icon_class	common.php	/^                $disabled_icon_class = !empty($maxRow) && count($value) >= $maxRow ? "gfield_icon_disabled" : "";$/;"	v
disabled_text	common.php	/^        $disabled_text = (IS_ADMIN && RG_CURRENT_VIEW != "entry") ? "disabled='disabled'" : "";$/;"	v
disallowed_extensions	common.php	/^                    $disallowed_extensions = GFCommon::get_disallowed_file_extensions();$/;"	v
discounts	includes/addon/class-gf-feed-addon.php	/^		$discounts    = array();$/;"	v
discounts	includes/addon/class-gf-payment-addon.php	/^        $discounts = array();$/;"	v
display	form_settings.php	/^    function display() {$/;"	f
display	forms_model.php	/^            $display = "hide";$/;"	v
display	forms_model.php	/^            $display = self::get_field_display($form, $field, $field_values, $lead);$/;"	v
display	forms_model.php	/^            return $display == "hide";$/;"	v
display	forms_model.php	/^        $display = GFCache::get($cache_key);$/;"	v
display	forms_model.php	/^        $display = self::get_field_display($form, $page, $field_values, $lead);$/;"	v
display	forms_model.php	/^        return $display == "hide";$/;"	v
display	includes/addon/class-gf-addon.php	/^        $display = rgar( $field, 'hidden' ) || rgar( $field, 'type' ) == 'hidden' ? 'style="display:none;"' : '';$/;"	v
display	notification.php	/^    function display() {$/;"	f
displayMessage	entry_detail.php	/^            function displayMessage(message, messageClass, container){$/;"	f
displayMessage	entry_list.php	/^            function displayMessage(message, messageClass, container){$/;"	f
displayNoFiltersMessage	js/gf_field_filter.js	/^    function displayNoFiltersMessage () {$/;"	f
display_add_form_button	gravityforms.php	/^        $display_add_form_button = apply_filters("gform_display_add_form_button", $is_post_edit_page);$/;"	v
display_admin_message	common.php	/^    public static function display_admin_message($errors = false, $messages = false) {$/;"	f
display_all	common.php	/^        $display_all = rgar($field, "displayAllCategories");$/;"	v
display_buttons	form_detail.php	/^    private static function display_buttons($buttons){$/;"	f
display_callback_error	includes/addon/class-gf-payment-addon.php	/^    private function display_callback_error($error){$/;"	f
display_changelog	gravityforms.php	/^    public static function display_changelog(){$/;"	f
display_changelog	includes/addon/class-gf-auto-upgrade.php	/^    public function display_changelog(){$/;"	f
display_empty	common.php	/^            $display_empty = in_array("empty", $options);$/;"	v
display_empty	common.php	/^    public static function get_submitted_fields($form, $lead, $display_empty=false, $use_text=false, $format="html", $use_admin_label=false, $merge_tag="", $options=""){$/;"	v
display_empty_fields	entry_detail.php	/^            $display_empty_fields = rgget( "gf_display_empty_fields", $_COOKIE );$/;"	v
display_empty_fields	entry_detail.php	/^        $display_empty_fields = apply_filters( 'gform_entry_detail_grid_display_empty_fields', $display_empty_fields, $form, $lead );$/;"	v
display_empty_fields	entry_detail.php	/^        $display_empty_fields = false;$/;"	v
display_field	common.php	/^                        $display_field = false;$/;"	v
display_field	common.php	/^                    $display_field = true;$/;"	v
display_paging_links	entry_list.php	/^    private static function display_paging_links($which, $page_links, $first_item_index, $page_size, $total_lead_count) {$/;"	f
display_plugin_message	includes/addon/class-gf-addon.php	/^    public static function display_plugin_message($message, $is_error = false) {$/;"	f
display_product_summary	common.php	/^                        $display_product_summary = apply_filters( 'gform_display_product_summary', true, $field, $form, $lead );$/;"	v
display_product_summary	common.php	/^                $display_product_summary = apply_filters( 'gform_display_product_summary', true, $field, $form, $entry );$/;"	v
display_product_summary	common.php	/^        $display_product_summary = false;$/;"	v
display_rows_or_placeholder	includes/addon/class-gf-feed-addon.php	/^    function display_rows_or_placeholder() {$/;"	f
display_title	form_display.php	/^    public static function get_form($form_id, $display_title=true, $display_description=true, $force_display=false, $field_values=null, $ajax=false, $tabindex = 1){$/;"	v
display_title	gravityforms.php	/^    public static function get_form($form_id, $display_title=true, $display_description=true, $force_display=false, $field_values=null, $ajax=false, $tabindex = 1){$/;"	v
display_title	gravityforms.php	/^function gravity_form($id, $display_title=true, $display_description=true, $display_inactive=false, $field_values=null, $ajax=false, $tabindex = 1, $echo = true){$/;"	v
display_total	entry_list.php	/^        $display_total = ceil($total_count \/ $page_size);$/;"	v
display_upgrade_message	includes/addon/class-gf-auto-upgrade.php	/^    private function display_upgrade_message($plugin_name, $plugin_title, $version, $message, $localization_namespace){$/;"	f
display_value	entry_detail.php	/^                                $display_value =  empty($display_value) && $display_value !== "0" ? "&nbsp;" : $display_value;$/;"	v
display_value	entry_detail.php	/^                            $display_value = GFCommon::get_lead_field_display($field, $value, $lead["currency"]);$/;"	v
display_value	entry_detail.php	/^                            $display_value = apply_filters("gform_entry_field_value", $display_value, $field, $lead, $form);$/;"	v
display_value	entry_detail.php	/^                            if($display_empty_fields || !empty($display_value) || $display_value === "0"){$/;"	v
div_id	includes/addon/class-gf-payment-addon.php	/^        $div_id          = "gquiz-results-chart-field-score-frequencies";$/;"	v
div_id	includes/addon/class-gf-results.php	/^                    $div_id          = "gresults-results-chart-field-" . $field["id"];$/;"	v
divider	form_settings.php	/^                    $divider = $key == $last_key ? '' : " | ";$/;"	v
divider	gravityforms.php	/^                        $divider = $key == $last_key ? '' : " | ";$/;"	v
divider	gravityforms.php	/^                $divider = $key == $last_key ? '' : " | ";$/;"	v
divider	notification.php	/^                    $divider = $key == $last_key ? '' : " | ";$/;"	v
dl	includes/phpqrcode/phpqrcode.php	/^            $dl = QRspec::rsDataCodes1($spec);$/;"	v
dl	includes/phpqrcode/phpqrcode.php	/^            $dl = QRspec::rsDataCodes2($spec);$/;"	v
do_action	common.php	/^        $do_action = ($logic["logicType"] == "all" && $match_count == sizeof($logic["rules"]) ) || ($logic["logicType"] == "any"  && $match_count > 0);$/;"	v
do_action	forms_model.php	/^        $do_action = ($logic["logicType"] == "all" && $match_count == sizeof($logic["rules"]) ) || ($logic["logicType"] == "any"  && $match_count > 0);$/;"	v
do_conditional_logic	common.php	/^    public static function send_notifications($notification_ids, $form, $lead, $do_conditional_logic = true, $event = "form_submission"){$/;"	v
do_encode	currency.php	/^    public function to_money($number, $do_encode=false){$/;"	v
do_strip	forms_model.php	/^		$do_strip = apply_filters("gform_strip_script_tag", true, $string);$/;"	v
do_stripslashes	gravityforms.php	/^function rgpost($name, $do_stripslashes=true){$/;"	v
donation	form_display.php	/^                            $donation = GFCommon::to_number($value);$/;"	v
donation	js/forms.js	/^    "donation"  :       ".conditional_logic_field_setting, .donation_field_type_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
donation_class	form_display.php	/^        $donation_class = $field["type"] == "donation" ? "gfield_price gfield_price_{$form["id"]}_{$field["id"]} gfield_donation_{$form["id"]}_{$field["id"]}" : "";$/;"	v
drag_drop_id	common.php	/^                    $drag_drop_id = 'gform_drag_drop_area_' . $form_id . "_" . $id;$/;"	v
drawCharts	includes/addon/js/gaddon_results.js	/^    drawCharts: function () {$/;"	m	class:gresults
drop_index	gravityforms.php	/^    public static function drop_index($table, $index){$/;"	f
drop_tables	forms_model.php	/^    public static function drop_tables(){$/;"	f
dropdown	form_detail.php	/^        $dropdown = wp_dropdown_categories(array("class"=>"gfield_rule_select gfield_rule_value_dropdown gfield_category_dropdown", "orderby"=> "name", "id"=> $id, "name"=> $id, "selected"=>$selected, "hierarchical"=>true, "hide_empty"=>0, "echo"=>false));$/;"	v
dropdown	notification.php	/^        $dropdown = wp_dropdown_categories(array("class"=>"gfield_routing_select gfield_routing_value_dropdown gfield_category_dropdown", "orderby"=> "name", "id"=> $id, "selected"=>$selected, "hierarchical"=>true, "hide_empty"=>0, "echo"=>false));$/;"	v
dropdown_display	common.php	/^                    $dropdown_display = rgget("dateType", $field) == "datedropdown" ? "inline" : "none";$/;"	v
dumpMask	includes/phpqrcode/phpqrcode.php	/^        public static function dumpMask($frame)$/;"	f
duplicate_disabled	form_display.php	/^        $duplicate_disabled = array('captcha', 'post_title', 'post_content', 'post_excerpt', 'total', 'shipping', 'creditcard');$/;"	v
duplicate_field	form_detail.php	/^    public static function duplicate_field(){$/;"	f
duplicate_field	gravityforms.php	/^    public static function duplicate_field(){$/;"	f
duplicate_field_link	form_display.php	/^        $duplicate_field_link = !in_array($field['type'], $duplicate_disabled) ? "<a class='field_duplicate_icon' id='gfield_duplicate_$id' title='" . __("click to duplicate this field", "gravityforms") . "' href='#' onclick='StartDuplicateField(this); return false;'><i class='fa fa-files-o fa-lg'><\/i><\/a>" : "";$/;"	v
duplicate_field_link	form_display.php	/^        $duplicate_field_link = apply_filters("gform_duplicate_field_link", $duplicate_field_link);$/;"	v
duplicate_form	forms_model.php	/^    public static function duplicate_form($form_id){$/;"	f
duplicate_notification	notification.php	/^    public static function duplicate_notification($notification_id, $form_id) {$/;"	f
duplicate_submenus	includes/addon/class-gf-results.php	/^                $duplicate_submenus = wp_filter_object_list( rgars($menu_items, "results\/sub_menu_items") , array("label" => $sub_menu_items[0]["label"] ) );$/;"	v
duplicate_url	form_settings.php	/^        $duplicate_url = add_query_arg(array("cid" => 0, "duplicatedcid" => $item["id"]));$/;"	v
duplicated_cid	form_settings.php	/^        $duplicated_cid = rgget("duplicatedcid");$/;"	v
during	includes/addon/class-gf-payment-addon.php	/^	 * NOTE: For plugins overriding the redirect_url() function, there could be inconsistencies when using this function during the submission process$/;"	f
dynamic_query	form_display.php	/^			$dynamic_query = GFCommon::replace_variables( trim( $form['confirmation']['queryString'] ), $form, $lead, true, false, false, 'text' );$/;"	v
e	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f
eat8	includes/phpqrcode/phpqrcode.php	/^        public function eat8()$/;"	f
eatAn	includes/phpqrcode/phpqrcode.php	/^        public function eatAn()$/;"	f
eatKanji	includes/phpqrcode/phpqrcode.php	/^        public function eatKanji()$/;"	f
eatNum	includes/phpqrcode/phpqrcode.php	/^        public function eatNum()$/;"	f
ecc	includes/phpqrcode/phpqrcode.php	/^                $ecc = array_slice($this->ecccode,$eccPos);$/;"	v
ecc	includes/phpqrcode/phpqrcode.php	/^            $ecc  = self::getECCLength($version, $level);$/;"	v
ecc	includes/phpqrcode/phpqrcode.php	/^            $this->ecc = $ecc;$/;"	v
ecc	includes/phpqrcode/phpqrcode.php	/^        public $ecc = array();$/;"	v
eccLength	includes/phpqrcode/phpqrcode.php	/^            $this->eccLength = $el;$/;"	v
eccLength	includes/phpqrcode/phpqrcode.php	/^            $this->eccLength = QRspec::rsEccLength($spec);$/;"	v
eccLength	includes/phpqrcode/phpqrcode.php	/^        public $eccLength;$/;"	v
eccLevel	includes/phpqrcode/phpqrcode.php	/^                $eccLevel = $mode[1];$/;"	v
eccLevel	includes/phpqrcode/phpqrcode.php	/^            $eccLevel = 'L';$/;"	v
eccPos	includes/phpqrcode/phpqrcode.php	/^            $eccPos = 0;$/;"	v
eccTable	includes/phpqrcode/phpqrcode.php	/^        public static $eccTable = array($/;"	v
ecccode	includes/phpqrcode/phpqrcode.php	/^                $this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);$/;"	v
ecccode	includes/phpqrcode/phpqrcode.php	/^            $this->ecccode = array_fill(0, $this->eccLength, 0);$/;"	v
ecccode	includes/phpqrcode/phpqrcode.php	/^        public $ecccode = array();$/;"	v
echo	includes/addon/class-gf-addon.php	/^	 * @param bool  $echo  = true - true to echo the output to the screen, false to simply return the contents as a string$/;"	v
echo	includes/addon/class-gf-addon.php	/^	protected function settings_checkbox( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^     * @param bool $echo = true - true to echo the output to the screen, false to simply return the contents as a string$/;"	v
echo	includes/addon/class-gf-addon.php	/^    * @param bool $echo = true - true to echo the output to the screen, false to simply return the contents as a string$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_hidden($field, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_radio($field, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_save( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_select( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_text($field, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    protected function settings_textarea($field, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    public function list_row_class($object_id, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    public function lock_info($object_id, $echo = true) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    public function settings_dynamic_field_map( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    public function settings_field_map( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-addon.php	/^    public function settings_field_select( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-feed-addon.php	/^    protected function settings_feed_condition( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-payment-addon.php	/^    public function settings_billing_cycle( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-payment-addon.php	/^    public function settings_setup_fee( $field, $echo = true ) {$/;"	v
echo	includes/addon/class-gf-payment-addon.php	/^    public function settings_trial( $field, $echo = true ) {$/;"	v
echo	includes/locking/class-gf-locking.php	/^    public function list_row_class($object_id, $echo = true) {$/;"	v
echo	includes/locking/class-gf-locking.php	/^    public function lock_info($object_id, $echo = true) {$/;"	v
echo_if	common.php	/^    public static function echo_if($condition, $text) {$/;"	f
edit_capabilities	gravityforms.php	/^		$edit_capabilities = array("gravityforms_edit_forms");$/;"	v
edit_link	export.php	/^                    $edit_link = $count == 1 ? "<a href='admin.php?page=gf_edit_forms&id={$forms[0]["id"]}'>" . __("Edit Form", "gravityforms") . "<\/a>" : "";$/;"	v
edit_url	form_settings.php	/^        $edit_url = add_query_arg(array("cid" => $item["id"]));$/;"	v
edit_url	includes/addon/class-gf-addon-locking.php	/^        $edit_url     = isset($config["edit_url"]) ? $config["edit_url"] : "";$/;"	v
edit_url	includes/addon/class-gf-feed-addon.php	/^        $edit_url = add_query_arg(array("fid" => $feed_id));$/;"	v
edit_url	includes/locking/class-gf-locking.php	/^        $edit_url = $this->_edit_url;$/;"	v
edit_url	includes/locking/class-gf-locking.php	/^    public function __construct($object_type, $redirect_url, $edit_url = "", $capabilities = array()) {$/;"	v
edit_url	includes/locking/locking.php	/^        $edit_url     = admin_url("admin.php?page=gf_settings");$/;"	v
edit_url	includes/locking/locking.php	/^        $edit_url     = admin_url(sprintf("admin.php?page=gf_edit_forms&id=%d", $form_id));$/;"	v
edit_url	includes/locking/locking.php	/^        $edit_url     = admin_url(sprintf("admin.php?page=gf_edit_forms&view=settings&subview=%s&id=%d", esc_html($subview), $form_id));$/;"	v
edit_url	includes/locking/locking.php	/^        $edit_url     = admin_url(sprintf("admin.php?page=gf_entries&view=entry&id=%d&lid=%d", $form_id, $entry_id));$/;"	v
edit_url	notification.php	/^        $edit_url = add_query_arg(array("nid" => $item["id"]));$/;"	v
eightbit	includes/phpqrcode/phpqrcode.php	/^        public $eightbit = false;$/;"	v
el	includes/phpqrcode/phpqrcode.php	/^            $el = QRspec::rsEccCodes1($spec);$/;"	v
el	includes/phpqrcode/phpqrcode.php	/^            $el = QRspec::rsEccCodes2($spec);$/;"	v
element	includes/webapi/webapi.php	/^                        $element = array();$/;"	v
element	includes/webapi/webapi.php	/^                    $element            = array();$/;"	v
element	includes/webapi/webapi.php	/^                $element               = array();$/;"	v
elements	includes/webapi/webapi.php	/^                $elements             = array();$/;"	v
email	js/forms.js	/^    "email" :           ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .email_confirm_setting, .admin_label_setting, .size_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
email	notification.php	/^            $email = trim($email);$/;"	v
email_fields	entry_detail.php	/^                                        $email_fields = GFCommon::get_email_fields($form);$/;"	v
email_fields	notification.php	/^        <?php $email_fields = apply_filters("gform_email_fields_notification_admin_{$form["id"]}", apply_filters("gform_email_fields_notification_admin", GFCommon::get_email_fields($form), $form), $form); ?>$/;"	v
email_from	entry_detail.php	/^                    $email_from = $current_user->user_email;$/;"	v
email_subject	entry_detail.php	/^                    $email_subject = stripslashes($_POST["gentry_email_subject"]);$/;"	v
email_to	common.php	/^            $email_to = RGFormsModel::get_lead_field_value($lead, $source_field);$/;"	v
email_to	common.php	/^            $email_to = array();$/;"	v
email_to	common.php	/^            $email_to = join(",", $email_to);$/;"	v
email_to	common.php	/^            $email_to = rgempty("toField", $form["notification"]) ? rgget("to", $form["notification"]) : rgget("toField", $form["notification"]);$/;"	v
email_to	common.php	/^        $email_to = GFCommon::replace_variables($email_to, $form, $lead, false, false);$/;"	v
email_to	common.php	/^        $email_to = rgar($notification, "to");$/;"	v
email_to	entry_detail.php	/^                    $email_to = $_POST["gentry_email_notes_to"];$/;"	v
emailparts	recaptchalib.php	/^	$emailparts = _recaptcha_mailhide_email_parts ($email);$/;"	v
emails	common.php	/^		$emails = explode( ',', $email_list );$/;"	v
emails	entry_detail.php	/^                                        $emails = array();$/;"	v
emails	entry_detail.php	/^    public static function notes_grid( $notes, $is_editable, $emails = null, $subject = '' ){$/;"	v
emails	notification.php	/^        $emails = explode(",", $text);$/;"	v
embed_post	common.php	/^            $embed_post = $post;$/;"	v
embed_post	common.php	/^            $embed_post = array();$/;"	v
embed_post	common.php	/^            $embed_post = get_post($post_id);$/;"	v
enable_animation_checked	form_settings.php	/^			$enable_animation_checked = 'checked="checked"';$/;"	v
enable_animation_checked	form_settings.php	/^        $enable_animation_checked = "";$/;"	v
enabled_by_filter	common.php	/^        $enabled_by_filter = apply_filters("gform_akismet_enabled_$form_id", apply_filters("gform_akismet_enabled", $enabled_by_setting));$/;"	v
enabled_by_setting	common.php	/^        $enabled_by_setting = get_option('rg_gforms_enable_akismet') === false ? true : get_option('rg_gforms_enable_akismet') == true;$/;"	v
enabled_field	includes/addon/class-gf-payment-addon.php	/^        $enabled_field = array($/;"	v
enc	includes/phpqrcode/phpqrcode.php	/^            $enc = QRencode::factory($level, $size, $margin);$/;"	v
enc	includes/phpqrcode/phpqrcode.php	/^            $enc = new QRencode();$/;"	v
enc	recaptchalib.php	/^	$enc=MCRYPT_RIJNDAEL_128;$/;"	v
encode	includes/phpqrcode/phpqrcode.php	/^        public function encode($intext, $outfile = false)$/;"	f
encodeBitStream	includes/phpqrcode/phpqrcode.php	/^        public function encodeBitStream($version)$/;"	f
encodeInput	includes/phpqrcode/phpqrcode.php	/^        public function encodeInput(QRinput $input)$/;"	f
encodeMask	includes/phpqrcode/phpqrcode.php	/^        public function encodeMask(QRinput $input, $mask)$/;"	f
encodeMode8	includes/phpqrcode/phpqrcode.php	/^        public function encodeMode8($version)$/;"	f
encodeModeAn	includes/phpqrcode/phpqrcode.php	/^        public function encodeModeAn($version)$/;"	f
encodeModeKanji	includes/phpqrcode/phpqrcode.php	/^        public function encodeModeKanji($version)$/;"	f
encodeModeNum	includes/phpqrcode/phpqrcode.php	/^        public function encodeModeNum($version)$/;"	f
encodeModeStructure	includes/phpqrcode/phpqrcode.php	/^        public function encodeModeStructure()$/;"	f
encodePNG	includes/phpqrcode/phpqrcode.php	/^        public function encodePNG($intext, $outfile = false,$saveandprint=false)$/;"	f
encodeRAW	includes/phpqrcode/phpqrcode.php	/^        public function encodeRAW($intext, $outfile = false)$/;"	f
encodeString	includes/phpqrcode/phpqrcode.php	/^        public function encodeString($string, $version, $level, $hint, $casesensitive)$/;"	f
encodeString8bit	includes/phpqrcode/phpqrcode.php	/^        public function encodeString8bit($string, $version, $level)$/;"	f
encode_merge_tag	common.php	/^    public static function encode_merge_tag($text){$/;"	f
encode_rs_char	includes/phpqrcode/phpqrcode.php	/^        public function encode_rs_char($data, &$parity)$/;"	f
encrypt	common.php	/^    public static function encrypt( $text ) {$/;"	f
encrypt_password	forms_model.php	/^                $encrypt_password = apply_filters( 'gform_encrypt_password', false, $field, $form );$/;"	v
encrypted_fields	forms_model.php	/^            $encrypted_fields = array();$/;"	v
encrypted_fields	forms_model.php	/^        $encrypted_fields = array_merge( self::get_encrypted_fields( $entry_id ), $field_ids );$/;"	v
encrypted_fields	forms_model.php	/^        $encrypted_fields = gform_get_meta( $entry_id, '_encrypted_fields' );$/;"	v
encrypted_fields	forms_model.php	/^        $encrypted_fields = self::get_encrypted_fields( $entry_id );$/;"	v
encrypted_value	common.php	/^			$encrypted_value = base64_encode( $wpdb->get_var( $wpdb->prepare('SELECT AES_ENCRYPT(%s, %s) AS data', $text, wp_salt( 'nonce' ) ) ) );$/;"	v
encrypted_value	common.php	/^			$encrypted_value = trim( base64_encode( mcrypt_encrypt( MCRYPT_RIJNDAEL_256, $key, $text, MCRYPT_MODE_ECB, mcrypt_create_iv( $iv_size, MCRYPT_RAND ) ) ) );$/;"	v
end	form_detail.php	/^        $end = $start + $per_page;$/;"	v
end	includes/webapi/webapi.php	/^        public static function end($status, $response) {$/;"	f
end_am_selected	form_settings.php	/^	        $end_am_selected = 'selected="selected"';$/;"	v
end_am_selected	form_settings.php	/^        $end_am_selected = "";$/;"	v
end_date	export.php	/^        $end_date = empty($_POST["export_date_end"]) ? "" : self::get_gmt_date($_POST["export_date_end"] . " 23:59:59");$/;"	v
end_date	forms_model.php	/^                $end_date =  $end_date->format('Y-m-d H:i:s');$/;"	v
end_date	forms_model.php	/^                $end_date =  $end_date->format('Y-m-d') . " 23:59:59";$/;"	v
end_date	forms_model.php	/^            $end_date = new DateTime($search_criteria["end_date"]);$/;"	v
end_date	includes/addon/class-gf-results.php	/^                $end_date   = rgpost("end");$/;"	v
end_date	includes/addon/class-gf-results.php	/^            $end_date   = rgget("end");$/;"	v
end_date_str	forms_model.php	/^            $end_date_str = $end_date->format('Y-m-d');$/;"	v
end_datetime_str	forms_model.php	/^            $end_datetime_str = $end_date->format('Y-m-d H:i:s');$/;"	v
end_hour_dd	form_settings.php	/^        $end_hour_dd = "";$/;"	v
end_minute_dd	form_settings.php	/^        $end_minute_dd = "";$/;"	v
end_pm_selected	form_settings.php	/^			$end_pm_selected = 'selected="selected"';$/;"	v
end_pm_selected	form_settings.php	/^        $end_pm_selected = "";$/;"	v
ends_with	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
ends_with	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
enqueue_admin_scripts	gravityforms.php	/^    public static function enqueue_admin_scripts() {$/;"	f
enqueue_admin_scripts	includes/addon/class-gf-results.php	/^        public function enqueue_admin_scripts() {$/;"	f
enqueue_form_scripts	form_display.php	/^    public static function enqueue_form_scripts( $form, $ajax = false ){$/;"	f
enqueue_list_scripts	includes/locking/class-gf-locking.php	/^    public function enqueue_list_scripts() {$/;"	f
enqueue_preview_styles	includes/addon/class-gf-addon.php	/^    public function enqueue_preview_styles($preview_styles, $form) {$/;"	f
enqueue_print_styles	includes/addon/class-gf-addon.php	/^    public function enqueue_print_styles($print_styles, $form) {$/;"	f
enqueue_scripts	form_display.php	/^    public static function enqueue_scripts(){$/;"	f
enqueue_scripts	gravityforms.php	/^    public static function enqueue_scripts(){$/;"	f
enqueue_scripts	includes/addon/class-gf-addon.php	/^    public function enqueue_scripts($form="", $is_ajax=false){$/;"	f
enqueue_scripts	includes/locking/class-gf-locking.php	/^    public function enqueue_scripts() {$/;"	f
enqueue_view_page_scripts	includes/locking/class-gf-locking.php	/^    public function enqueue_view_page_scripts() {$/;"	f
ensure_tables_exist	forms_model.php	/^    public static function ensure_tables_exist(){$/;"	f
ensure_wp_version	common.php	/^    public static function ensure_wp_version(){$/;"	f
entries	includes/api.php	/^        $entries               = self::get_entries(0, $search_criteria, null, $paging);$/;"	v
entries	includes/api.php	/^        $entries = GFFormsModel::search_leads($form_ids, $search_criteria, $sorting, $paging);$/;"	v
entries	includes/webapi/webapi.php	/^            $entries               = rgar($output, "entries");$/;"	v
entries_capabilities	gravityforms.php	/^		$entries_capabilities = array('gravityforms_view_entries','gravityforms_edit_entries','gravityforms_delete_entries');$/;"	v
entries_left	includes/addon/class-gf-results.php	/^            $entries_left = $count_search_leads - $offset;$/;"	v
entry	forms_model.php	/^        $entry = self::get_lead($entry_id);$/;"	v
entry	includes/addon/class-gf-feed-addon.php	/^            $entry = GFFormsModel::create_lead($form);$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^				$entry = $this->process_capture( $this->authorization, $feed, $this->current_submission_data, $form, $entry );$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^				$entry = $this->process_subscription( $this->authorization, $feed, $this->current_submission_data, $form, $entry );$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^		$entry = GFFormsModel::create_lead( $form );$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^            $entry = $this->start_subscription( $entry, $subscription );$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^        $entry = GFAPI::get_entry( $action['entry_id'] );$/;"	v
entry	includes/addon/class-gf-payment-addon.php	/^        $entry = GFAPI::get_entry($entry_id);$/;"	v
entry	includes/api.php	/^        $entry = GFFormsModel::get_lead($entry_id);$/;"	v
entry	includes/api.php	/^        $entry = apply_filters("gform_entry_pre_update", $entry, $original_entry);$/;"	v
entry	includes/phpqrcode/phpqrcode.php	/^                $entry = new QRinputItem($mode, $size, $data);$/;"	v
entry	includes/phpqrcode/phpqrcode.php	/^                $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf);$/;"	v
entry_count	common.php	/^    	$entry_count = GFFormsModel::get_lead_count_all_forms("active");$/;"	v
entry_count	entry_list.php	/^                $entry_count = count($leads) > 1 ? sprintf(__("%d entries", "gravityforms"), count($leads)) : __("1 entry", "gravityforms");$/;"	v
entry_count	export.php	/^        $entry_count = GFAPI::count_entries($form_id, $search_criteria);$/;"	v
entry_count	form_display.php	/^            $entry_count = RGFormsModel::get_lead_count($form['id'], "", null, null, $range["start_date"], $range["end_date"]);$/;"	v
entry_count	forms_model.php	/^        $entry_count = $wpdb->get_results($sql);$/;"	v
entry_count	includes/addon/class-gf-results.php	/^                $entry_count = $data["entry_count"];$/;"	v
entry_count	includes/addon/class-gf-results.php	/^                $entry_count = $offset;$/;"	v
entry_count	includes/addon/class-gf-results.php	/^            $entry_count   = $data["entry_count"];$/;"	v
entry_count	includes/addon/class-gf-results.php	/^            $entry_count = 0;$/;"	v
entry_count	includes/webapi/webapi.php	/^                $entry_count = GFAPI::count_entries($form_ids, $search);$/;"	v
entry_created	includes/webapi/webapi.php	/^        public function entry_created($entry, $form) {$/;"	f
entry_detail_id	forms_model.php	/^        $entry_detail_id = $wpdb->get_var($sql);$/;"	v
entry_detail_pagination_link	entry_detail.php	/^    public static function entry_detail_pagination_link($pos, $label = '', $class = '', $icon = '') {$/;"	f
entry_elements	includes/webapi/webapi.php	/^            $entry_elements    = array();$/;"	v
entry_id	includes/addon/class-gf-payment-addon.php	/^        $entry_id = $_POST["entry_id"];$/;"	v
entry_id	includes/addon/class-gf-payment-addon.php	/^        $entry_id = $wpdb->get_var( $sql );$/;"	v
entry_id	includes/addon/class-gf-payment-addon.php	/^\/\/            $entry_id = $wpdb->get_var( $sql );$/;"	v
entry_id	includes/api.php	/^            $entry_id = $entry['id'];$/;"	v
entry_id	includes/api.php	/^        $entry_id    = $wpdb->insert_id;$/;"	v
entry_id	includes/api.php	/^    public static function update_entry($entry, $entry_id = null) {$/;"	v
entry_id	includes/locking/locking.php	/^        $entry_id     = $this->get_object_id();$/;"	v
entry_id	includes/webapi/webapi.php	/^        public function put_entries($data, $entry_id = null) {$/;"	v
entry_ids	forms_model.php	/^        $entry_ids = array();$/;"	v
entry_ids	includes/api.php	/^        $entry_ids = array();$/;"	v
entry_ids_str	forms_model.php	/^    $entry_ids_str = join(",", $entry_ids);$/;"	v
entry_info	includes/addon/class-gf-payment-addon.php	/^    public function entry_info($form_id, $entry) {$/;"	f
entry_limit_validation	form_display.php	/^            $entry_limit_validation = self::validate_entry_limit($form);$/;"	v
entry_meta	common.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_meta	export.php	/^            $entry_meta = GFFormsModel::get_entry_meta($form["id"]);$/;"	v
entry_meta	form_settings.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_meta	form_settings.php	/^        $entry_meta = apply_filters("gform_entry_meta_conditional_logic_confirmations", $entry_meta, $form, $confirmation_id);$/;"	v
entry_meta	forms_model.php	/^        $entry_meta          = GFFormsModel::get_entry_meta(is_array($form_id) ? 0 : $form_id);$/;"	v
entry_meta	forms_model.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_meta	forms_model.php	/^        $entry_meta = self::get_entry_meta($form["id"]);$/;"	v
entry_meta	forms_model.php	/^        $entry_meta = self::get_entry_meta($form_id);$/;"	v
entry_meta	forms_model.php	/^        $entry_meta = self::get_entry_meta(is_array($form_id) ? 0 : $form_id);$/;"	v
entry_meta	includes/addon/class-gf-addon.php	/^            $entry_meta = $this->get_entry_meta(array(), $form->id);$/;"	v
entry_meta	includes/addon/class-gf-addon.php	/^        $entry_meta = GFFormsModel::get_entry_meta( $form["id"] );$/;"	v
entry_meta	includes/addon/class-gf-feed-addon.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form["id"]);$/;"	v
entry_meta	includes/api.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_meta	notification.php	/^        $entry_meta = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_meta	notification.php	/^        $entry_meta = apply_filters("gform_entry_meta_conditional_logic_notifications", $entry_meta, $form, $notification_id);$/;"	v
entry_meta	select_columns.php	/^		$entry_meta = GFFormsModel::get_entry_meta($form["id"]);$/;"	v
entry_meta_data_rows	forms_model.php	/^        $entry_meta_data_rows = gform_get_meta_values_for_entries($entry_ids, $meta_keys);$/;"	v
entry_meta_filters	common.php	/^        $entry_meta_filters = self::get_entry_meta_filter_settings($form_id);$/;"	v
entry_meta_keys	common.php	/^        $entry_meta_keys = array_keys(GFFormsModel::get_entry_meta($form["id"]));$/;"	v
entry_meta_sql_join	forms_model.php	/^            $entry_meta_sql_join = $wpdb->prepare("$/;"	v
entry_meta_sql_join	forms_model.php	/^            $entry_meta_sql_join = $wpdb->prepare("INNER JOIN$/;"	v
entry_meta_sql_join	forms_model.php	/^        $entry_meta_sql_join = "";$/;"	v
entry_metas	forms_model.php	/^            $entry_metas = GFFormsModel::get_entry_meta($form_id);$/;"	v
entry_post_save	includes/addon/class-gf-payment-addon.php	/^    public function entry_post_save($entry, $form){$/;"	f
entry_updated	includes/webapi/webapi.php	/^        public function entry_updated($form, $lead_id) {$/;"	f
entry_url	common.php	/^        $entry_url = get_bloginfo("wpurl") . "\/wp-admin\/admin.php?page=gf_entries&view=entry&id=" . $form["id"] . "&lid=" . rgar($lead,"id");$/;"	v
epsilon	common.php	/^        $epsilon = 0.00001;$/;"	v
eraseCookie	entry_detail.php	/^            function eraseCookie(name) {$/;"	f
err	includes/phpqrcode/phpqrcode.php	/^                $err = ob_get_contents();$/;"	v
error	common.php	/^            $error = new WP_Error( 'invalid_from', 'Cannot send email because the FROM address is invalid.' );$/;"	v
error	common.php	/^            $error = new WP_Error( 'invalid_to', 'Cannot send email because the TO address is invalid.' );$/;"	v
error	common.php	/^            $error = new WP_Error( 'missing_subject_and_message', 'Cannot send email because there is no SUBJECT and no MESSAGE.' );$/;"	v
error	common.php	/^        $error = false;$/;"	v
error	gravityforms.php	/^            $error = "Current database user does not have necessary permissions to modify (ALTER) tables. Gravity Forms requires that the database user has CREATE and ALTER permissions. If you need assistance in changing database user permissions, contact your hosting provider.";$/;"	v
error	gravityforms.php	/^        $error = "Current database user does not have necessary permissions to create tables. Gravity Forms requires that the database user has CREATE and ALTER permissions. If you need assistance in changing database user permissions, contact your hosting provider.";$/;"	v
error	includes/addon/class-gf-addon.php	/^        $error = $this->get_field_errors( $field );$/;"	v
error	includes/locking/class-gf-locking.php	/^                $error = array($/;"	v
error	recaptchalib.php	/^	var $error;$/;"	v
error	recaptchalib.php	/^function recaptcha_get_html ($pubkey, $error = null, $use_ssl = false, $lang='en')$/;"	v
error_class	form_display.php	/^        $error_class = rgget("failed_validation", $field) ? "gfield_error" : "";$/;"	v
error_code	includes/webapi/webapi.php	/^            $error_code = $wp_error->get_error_code();$/;"	v
error_message	includes/addon/class-gf-addon.php	/^            $error_message = __( 'This field is required.', 'gravityforms' );$/;"	v
error_message	includes/addon/class-gf-addon.php	/^    protected function set_field_error( $field, $error_message = '' ) {$/;"	v
errorpart	recaptchalib.php	/^		$errorpart = "&amp;error=" . $error;$/;"	v
errorpart	recaptchalib.php	/^	$errorpart = "";$/;"	v
errors	common.php	/^            $errors = self::$errors;$/;"	v
errors	common.php	/^        $errors = apply_filters('gform_admin_error_messages', $errors);$/;"	v
errors	common.php	/^    public static $errors = array();$/;"	v
esc_like	common.php	/^    public static function esc_like( $value ) {$/;"	f
estimateBitStreamSize	includes/phpqrcode/phpqrcode.php	/^        public function estimateBitStreamSize($version)$/;"	f
estimateBitStreamSizeOfEntry	includes/phpqrcode/phpqrcode.php	/^        public function estimateBitStreamSizeOfEntry($version)$/;"	f
estimateBitsMode8	includes/phpqrcode/phpqrcode.php	/^        public static function estimateBitsMode8($size)$/;"	f
estimateBitsModeAn	includes/phpqrcode/phpqrcode.php	/^        public static function estimateBitsModeAn($size)$/;"	f
estimateBitsModeKanji	includes/phpqrcode/phpqrcode.php	/^        public function estimateBitsModeKanji($size)$/;"	f
estimateBitsModeNum	includes/phpqrcode/phpqrcode.php	/^        public static function estimateBitsModeNum($size)$/;"	f
estimateVersion	includes/phpqrcode/phpqrcode.php	/^        public function estimateVersion()$/;"	f
evaluateSymbol	includes/phpqrcode/phpqrcode.php	/^        public function evaluateSymbol($width, $frame)$/;"	f
evaluate_conditional_logic	common.php	/^    public static function evaluate_conditional_logic($logic, $form, $lead) {$/;"	f
event_style	notification.php	/^        $event_style = count($notification_events) == 1 ? "style='display:none'" : "";$/;"	v
exclude	common.php	/^            $exclude = array();$/;"	v
exclude	common.php	/^        $exclude = apply_filters("gform_merge_tag_list_exclude", $exclude, $element_id, $fields);$/;"	v
exclude_field_types	common.php	/^            $exclude_field_types = array();$/;"	v
exclude_types	common.php	/^        $exclude_types = array("rank", "page", "html");$/;"	v
execution_time	includes/addon/class-gf-results.php	/^                $execution_time = ($time_end - $time_start);$/;"	v
existing_capabilities	includes/addon/class-gf-results.php	/^                    $existing_capabilities                   = $menu_items["results"]["capabilities"];$/;"	v
existing_link_class	includes/addon/class-gf-results.php	/^                    $existing_link_class = $menu_items["results"]["link_class"];$/;"	v
existing_sub_menu_items	includes/addon/class-gf-results.php	/^                    $existing_sub_menu_items                 = $menu_items["results"]["sub_menu_items"];$/;"	v
expiration_date	common.php	/^                        $expiration_date = explode("\/", $expiration_date);$/;"	v
expiration_date	common.php	/^                    $expiration_date = rgget($field["id"] . ".2",$value);$/;"	v
expiration_date	common.php	/^                $expiration_date = "";$/;"	v
expiration_date	form_display.php	/^                            $expiration_date = rgpost("input_" . $field["id"] . "_2");$/;"	v
expiration_field	common.php	/^                $expiration_field =  "<span class='ginput_full{$class_suffix} ginput_cardextras' id='{$field_id}_2_container'>".$/;"	v
expiration_month	common.php	/^                        $expiration_month = $expiration_date[0];$/;"	v
expiration_month	common.php	/^                $expiration_month = "";$/;"	v
expiration_year	common.php	/^                        $expiration_year = $expiration_date[1];$/;"	v
expiration_year	common.php	/^                $expiration_year = "";$/;"	v
expire_subscription	includes/addon/class-gf-payment-addon.php	/^    public function expire_subscription( $entry, $action ) {$/;"	f
expires	includes/webapi/webapi.php	/^            $expires = (int)rgget("expires");$/;"	v
expiry	includes/webapi/webapi.php	/^                $expiry = time();$/;"	v
expiry	includes/webapi/webapi.php	/^        public function update_results_cache_meta($form_id, $fields, $expiry = null) {$/;"	v
export_form_page	export.php	/^    public static function export_form_page(){$/;"	f
export_lead_page	export.php	/^    public static function export_lead_page(){$/;"	f
export_page	export.php	/^    public static function export_page() {$/;"	f
export_page	gravityforms.php	/^    public static function export_page(){$/;"	f
ext	common.php	/^		$ext = strtolower( pathinfo( $file_name, PATHINFO_EXTENSION ) );$/;"	v
extension	forms_model.php	/^            $extension = "." . $extension;$/;"	v
extension	forms_model.php	/^        $extension = rgar($file_info, 'extension');$/;"	v
extra_params	recaptchalib.php	/^function recaptcha_check_answer ($privkey, $remoteip, $challenge, $response, $extra_params = array())$/;"	v
f_id	includes/webapi/webapi.php	/^                $f_id       = empty($form_id) ? $feed["form_id"] : $form_id;$/;"	v
fact	includes/phpqrcode/phpqrcode.php	/^                        $fact = (int)($this->runLength[$i] \/ 3);$/;"	v
factory	includes/phpqrcode/phpqrcode.php	/^        public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	f
fail_payment	includes/addon/class-gf-payment-addon.php	/^    public function fail_payment( $entry, $action ){$/;"	f
fail_subscription_payment	includes/addon/class-gf-payment-addon.php	/^    public function fail_subscription_payment( $entry, $action ) {$/;"	f
failed_honeypot	form_display.php	/^            $failed_honeypot = rgar($form,"enableHoneypot") && !self::validate_honeypot($form);$/;"	v
failed_state_validation	form_display.php	/^    public static function failed_state_validation($form_id, $field, $value){$/;"	f
failed_validation	form_settings.php	/^                $failed_validation = true;$/;"	v
failed_validation	form_settings.php	/^            $failed_validation = true;$/;"	v
failed_validation	form_settings.php	/^        $failed_validation = false;$/;"	v
failed_validation_page	form_display.php	/^                $failed_validation_page = $field["pageNumber"];$/;"	v
failed_validation_page	form_display.php	/^            $failed_validation_page = $page_number;$/;"	v
fc	common.php	/^    	$fc = abs($active_count) + abs($inactive_count);$/;"	v
fcr	includes/phpqrcode/phpqrcode.php	/^        public $fcr;                 \/\/ First consecutive root, index form$/;"	v
fee_amount	includes/addon/class-gf-feed-addon.php	/^				$fee_amount = $product_price * $quantity;$/;"	v
fee_amount	includes/addon/class-gf-feed-addon.php	/^		$fee_amount   = 0;$/;"	v
fee_amount	includes/addon/class-gf-payment-addon.php	/^				$fee_amount = $product_price * $quantity;$/;"	v
fee_amount	includes/addon/class-gf-payment-addon.php	/^        $fee_amount = 0;$/;"	v
feed	includes/addon/class-gf-feed-addon.php	/^            $feed = GFPayPal::get_config( $form_id );$/;"	v
feed	includes/addon/class-gf-feed-addon.php	/^            $feed = GFPayPal::get_config_by_entry( $entry );$/;"	v
feed	includes/addon/class-gf-feed-addon.php	/^            $feed = false;$/;"	v
feed	includes/addon/class-gf-feed-addon.php	/^        $feed = $this->get_feed( $feed_id );$/;"	v
feed	includes/addon/class-gf-payment-addon.php	/^		$feed  = $this->get_payment_feed( $entry, $form );$/;"	v
feed	includes/addon/class-gf-payment-addon.php	/^		$feed = $this->current_feed;$/;"	v
feed	includes/addon/class-gf-payment-addon.php	/^            $feed = $this->get_payment_feed( $entry );$/;"	v
feed	includes/addon/class-gf-payment-addon.php	/^        $feed = $this->get_payment_feed($entry, $form);$/;"	v
feed_edit_page	includes/addon/class-gf-feed-addon.php	/^    protected function feed_edit_page($form, $feed_id) {$/;"	f
feed_id	includes/addon/class-gf-feed-addon.php	/^			$feed_id = $this->save_feed_settings( $feed_id, $form_id, $settings );$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^            $feed_id = $this->_multiple_feeds ? $this->get_current_feed_id() : $this->get_default_feed_id($form["id"]) ;$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^            $feed_id = 0;$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^            $feed_id = absint(rgpost("single_action_argument"));$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id  = "{id}";$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = $this->get_current_feed_id();$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = $this->maybe_save_feed_settings( $feed_id, $form['id'] );$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = $wpdb->get_var($sql);$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = rgar($item, "id");$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = rgar($new_form_settings, "id");$/;"	v
feed_id	includes/addon/class-gf-feed-addon.php	/^        $feed_id = rgpost("feed_id");$/;"	v
feed_id	includes/webapi/webapi.php	/^        public function put_feeds($feed_data, $feed_id = null) {$/;"	v
feed_ids	includes/api.php	/^                $feed_ids = array($feed_ids);$/;"	v
feed_ids	includes/webapi/webapi.php	/^            $feed_ids = array();$/;"	v
feed_list	includes/addon/class-gf-feed-addon.php	/^        $feed_list = $this->get_feed_table( $form );$/;"	v
feed_list_columns	includes/addon/class-gf-feed-addon.php	/^    protected function feed_list_columns() {$/;"	f
feed_list_columns	includes/addon/class-gf-payment-addon.php	/^    protected function feed_list_columns() {$/;"	f
feed_list_message	includes/addon/class-gf-feed-addon.php	/^    public function feed_list_message(){$/;"	f
feed_list_message	includes/addon/class-gf-payment-addon.php	/^    public function feed_list_message(){$/;"	f
feed_list_no_item_message	includes/addon/class-gf-feed-addon.php	/^    public function feed_list_no_item_message(){$/;"	f
feed_list_page	includes/addon/class-gf-feed-addon.php	/^    public function feed_list_page($form=null){$/;"	f
feed_list_title	includes/addon/class-gf-feed-addon.php	/^    public function feed_list_title(){$/;"	f
feed_meta	includes/addon/class-gf-feed-addon.php	/^        $feed_meta = $feed['meta'];$/;"	v
feed_meta_json	includes/api.php	/^        $feed_meta_json = json_encode($feed_meta);$/;"	v
feed_settings_fields	includes/addon/class-gf-feed-addon.php	/^    public function feed_settings_fields(){$/;"	f
feed_settings_fields	includes/addon/class-gf-payment-addon.php	/^    public function feed_settings_fields() {$/;"	f
feed_settings_title	includes/addon/class-gf-feed-addon.php	/^    public function feed_settings_title(){$/;"	f
feed_to_process	includes/addon/class-gf-feed-addon.php	/^				$feed_to_process = $feed;$/;"	v
feed_to_process	includes/addon/class-gf-feed-addon.php	/^		$feed_to_process = '';$/;"	v
feedback	includes/phpqrcode/phpqrcode.php	/^                    $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback);$/;"	v
feedback	includes/phpqrcode/phpqrcode.php	/^                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];$/;"	v
feedback_callback	includes/addon/class-gf-addon.php	/^        $feedback_callback = rgar($field, 'feedback_callback');$/;"	v
feeds	includes/addon/class-gf-feed-addon.php	/^		$feeds = $this->get_feeds( $entry['form_id'] );$/;"	v
feeds	includes/addon/class-gf-feed-addon.php	/^            $feeds = rgpost("feed_ids");$/;"	v
feeds	includes/addon/class-gf-feed-addon.php	/^        $feeds                 = $this->get_feeds( rgar( $form, 'id' ) );$/;"	v
feeds	includes/addon/class-gf-feed-addon.php	/^        $feeds = $this->get_feeds( $form['id'] );$/;"	v
feeds	includes/addon/class-gf-feed-addon.php	/^        $feeds = $this->get_feeds($form_id);$/;"	v
feeds	includes/addon/class-gf-payment-addon.php	/^                $feeds =  $this->get_feeds( $form['id'] );$/;"	v
feeds	includes/addon/class-gf-payment-addon.php	/^                $feeds = $this->get_feeds_by_entry( $entry['id'] );$/;"	v
feeds	includes/webapi/webapi.php	/^                $feeds = GFAPI::get_feeds(null, $form_id);$/;"	v
fg	js/form_editor.js	/^    var fg = field.simpleCaptchaFontColor == undefined ? "" : field.simpleCaptchaFontColor;$/;"	v
field	common.php	/^	            $field = GFFormsModel::get_field( $form, $key );$/;"	v
field	common.php	/^                $field = $form["fields"][$i];$/;"	v
field	common.php	/^                $field = RGFormsModel::get_field($form,$input_id);$/;"	v
field	common.php	/^            $field = RGFormsModel::get_field($form, rgget("fromNameField", $form["notification"]));$/;"	v
field	common.php	/^            $field = self::add_categories_as_choices($field, $value);$/;"	v
field	entry_list.php	/^	        $field = GFFormsModel::get_field( $form, $key );$/;"	v
field	entry_list.php	/^                                            $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field	entry_list.php	/^                                    $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field	export.php	/^                            $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field	export.php	/^            $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field	form_detail.php	/^        $field = GFCommon::json_decode($field_json, true);$/;"	v
field	form_display.php	/^    public static function has_input_mask($form, $field = false){$/;"	v
field	forms_model.php	/^                        $field              = self::get_field( $form, $key );$/;"	v
field	forms_model.php	/^                    $field = GFCommon::add_categories_as_choices($field, "");$/;"	v
field	forms_model.php	/^                    $field = GFCommon::add_categories_as_choices($field, '');$/;"	v
field	forms_model.php	/^                    $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field	forms_model.php	/^                    $field = RGFormsModel::get_field($form, $field_number );$/;"	v
field	forms_model.php	/^                    $field = RGFormsModel::get_field($form, $image["field_id"]);$/;"	v
field	forms_model.php	/^                    $field = isset($form["fields"]) ? GFFormsModel::get_field($form, $rule["fieldId"]) : array();$/;"	v
field	forms_model.php	/^                    $field = self::get_field($form, $field_id);$/;"	v
field	forms_model.php	/^                $field = $form["fields"][$i];$/;"	v
field	forms_model.php	/^                $field = GFCommon::add_categories_as_choices($field, '');$/;"	v
field	forms_model.php	/^                $field = wp_parse_args($field, $all_fields);$/;"	v
field	forms_model.php	/^            $field = $form["fields"][$i];$/;"	v
field	forms_model.php	/^            $field = GFCommon::add_categories_as_choices($field, '');$/;"	v
field	forms_model.php	/^            $field = RGFormsModel::get_field($form, $field_number);$/;"	v
field	forms_model.php	/^        $field = self::get_field($form, $field_id);$/;"	v
field	gravityforms.php	/^            $field = RGFormsModel::get_field($form, $result->field_number);$/;"	v
field	gravityforms.php	/^        $field = array("simpleCaptchaSize" => $_GET["size"], "simpleCaptchaFontColor"=> $_GET["fg"], "simpleCaptchaBackgroundColor"=>$_GET["bg"]);$/;"	v
field	includes/addon/class-gf-addon.php	/^        $field = wp_parse_args( $field, array($/;"	v
field	includes/addon/class-gf-addon.php	/^    protected function get_field_errors( $field = false ) {$/;"	v
field	includes/addon/class-gf-payment-addon.php	/^            $field = GFFormsModel::get_field($form, $field_id);$/;"	v
field	includes/addon/class-gf-results.php	/^            $field          = RGFormsModel::get_field($form, $field_id);$/;"	v
field	includes/upload.php	/^        $field     = GFFormsModel::get_field($form, $field_id);$/;"	v
field	includes/webapi/webapi.php	/^                $field = GFFormsModel::get_field($form, $field_id);$/;"	v
field	notification.php	/^            $field = RGFormsModel::get_field($form, $field_id);$/;"	v
field_attributes	includes/addon/class-gf-addon.php	/^		$field_attributes   = $this->get_field_attributes( $field, array() );$/;"	v
field_attributes	includes/addon/class-gf-addon.php	/^        $field_attributes = $this->get_field_attributes($field);$/;"	v
field_container	form_display.php	/^        $field_container = "<li id='$field_id' class='$css_class' $style>{FIELD_CONTENT}<\/li>";$/;"	v
field_container	form_display.php	/^        $field_container = apply_filters( "gform_field_container_{$form['id']}",                $field_container, $field, $form, $css_class, $style, $field_content );$/;"	v
field_container	form_display.php	/^        $field_container = apply_filters( "gform_field_container_{$form['id']}_{$field['id']}", $field_container, $field, $form, $css_class, $style, $field_content );$/;"	v
field_container	form_display.php	/^        $field_container = apply_filters( 'gform_field_container',                              $field_container, $field, $form, $css_class, $style, $field_content );$/;"	v
field_content	form_detail.php	/^        $field_content = GFFormDisplay::get_field_content($field, "");$/;"	v
field_content	form_display.php	/^                    $field_content = sprintf("%s<label class='gfield_label' for='%s'>%s%s<\/label>%s{FIELD}%s", $admin_buttons, $target_input_id, esc_html($field_label), $required_div , $description, $validation_message);$/;"	v
field_content	form_display.php	/^                    $field_content = sprintf("%s<label class='gfield_label' for='%s'>%s%s<\/label>{FIELD}%s%s", $admin_buttons, $target_input_id, esc_html($field_label), $required_div , $description, $validation_message);$/;"	v
field_content	form_display.php	/^                    $field_content = sprintf("%s<label class='gfield_label'>%s%s<\/label>%s{FIELD}%s", $admin_buttons, esc_html($field_label), $required_div , $description, $validation_message);$/;"	v
field_content	form_display.php	/^                    $field_content = sprintf("%s<label class='gfield_label'>%s%s<\/label>{FIELD}%s%s", $admin_buttons, esc_html($field_label), $required_div , $description, $validation_message);$/;"	v
field_content	form_display.php	/^                $field_content = !IS_ADMIN ? "{FIELD}" : $field_content = sprintf("%s<label class='gfield_label' for='%s'>%s<\/label>{FIELD}", $admin_buttons, $field_id, esc_html($field_label));$/;"	v
field_content	form_display.php	/^                $field_content = "{$admin_buttons} <label class='gfield_label'>&nbsp;<\/label><div class='gf-pagebreak-inline gf-pagebreak-container'><div class='gf-pagebreak-text-before'>" . __("end of page", "gravityforms") . "<\/div><div class='gf-pagebreak-text-main'><span>" . __("PAGE BREAK", "gravityforms") . "<\/span><\/div><div class='gf-pagebreak-text-after'>" . __("top of new page", "gravityforms") . "<\/div><\/div>";$/;"	v
field_content	form_display.php	/^                $field_content = sprintf("%s<h2 class='gsection_title'>%s<\/h2>%s", $admin_buttons,  esc_html($field_label), $description);$/;"	v
field_content	form_display.php	/^            $field_content = "<div class='gfield_creditcard_warning_message'>" . __("This page is unsecured. Do not enter a real credit card number. Use this field only for testing purposes. ", "gravityforms") . "<\/div>" . $field_content;$/;"	v
field_content	form_display.php	/^        $field_content = apply_filters("gform_field_content", $field_content, $field, $value, 0, $form_id);$/;"	v
field_content	form_display.php	/^        $field_content = self::get_field_content( $field, $value, $force_frontend_label, $form == null ? 0 : $form['id'] );$/;"	v
field_content	form_display.php	/^        $field_content = str_replace("{FIELD}", GFCommon::get_field_input($field, $value, 0, $form_id), $field_content);$/;"	v
field_count	entry_detail.php	/^                $field_count = sizeof($form["fields"]);$/;"	v
field_data	common.php	/^                    $field_data = "--------------------------------\\n" . $order_label . "\\n\\n";$/;"	v
field_data	common.php	/^                    $field_data ='<tr bgcolor="#EAF2FA">$/;"	v
field_data	common.php	/^            $field_data = '<table width="99%" border="0" cellpadding="1" cellspacing="0" bgcolor="#EAEAEA"><tr><td>$/;"	v
field_data	common.php	/^        $field_data = "";$/;"	v
field_data	includes/addon/class-gf-results.php	/^                    $field_data = $data["field_data"];$/;"	v
field_data	includes/addon/class-gf-results.php	/^                $field_data  = rgar($data, "field_data");$/;"	v
field_data	includes/addon/class-gf-results.php	/^            $field_data    = $data["field_data"];$/;"	v
field_data	includes/addon/class-gf-results.php	/^            $field_data  = array();$/;"	v
field_data	includes/webapi/webapi.php	/^                $field_data           = array();$/;"	v
field_error	includes/addon/class-gf-addon.php	/^        $field_error = $this->get_field_errors( $field );$/;"	v
field_errors	includes/addon/class-gf-addon.php	/^        $field_errors = $this->get_field_errors();$/;"	v
field_failed_validation	includes/addon/class-gf-addon.php	/^    protected function field_failed_validation( $field ) {$/;"	f
field_filter	common.php	/^                $field_filter         = array();$/;"	v
field_filter	common.php	/^            $field_filter = array();$/;"	v
field_filters	common.php	/^        $field_filters      = array_merge($field_filters, $entry_meta_filters);$/;"	v
field_filters	common.php	/^        $field_filters      = array_merge($field_filters, $info_filters);$/;"	v
field_filters	common.php	/^        $field_filters = array($/;"	v
field_filters	common.php	/^        $field_filters = array();$/;"	v
field_filters	common.php	/^        $field_filters = array_values($field_filters); \/\/ reset the numeric keys in case some filters have been unset$/;"	v
field_filters	common.php	/^        $field_filters = array_values($field_filters);$/;"	v
field_filters	entry_list.php	/^        $field_filters = GFCommon::get_field_filter_settings($form);$/;"	v
field_filters	forms_model.php	/^        $field_filters = $search_criteria["field_filters"];$/;"	v
field_filters	forms_model.php	/^        $field_filters = rgar($search_criteria, "field_filters");$/;"	v
field_filters_where	forms_model.php	/^        $field_filters_where = self::get_field_filters_where($form_id, $search_criteria);$/;"	v
field_groups	form_detail.php	/^                                    $field_groups = apply_filters("gform_add_field_buttons", $field_groups);$/;"	v
field_groups	form_detail.php	/^                                    $field_groups = array($/;"	v
field_html	form_detail.php	/^        $field_html = GFFormDisplay::get_field($field, "", true);$/;"	v
field_html	form_detail.php	/^        $field_html = str_replace("\\n", "\\\\n", $field_html);$/;"	v
field_html	form_detail.php	/^        $field_html = str_replace('"', '\\"', $field_html);$/;"	v
field_html_json	form_detail.php	/^        $field_html_json = json_encode($field_html);$/;"	v
field_id	common.php	/^        $field_id = IS_ADMIN || $form_id == 0 ? "input_$id" : "input_" . $form_id . "_$id";$/;"	v
field_id	entry_detail.php	/^                        $field_id = $field["id"];$/;"	v
field_id	entry_list.php	/^                        foreach($columns as $field_id => $field_info){$/;"	v
field_id	form_detail.php	/^        $field_id =  intval($_POST["field_id"]);$/;"	v
field_id	form_display.php	/^                $field_id = "input_{$form["id"]}_{$field["id"]}";$/;"	v
field_id	form_display.php	/^            $field_id = "input_{$form["id"]}_{$field["id"]}";$/;"	v
field_id	form_display.php	/^        $field_id = IS_ADMIN || $form_id == 0 ? "input_$id" : "input_" . $form_id . "_$id";$/;"	v
field_id	form_display.php	/^        $field_id = IS_ADMIN || empty($form) ? "field_$id" : "field_" . $form["id"] . "_$id";$/;"	v
field_id	forms_model.php	/^            $field_id = intval($field_id); \/\/removing floating part of field (i.e 1.3 -> 1) to return field by input id$/;"	v
field_id	forms_model.php	/^        if($entry_id == 0 || $field_id == 0)$/;"	v
field_id	gravityforms.php	/^        $field_id =  intval($_POST["field_id"]);$/;"	v
field_id	includes/addon/class-gf-addon.php	/^        $field_id = $this->get_setting("{$setting_name_root}_field_id");$/;"	v
field_id	includes/addon/class-gf-addon.php	/^        $field_id = $this->get_setting($setting_name, "", $settings);$/;"	v
field_id	includes/addon/class-gf-feed-addon.php	/^		foreach ( $products['products'] as $field_id => $product ) {$/;"	v
field_id	includes/addon/class-gf-payment-addon.php	/^            $field_id = $field["id"];$/;"	v
field_id	includes/addon/class-gf-payment-addon.php	/^        $field_id = $feed["meta"]["transactionType"] == "subscription" ? rgars ($feed, "meta\/recurringAmount") : rgars($feed, "meta\/paymentAmount");$/;"	v
field_id	includes/addon/class-gf-payment-addon.php	/^        foreach($products["products"] as $field_id => $product)$/;"	v
field_id	includes/addon/class-gf-results.php	/^                            $field_id = $field['id'];$/;"	v
field_id	includes/addon/class-gf-results.php	/^                        $field_id   = $field["id"];$/;"	v
field_id	includes/addon/class-gf-results.php	/^                    $field_id  = $field["id"];$/;"	v
field_id	includes/addon/class-gf-results.php	/^            $field_id        = rgpost("field_id");$/;"	v
field_id	includes/api.php	/^                $field_id = $field["id"];$/;"	v
field_id	includes/upload.php	/^        $field_id  = rgpost("field_id");$/;"	v
field_id	includes/webapi/webapi.php	/^            foreach ($fields as $field_id => $choice_counts) {$/;"	v
field_id	notification.php	/^                $field_id = self::get_first_routing_field($form);$/;"	v
field_id	select_columns.php	/^                            foreach($columns as $field_id => $field_info){$/;"	v
field_id_attribute	includes/addon/class-gf-addon.php	/^		$field_id_attribute = ! empty( $field_id ) ? $field_id : 'jQuery("#' . esc_attr( $setting_name_root ) . '_field_id").val()';$/;"	v
field_id_list	forms_model.php	/^		$field_id_list = implode( ',', $field_ids );$/;"	v
field_ids	entry_list.php	/^                        $field_ids = array_keys($columns);$/;"	v
field_ids	export.php	/^        $field_ids = "";$/;"	v
field_ids	export.php	/^        $field_ids = substr($field_ids, 0, strlen($field_ids) -1);$/;"	v
field_ids	forms_model.php	/^		$field_ids = array();$/;"	v
field_ids	forms_model.php	/^            $field_ids = array( $field_ids );$/;"	v
field_ids	forms_model.php	/^            $field_ids = array();$/;"	v
field_ids	forms_model.php	/^        $field_ids = self::get_grid_column_meta($form_id);$/;"	v
field_ids	includes/webapi/webapi.php	/^                $field_ids = array($field_ids);$/;"	v
field_ids	select_columns.php	/^                $field_ids = array_keys($columns);$/;"	v
field_in_other_page	form_display.php	/^            $field_in_other_page = $page_number > 0 && $field["pageNumber"] != $page_number;$/;"	v
field_input	common.php	/^        $field_input = apply_filters("gform_field_input", "", $field, $value, $lead_id, $form_id);$/;"	v
field_json	form_detail.php	/^        $field_json = stripslashes_deep($_POST["field"]);$/;"	v
field_json	gravityforms.php	/^        $field_json = GFCommon::json_encode($fields);$/;"	v
field_label	common.php	/^            $field_label = $use_admin_label && !rgempty("adminLabel", $field) ? rgar($field, "adminLabel") : esc_html(GFCommon::get_label($field));$/;"	v
field_label	common.php	/^            $field_label = RGFormsModel::get_label($field);$/;"	v
field_label	form_display.php	/^            $field_label = rgar($value, $field["id"] . ".1");$/;"	v
field_label	form_display.php	/^        $field_label = $force_frontend_label ? $field["label"] : GFCommon::get_label($field);$/;"	v
field_label	forms_model.php	/^        $field_label = (IS_ADMIN || RG_CURRENT_PAGE == "select_columns.php" || RG_CURRENT_PAGE == "print-entry.php" || rgget("gf_page", $_GET) == "select_columns" || rgget("gf_page", $_GET) == "print-entry") && !rgempty("adminLabel", $field) ? rgar($field,"adminLabel") : rgar($field,"label");$/;"	v
field_label	includes/addon/class-gf-payment-addon.php	/^            $field_label = RGFormsModel::get_label($field);$/;"	v
field_label	notification.php	/^            $field_label = RGFormsModel::get_label($field);$/;"	v
field_list	forms_model.php	/^            $field_list = substr($field_list, 0, strlen($field_list) -1);$/;"	v
field_list	forms_model.php	/^        $field_list = "";$/;"	v
field_logic	form_display.php	/^            $field_logic = $field["type"] != "page" ? RGForms::get("conditionalLogic", $field) : null; \/\/page break conditional logic will be handled during the next button click$/;"	v
field_map	includes/addon/class-gf-addon.php	/^        $field_map = rgar( $field, 'field_map' );$/;"	v
field_map_title	includes/addon/class-gf-addon.php	/^    protected function field_map_title(){$/;"	f
field_markup	form_display.php	/^        $field_markup = str_replace( '{FIELD_CONTENT}', $field_content, $field_container );$/;"	v
field_name	includes/addon/class-gf-payment-addon.php	/^            $field_name = $billing_field["name"];$/;"	v
field_number	forms_model.php	/^				$field_number = (string)$result->field_number;$/;"	v
field_number_max	forms_model.php	/^        $field_number_max = $sort_field_number + 0.001;$/;"	v
field_number_min	forms_model.php	/^        $field_number_min = $sort_field_number - 0.001;$/;"	v
field_position	common.php	/^                $field_position = substr($format, 0, 3);$/;"	v
field_query	forms_model.php	/^                        $field_query = '(' . $field_query . ' OR ' . $skipped_field_query . ')';$/;"	v
field_query	forms_model.php	/^                    $field_query = $wpdb->prepare($/;"	v
field_results	includes/addon/class-gf-results.php	/^            $field_results = "";$/;"	v
field_rows	export.php	/^        $field_rows = self::get_field_row_count($form, $fields, $entry_count);$/;"	v
field_script	form_display.php	/^                $field_script = "document.location.href='" . esc_js( RGFormsModel::get_current_page_url(true) ) . "';";$/;"	v
field_script	form_display.php	/^                $field_script =$/;"	v
field_script	form_display.php	/^            $field_script = "jQuery(document).ready(function(){ { gformMatchCard(\\"{$field_id}_1\\"); } } );";$/;"	v
field_script	form_display.php	/^        $field_script = "if(!window['gf_text']){window['gf_text'] = new Array();} window['gf_text']['password_blank'] = '" . __("Strength indicator", "gravityforms") . "'; window['gf_text']['password_mismatch'] = '" . __("Mismatch", "gravityforms") . "';window['gf_text']['password_bad'] = '" . __("Bad", "gravityforms") . "'; window['gf_text']['password_short'] = '" . __("Short", "gravityforms") . "'; window['gf_text']['password_good'] = '" . __("Good", "gravityforms") . "'; window['gf_text']['password_strong'] = '" . __("Strong", "gravityforms") . "';";$/;"	v
field_section_logic	form_display.php	/^                $field_section_logic = array("field" => $field_logic, "nextButton" => $next_button_logic, "section" => $section_logic);$/;"	v
field_setting	includes/addon/class-gf-addon.php	/^                        $field_setting = rgar( $settings, rgar( $field, 'name' ) );$/;"	v
field_str	common.php	/^                                $field_str = $date_type == "datedropdown"$/;"	v
field_string	common.php	/^                    $field_string ="<div class='ginput_container' id='gfield_input_datepicker' style='display:$datepicker_display'><input name='ginput_datepicker' type='text' \/><img src='" . GFCommon::get_base_url() . "\/images\/calendar.png' id='gfield_input_datepicker_icon' style='display:$icon_display'\/><\/div>";$/;"	v
field_type	common.php	/^                $field_type = IS_ADMIN ? "text" : "hidden";$/;"	v
field_type	common.php	/^            $field_type  = GFFormsModel::get_input_type($field);$/;"	v
field_type	common.php	/^            $field_type = GFFormsmodel::get_input_type($all_fields[$i]);$/;"	v
field_type	common.php	/^            } elseif ($field_type == "name" && rgar($field, "nameFormat") == "" || $field_type == "address") {$/;"	v
field_type	common.php	/^        return self::is_product_field($field_type) || $field_type == "donation";$/;"	v
field_type	forms_model.php	/^                $field_type = $field["type"];$/;"	v
field_type	forms_model.php	/^        $field_type = "";$/;"	v
field_type	includes/addon/class-gf-addon.php	/^        $field_type = GFFormsModel::get_input_type(GFFormsModel::get_field($form, $field_id));$/;"	v
field_type	includes/addon/class-gf-addon.php	/^        else if($is_field_id_integer && $field_type == "address"){$/;"	v
field_type	includes/addon/class-gf-addon.php	/^        if($is_field_id_integer && $field_type == "name"){$/;"	v
field_type	includes/addon/class-gf-results.php	/^                        $field_type = GFFormsModel::get_input_type($field);$/;"	v
field_type	includes/addon/class-gf-results.php	/^                    $field_type = GFFormsModel::get_input_type($field);$/;"	v
field_type	includes/addon/class-gf-results.php	/^            $field_type = GFFormsModel::get_input_type($field);$/;"	v
field_type_matches	includes/addon/class-gf-addon.php	/^                $field_type_matches = isset($condition["field_types"]) ? $this->_field_condition_matches($condition["field_types"], $form) : true;$/;"	v
field_type_title	form_display.php	/^        $field_type_title = GFCommon::get_field_type_title($field["type"]);$/;"	v
field_types	includes/addon/class-gf-addon.php	/^            $field_types = array($field_types);$/;"	v
field_val	form_display.php	/^                            $field_val = rgar($date_info, "day" ) . "\/" . rgar($date_info, "month" ) . "\/" . rgar($date_info, "year" );$/;"	v
field_val	form_display.php	/^                            $field_val = rgar($date_info, "month") . "\/" . rgar($date_info, "day") . "\/" . rgar($date_info, "year");$/;"	v
field_val	form_display.php	/^                            $field_val = rgar($date_info, "year") . "\/" . rgar($date_info, "month" ) . "\/" . rgar($date_info, "day" );$/;"	v
field_val	form_display.php	/^                        $field_val = array();$/;"	v
field_val	form_display.php	/^                    $field_val = RGFormsModel::get_parameter_value(rgar($field, "inputName"), $field_values, $field);$/;"	v
field_val	form_display.php	/^                    $field_val = array();$/;"	v
field_val	form_display.php	/^                    $field_val = is_array($parameter_val) ? $parameter_val : explode(",", str_replace("|", ",", $parameter_val));$/;"	v
field_val	form_display.php	/^            $field_val = "";$/;"	v
field_val	form_display.php	/^            $field_val = self::default_if_empty($field, $field_val);$/;"	v
field_value	common.php	/^                                $field_value = "--------------------------------\\n{$field_label}\\n\\n";$/;"	v
field_value	common.php	/^                                $field_value = sprintf('<tr>$/;"	v
field_value	common.php	/^                        $field_value = false;$/;"	v
field_value	common.php	/^                    $field_value = GFCommon::get_lead_field_display($field, $raw_field_value, rgar($lead,"currency"), $use_text, $format, "email");$/;"	v
field_value	common.php	/^                    $field_value = apply_filters("gform_merge_tag_filter", $field_value, $merge_tag, $options, $field, $field_label);$/;"	v
field_value	common.php	/^                    $field_value = apply_filters("gform_merge_tag_filter", $field_value, $merge_tag, $options, $field, $raw_field_value);$/;"	v
field_value	common.php	/^                    $field_value = empty($lead) ? GFFormsModel::get_field_value($source_field, array()) : GFFormsModel::get_lead_field_value($lead, $source_field);$/;"	v
field_value	common.php	/^                $field_value = !empty($choice["value"]) || rgar($field, "enableChoiceValue") ? $choice["value"] : $choice["text"];$/;"	v
field_value	common.php	/^                $field_value = !empty($choice["value"]) || rgget("enableChoiceValue", $field) || $field['type'] == 'post_category' ? $choice["value"] : $choice["text"];$/;"	v
field_value	common.php	/^                $field_value = RGFormsModel::get_lead_field_value($lead, $source_field);$/;"	v
field_value	common.php	/^            $field_value = "";$/;"	v
field_value	form_display.php	/^                            $field_value = !empty($choice["value"]) || $field["enableChoiceValue"] ? $choice["value"] : $choice["text"];$/;"	v
field_value	form_display.php	/^                            $field_value = !empty($choice["value"]) || rgar($field,"enableChoiceValue") ? $choice["value"] : $choice["text"];$/;"	v
field_value	forms_model.php	/^			$field_value = explode(",", $field_value); \/\/ convert the comma-delimited string into an array$/;"	v
field_value	forms_model.php	/^                    $field_value = !empty($long_text) ? $long_text : $field_value;$/;"	v
field_value	forms_model.php	/^                $field_value = $result->value;$/;"	v
field_value	forms_model.php	/^            $field_value = "";$/;"	v
field_value	forms_model.php	/^            $field_value = GFCommon::prepare_post_category_value($field_value, $source_field, "conditional_logic");$/;"	v
field_value	forms_model.php	/^            $field_value = array_values($field_value); \/\/returning array values, ignoring keys if array is associative$/;"	v
field_value	forms_model.php	/^            $field_value = empty($file_urls) ? "" : json_encode($file_urls);$/;"	v
field_value	forms_model.php	/^            $field_value = empty($lead) ? self::get_field_value($source_field, $field_values) : self::get_lead_field_value($lead, $source_field);$/;"	v
field_value	includes/api.php	/^                $field_value    = isset($entry[(string)$field_id]) ? $entry[(string)$field_id] : "";$/;"	v
field_value_array	gravityforms.php	/^                $field_value_array = stripslashes_deep($field_value_array);$/;"	v
field_values	form_display.php	/^        $field_values = GFForms::post( 'gform_field_values' );$/;"	v
field_values	form_display.php	/^        $field_values = RGForms::post("gform_field_values");$/;"	v
field_values	form_display.php	/^    private static function get_conditional_logic($form, $field_values = array()){$/;"	v
field_values	form_display.php	/^    private static function register_form_init_scripts( $form, $field_values = array(), $is_ajax = false ) {$/;"	v
field_values	forms_model.php	/^    public static function get_field_value(&$field, $field_values = array(), $get_from_post=true){$/;"	v
field_values	gravityforms.php	/^                $field_values = htmlspecialchars_decode($field_values);$/;"	v
field_values	gravityforms.php	/^                $field_values = str_replace("&#038;", "&", $field_values);$/;"	v
field_values_str	form_display.php	/^        $field_values_str = is_array($field_values) ? http_build_query($field_values) : $field_values;$/;"	v
fields	common.php	/^                $fields = "";$/;"	v
fields	common.php	/^            $fields = array();$/;"	v
fields	common.php	/^        $fields        = $all_fields;$/;"	v
fields	common.php	/^        $fields = GFCommon::get_fields_by_type($form, array($field_type));$/;"	v
fields	common.php	/^        $fields = array();$/;"	v
fields	common.php	/^        $fields = array_values($fields);$/;"	v
fields	common.php	/^        $fields = self::get_akismet_fields($form, $lead);$/;"	v
fields	common.php	/^        $fields = self::get_section_fields( $form, $section_field['id'] );$/;"	v
fields	export.php	/^        $fields = $_POST["export_field"];$/;"	v
fields	form_display.php	/^        $fields = array();$/;"	v
fields	forms_model.php	/^        $fields = $wpdb->get_results($wpdb->prepare("SELECT DISTINCT field_number FROM $lead_detail_table_name WHERE form_id=%d", $form_id));$/;"	v
fields	forms_model.php	/^        $fields = GFCommon::get_fields_by_type($form, array("fileupload", "post_image"));$/;"	v
fields	gravityforms.php	/^        $fields = array();$/;"	v
fields	includes/addon/class-gf-addon.php	/^            $fields = array( $fields );$/;"	v
fields	includes/addon/class-gf-addon.php	/^        $fields =  $sections[count($sections) - 1]['fields'];$/;"	v
fields	includes/addon/class-gf-addon.php	/^        $fields = GFCommon::get_fields_by_type($form, $field_types);$/;"	v
fields	includes/addon/class-gf-addon.php	/^        $fields = array();$/;"	v
fields	includes/addon/class-gf-feed-addon.php	/^        $fields = $this->settings_fields_only( 'feed' );$/;"	v
fields	includes/addon/class-gf-payment-addon.php	/^        $fields = GFCommon::get_fields_by_type($form, array("creditcard"));$/;"	v
fields	includes/addon/class-gf-payment-addon.php	/^        $fields = GFCommon::get_fields_by_type($form, array("product"));$/;"	v
fields	includes/addon/class-gf-payment-addon.php	/^        $fields = array($/;"	v
fields	includes/addon/class-gf-results.php	/^            $fields                    = $this->get_fields($form);$/;"	v
fields	includes/webapi/webapi.php	/^            $fields              = rgar($form, "fields");$/;"	v
fields	includes/webapi/webapi.php	/^            $fields  = $form["fields"];$/;"	v
fields	includes/webapi/webapi.php	/^            $fields = $results["field_data"];$/;"	v
fields	includes/webapi/webapi.php	/^            $fields = rgar($form, "fields");$/;"	v
fields_with_logic	form_display.php	/^        $fields_with_logic = array();$/;"	v
file	common.php	/^								$file = str_replace( ' ', '%20', $file );$/;"	v
file	common.php	/^        while((false !== $file = readdir($dp))){$/;"	v
file	forms_model.php	/^        $file = $file['file'];$/;"	v
file	forms_model.php	/^        $file = self::copy_post_image($url, $post_id);$/;"	v
fileName	includes/phpqrcode/phpqrcode.php	/^                    $fileName = QR_CACHE_DIR.'frame_'.$a.'.png';$/;"	v
fileName	includes/phpqrcode/phpqrcode.php	/^                $fileName = QR_CACHE_DIR.'frame_'.$version.'.dat';$/;"	v
fileName	includes/phpqrcode/phpqrcode.php	/^            $fileName = QR_CACHE_DIR.'mask_'.$maskNo.DIRECTORY_SEPARATOR.'mask_'.$width.'_'.$maskNo.'.dat';$/;"	v
file_count	entry_list.php	/^                                                $file_count = count($uploaded_files_arr);$/;"	v
file_index	common.php	/^                    foreach($file_urls as $file_index => $file_url){$/;"	v
file_index	forms_model.php	/^    public static function delete_file($entry_id, $field_id, $file_index = 0){$/;"	v
file_index	gravityforms.php	/^        $file_index =  intval($_POST["file_index"]);$/;"	v
file_info	common.php	/^                $file_info = RGFormsModel::get_temp_filename($form_id, "input_{$id}");$/;"	v
file_info	form_display.php	/^                    $file_info = GFFormsModel::get_temp_filename($form_id, $input_name);$/;"	v
file_info	form_display.php	/^                    $file_info = rgar($uploaded_files, $input_name);$/;"	v
file_info	form_display.php	/^            $file_info = RGFormsModel::get_temp_filename($form["id"], $input_name);$/;"	v
file_info	forms_model.php	/^                $file_info = self::get_temp_filename($form['id'], $input_name);$/;"	v
file_info	forms_model.php	/^            $file_info = self::get_temp_filename($form['id'], $input_name);$/;"	v
file_info	forms_model.php	/^            $file_info = self::get_temp_filename($form_id, $input_name);$/;"	v
file_info	forms_model.php	/^        $file_info = pathinfo($file_name);$/;"	v
file_infos	common.php	/^                        $file_infos = $multiple_files ? $uploaded_files : array($file_infos);$/;"	v
file_infos	common.php	/^                    $file_infos = $multiple_files ? $uploaded_files : RGFormsModel::get_temp_filename($form_id, $input_name);$/;"	v
file_label	common.php	/^                $file_label = (IS_ADMIN || rgget("displayTitle", $field) || rgget("displayCaption", $field) || rgget("displayDescription", $field)) ? "<label for='$field_id' class='ginput_post_image_file' $file_label_style>" . apply_filters("gform_postimage_file_{$form_id}",apply_filters("gform_postimage_file",__("File", "gravityforms"), $form_id), $form_id) . "<\/label>" : "";$/;"	v
file_label_style	common.php	/^                    $file_label_style = $hidden_style;$/;"	v
file_label_style	common.php	/^                $file_label_style = IS_ADMIN && !(rgget("displayTitle", $field) || rgget("displayCaption", $field) || rgget("displayDescription", $field)) ? $hidden_style : "";$/;"	v
file_list_id	common.php	/^                $file_list_id = "gform_preview_" . $form_id . "_". $id;$/;"	v
file_name	common.php	/^        $file_name = basename($url_info["path"]);$/;"	v
file_name	common.php	/^        return $file_name == "preview.php" || rgget("gf_page", $_GET) == "preview";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_audio.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_css.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_doc.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_fla.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_generic.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_html.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_image.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_js.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_log.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_mov.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_pdf.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_php.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_ppt.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_psd.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_sql.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_swf.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_txt.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_video.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_xls.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_xml.gif";$/;"	v
file_name	entry_list.php	/^                $file_name = "icon_zip.gif";$/;"	v
file_name	forms_model.php	/^            $file_name = stripslashes($file_name);$/;"	v
file_name	forms_model.php	/^        $file_name = basename($file_info["basename"], $extension);$/;"	v
file_name	forms_model.php	/^        $file_name = sanitize_file_name($file_name);$/;"	v
file_name	includes/upload.php	/^        $file_name = isset($_REQUEST["name"]) ? $_REQUEST["name"] : '';$/;"	v
file_name	includes/upload.php	/^        $file_name = preg_replace('\/[^\\w\\._]+\/', '_', $file_name);$/;"	v
file_name_has_disallowed_extension	common.php	/^	public static function file_name_has_disallowed_extension( $file_name ) {$/;"	f
file_names	form_display.php	/^                                $file_names = array(array("uploaded_filename" => $single_file_name));$/;"	v
file_names	form_display.php	/^                                $file_names = isset(GFFormsModel::$uploaded_files[$form["id"]][$input_name]) ? GFFormsModel::$uploaded_files[$form["id"]][$input_name] : array();$/;"	v
file_path	common.php	/^                            $file_path = str_replace("http:", "https:", $file_path);$/;"	v
file_path	common.php	/^                        $file_path = esc_attr(str_replace(" ", "%20", $file_path));$/;"	v
file_path	entry_list.php	/^                                                $file_path = esc_attr($file_path);$/;"	v
file_path	entry_list.php	/^                                            $file_path = $value;$/;"	v
file_path	forms_model.php	/^                $file_path = self::get_file_upload_path($form['id'], $file_info["uploaded_filename"]);$/;"	v
file_path	forms_model.php	/^            $file_path = preg_replace("|^(.*?)\/files\/gravity_forms\/|", BLOGUPLOADDIR . "gravity_forms\/", $url);$/;"	v
file_path	forms_model.php	/^            $file_path = self::get_file_upload_path($form['id'], $file_info["uploaded_filename"]);$/;"	v
file_path	forms_model.php	/^            $file_path = str_replace(WP_CONTENT_URL, WP_CONTENT_DIR, $url);$/;"	v
file_path	includes/upload.php	/^        $file_path = $target_dir . $tmp_file_name;$/;"	v
file_paths	common.php	/^                    $file_paths = rgar($field,"multipleFiles") ? json_decode($value) : array($value);$/;"	v
file_url	common.php	/^                            $file_url = str_replace("http:", "https:", $file_url);$/;"	v
file_url	common.php	/^                        $file_url = esc_attr($file_url);$/;"	v
file_url	forms_model.php	/^            $file_url = $entry[$field_id];$/;"	v
file_url	forms_model.php	/^            $file_url = $file_urls[$file_index];$/;"	v
file_urls	common.php	/^                    $file_urls = $multiple_files ? json_decode($value) : array($value);$/;"	v
file_urls	forms_model.php	/^            $file_urls = array_values($file_urls);$/;"	v
file_urls	forms_model.php	/^            $file_urls = json_decode($entry[$field_id], true);$/;"	v
filename	common.php	/^        $filename = $captcha->generate_image($prefix, $word);$/;"	v
filename	export.php	/^            $filename = "gravityforms-export-" . date("Y-m-d") . ".xml";$/;"	v
filename	export.php	/^            $filename = sanitize_title_with_dashes($form["title"]) . "-" . gmdate("Y-m-d", GFCommon::get_local_timestamp(time())) . ".csv";$/;"	v
filename	form_display.php	/^        $filename = $target_path . $unique_form_id . "_input_*";$/;"	v
filename	forms_model.php	/^        $filename = wp_unique_filename($uploads['path'], $name);$/;"	v
filename	includes/phpqrcode/phpqrcode.php	/^        public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85)$/;"	v
filename	includes/phpqrcode/phpqrcode.php	/^        public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE)$/;"	v
files	common.php	/^							$files = empty( $raw_value ) ? array() : json_decode( $raw_value, true );$/;"	v
files	entry_detail.php	/^                    $files = array();$/;"	v
files	entry_detail.php	/^                $files = GFCommon::json_decode(stripslashes(RGForms::post("gform_uploaded_files")));$/;"	v
files	form_display.php	/^            $files = !empty(RGFormsModel::$uploaded_files[$form_id]) ? GFCommon::json_encode(RGFormsModel::$uploaded_files[$form_id]) : "";$/;"	v
files	form_display.php	/^            $files = array();$/;"	v
files	form_display.php	/^            $files = self::upload_files($form, $files);$/;"	v
files	form_display.php	/^        $files = GFCommon::json_decode(stripslashes(RGForms::post("gform_uploaded_files")));$/;"	v
files	form_display.php	/^        $files = glob($filename);$/;"	v
files	form_display.php	/^        $files = glob($target_path."*");$/;"	v
files	forms_model.php	/^                        $files = json_decode($value_json, true);$/;"	v
files_input	form_display.php	/^            $files_input = "<input type='hidden' name='gform_uploaded_files' id='gform_uploaded_files_{$form_id}' value='" . str_replace("'", "&#039;", $files) . "' \/>";$/;"	v
files_input	form_display.php	/^        $files_input = "";$/;"	v
fileupload	js/forms.js	/^    "fileupload" :      ".conditional_logic_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .file_extensions_setting, .file_size_setting, .multiple_files_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
fileupload_fields	common.php	/^        $fileupload_fields = GFCommon::get_fields_by_type($form, array("fileupload", "post_custom_field"));$/;"	v
fileupload_validation_message	form_display.php	/^                                                $fileupload_validation_message = sprintf(__("File exceeds size limit. Maximum file size: %dMB", "gravityforms"), $max_upload_size_in_mb);$/;"	v
fileupload_validation_message	form_display.php	/^                                                $fileupload_validation_message = sprintf(__("There was an error while uploading the file. Error code: %d", "gravityforms"), $_FILES[$input_name]["error"]);$/;"	v
filler	includes/phpqrcode/phpqrcode.php	/^            $filler = new FrameFiller($width, $frame);$/;"	v
filter	common.php	/^                $filter                    = array();$/;"	v
filter	entry_detail.php	/^        $filter = rgget("filter");$/;"	v
filter	entry_list.php	/^                        <li><a class="<?php echo $filter == "spam" ? "current" : ""?>" href="?page=gf_entries&view=entries&id=<?php echo $form_id ?>&filter=spam"><?php _e("Spam", "gravityforms"); ?> <span class="count">(<span id="spam_count"><?php echo $spam_count ?><\/span>)<\/span><\/a> | <\/li>$/;"	v
filter	entry_list.php	/^                    <li><a class="<?php echo $filter == "trash" ? "current" : ""?>" href="?page=gf_entries&view=entries&id=<?php echo $form_id ?>&filter=trash"><?php _e("Trash", "gravityforms"); ?> <span class="count">(<span id="trash_count"><?php echo $trash_count ?><\/span>)<\/span><\/a><\/li>$/;"	v
filter	entry_list.php	/^                    var currentStatus = "<?php echo $filter == "trash" || $filter == "spam" ? $filter : "active" ?>";$/;"	v
filter	entry_list.php	/^        $filter = rgget("filter");$/;"	v
filter	gravityforms.php	/^            $filter = rgpost("filter");$/;"	v
filter	print-entry.php	/^    $filter = rgget("filter");$/;"	v
filter_entry_object	includes/webapi/webapi.php	/^        public static function filter_entry_object($entry, $field_ids) {$/;"	f
filter_fields	common.php	/^        $filter_fields = rgpost("f");$/;"	v
filter_fields	includes/addon/class-gf-results.php	/^            $filter_fields    = rgget("f");$/;"	v
filter_menu_items	includes/addon/class-gf-results.php	/^        public function filter_menu_items($menu_items, $form_id, $compact) {$/;"	f
filter_operator	entry_list.php	/^			        $filter_operator = 'contains';$/;"	v
filter_operator	entry_list.php	/^	        $filter_operator = empty( $search_operator ) ? 'is' : $search_operator;$/;"	v
filter_operators	common.php	/^            $filter_operators = rgpost("o");$/;"	v
filter_operators	includes/addon/class-gf-results.php	/^            $filter_operators = rgget("o");$/;"	v
filter_qs	entry_list.php	/^        $filter_qs = "&filter=" . $filter;$/;"	v
filter_settings	gravityforms.php	/^        $filter_settings = GFCommon::get_field_filter_settings($form);$/;"	v
filter_settings	includes/addon/class-gf-results.php	/^            $filter_settings = GFCommon::get_field_filter_settings($form);$/;"	v
filter_settings	includes/addon/class-gf-results.php	/^            $filter_settings = apply_filters("gform_filters_pre_results", $filter_settings, $form);$/;"	v
filter_settings	includes/addon/class-gf-results.php	/^            $filter_settings = array_values($filter_settings); \/\/ reset the numeric keys in case some filters have been unset$/;"	v
filter_settings_json	gravityforms.php	/^        $filter_settings_json = json_encode($filter_settings);$/;"	v
filter_ui	includes/addon/class-gf-payment-addon.php	/^        $filter_ui = array_merge($view_filter, $payment_method_filter, $filter_ui);$/;"	v
filter_ui	includes/addon/class-gf-results.php	/^                                        $filter_ui = apply_filters("gform_filter_ui", $filter_ui, $form_id, $page_title, $gf_page, $gf_view);$/;"	v
filter_ui	includes/addon/class-gf-results.php	/^                                        $filter_ui = array($/;"	v
filter_values	common.php	/^            $filter_values    = rgpost("v");$/;"	v
filter_values	includes/addon/class-gf-results.php	/^            $filter_values    = rgget("v");$/;"	v
filtered_list	form_display.php	/^        $filtered_list = wp_filter_object_list($form['confirmations'], array('isDefault' => true));$/;"	v
filters	common.php	/^        $filters    = array();$/;"	v
filters	common.php	/^        $filters = array('price', 'value', '');$/;"	v
filters	includes/addon/class-gf-results.php	/^            $filters          = array();$/;"	v
finder	includes/phpqrcode/phpqrcode.php	/^            $finder = array($/;"	v
first	common.php	/^                    $first = esc_attr(RGForms::get($field["id"] . ".3", $value));$/;"	v
first	common.php	/^                    $first = trim(rgget($field["id"] . ".3", $value));$/;"	v
first	common.php	/^                $first = "";$/;"	v
first	form_display.php	/^                                    $first = 0;$/;"	v
first	form_display.php	/^                                $first = $_POST["input_" . $field["id"] . "_3"];$/;"	v
first	includes/addon/class-gf-addon.php	/^        $first = trim(rgar($entry,$field_id . ".3"));$/;"	v
first_char	common.php	/^        $first_char = GFCommon::safe_substr($value, 0, 1, 'utf-8');$/;"	v
first_class	form_display.php	/^                        $first_class = $i==0 ? " gf_step_first" : "";$/;"	v
first_interval	includes/addon/class-gf-payment-addon.php	/^        $first_interval = $intervals[$interval_keys[0]];$/;"	v
first_item_index	entry_list.php	/^        $first_item_index = $page_index * $page_size;$/;"	v
first_key	includes/addon/class-gf-addon.php	/^        $first_key = key( $key_value_pairs );$/;"	v
first_tabindex	common.php	/^                        $first_tabindex = self::get_tabindex();$/;"	v
first_tabindex	common.php	/^                $first_tabindex = self::get_tabindex();$/;"	v
fix_checkbox_value	gravityforms.php	/^    private static function fix_checkbox_value(){$/;"	f
fix_lead_meta_form_id_values	gravityforms.php	/^    private static function fix_lead_meta_form_id_values(){$/;"	f
fix_leading_and_trailing_spaces	gravityforms.php	/^    private static function fix_leading_and_trailing_spaces(){$/;"	f
float_number	common.php	/^            $float_number = "-" . $float_number;$/;"	v
float_number	common.php	/^        $float_number = "";$/;"	v
float_number	currency.php	/^            $float_number = "-" . $float_number;$/;"	v
float_number	currency.php	/^        $float_number = "";$/;"	v
flush	common.php	/^    public static function flush($flush_persistent = false) {$/;"	f
flush_confirmations	forms_model.php	/^    public static function flush_confirmations(){$/;"	f
flush_current_forms	forms_model.php	/^    public static function flush_current_forms(){$/;"	f
flush_current_lead	forms_model.php	/^    public static function flush_current_lead(){$/;"	f
flush_version_info	includes/addon/class-gf-auto-upgrade.php	/^    public function flush_version_info() {$/;"	f
fn.gfFilterUI	js/gf_field_filter.js	/^(function (gfFieldFilterUI, $) {$/;"	f
fn.textareaCount	js/jquery.textareaCounter.plugin.js	/^\/*$/;"	f
folder	gravityforms.php	/^        $folder = RGFormsModel::get_upload_root();$/;"	v
folder	includes/addon/class-gf-addon.php	/^        $folder = basename(dirname($full_path));$/;"	v
folder	includes/addon/class-gf-addon.php	/^        $folder = basename(dirname(__FILE__));$/;"	v
footer	form_display.php	/^        $footer = "$/;"	v
footer_init_scripts	form_display.php	/^    public static function footer_init_scripts($form_id){$/;"	f
for	gravityforms.php	/^            $gforms['url'] = !rgempty("url",$update) ? $update["url"] : false; \/\/ OR provide your own callback function for managing the update$/;"	f
for	includes/addon/class-gf-addon.php	/^     * Outputs class for the row for the specified Object ID on the list page.$/;"	c
for	includes/addon/class-gf-auto-upgrade.php	/^            $plugin_data['url']  = isset($update["url"]) ? $update["url"] : false; \/\/ OR provide your own callback function for managing the update$/;"	f
for	tooltips.php	/^    "form_field_enable_enhanced_ui" => "<h6>" . __("Enable Enhanced UI", "gravityforms") . "<\/h6>" . __("By selecting this option, the <a href='http:\/\/harvesthq.github.com\/chosen\/' target='_blank'>Chosen<\/a> jQuery script will be applied to this field, enabling search capabilities to Drop Down fields and a more user-friendly interface for Multi Select fields.", "gravityforms"),$/;"	i
form	common.php	/^                $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	common.php	/^            $form = RGFormsModel::get_form_meta(rgget('id'));$/;"	v
form	entry_detail.php	/^        $form = RGFormsModel::get_form_meta($_GET["id"]);$/;"	v
form	entry_detail.php	/^        $form = apply_filters("gform_admin_pre_render_" . $form["id"], apply_filters("gform_admin_pre_render", $form));$/;"	v
form	entry_list.php	/^	    $form = RGFormsModel::get_form_meta( $form_id );$/;"	v
form	entry_list.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	export.php	/^                $form = apply_filters( "gform_export_form_{$form['id']}", $form );$/;"	v
form	export.php	/^                $form = apply_filters( 'gform_export_form', $form );$/;"	v
form	export.php	/^            $form = GFFormsModel::trim_form_meta_values($form);$/;"	v
form	export.php	/^            $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	export.php	/^        $form = apply_filters('gform_export_fields', $form);$/;"	v
form	export.php	/^        $form = self::add_default_export_fields($form);$/;"	v
form	export.php	/^        $form = self::get_entry_meta($form);$/;"	v
form	form_detail.php	/^        $form = !rgempty("meta",$update_result) ? rgar($update_result, "meta") : GFFormsModel::get_form_meta($form_id);$/;"	v
form	form_detail.php	/^        $form = RGFormsModel::add_default_properties($form);$/;"	v
form	form_detail.php	/^        $form = apply_filters("gform_admin_pre_render_" . $form_id, apply_filters("gform_admin_pre_render", $form));$/;"	v
form	form_display.php	/^		$form = apply_filters('gform_pre_validation', $form);$/;"	v
form	form_display.php	/^		$form = self::update_confirmation($form, $lead);$/;"	v
form	form_display.php	/^                $form = apply_filters("gform_pre_submission_filter_{$form["id"]}", apply_filters("gform_pre_submission_filter", $form));$/;"	v
form	form_display.php	/^                $form = self::update_confirmation($form);$/;"	v
form	form_display.php	/^            $form = $submission_info["form"];$/;"	v
form	form_display.php	/^        $form = $validation_result["form"];$/;"	v
form	form_display.php	/^        $form = RGFormsModel::add_default_properties($form);$/;"	v
form	form_display.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	form_display.php	/^        $form = RGFormsModel::get_form_meta($form_id, true);$/;"	v
form	form_display.php	/^        $form = apply_filters( "gform_pre_render_{$form_id}", apply_filters( 'gform_pre_render', $form, $ajax, $field_values ), $ajax, $field_values );$/;"	v
form	form_list.php	/^        $form = json_decode($form_json, true);$/;"	v
form	form_settings.php	/^            $form = $updated_form;$/;"	v
form	form_settings.php	/^        $form = !is_array($form_id) ? RGFormsModel::get_form_meta($form_id) : $form_id;$/;"	v
form	form_settings.php	/^        $form = GFFormsModel::get_form_meta( rgget('id') );$/;"	v
form	form_settings.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	form_settings.php	/^        $form = apply_filters("gform_admin_pre_render_" . $form_id, apply_filters("gform_admin_pre_render", $form));$/;"	v
form	form_settings.php	/^        $form = apply_filters("gform_admin_pre_render_{$form_id}", apply_filters("gform_admin_pre_render", GFFormsModel::get_form_meta($form_id)));$/;"	v
form	form_settings.php	/^        $this->form = $form;$/;"	v
form	form_settings.php	/^        <?php $form = GFFormsModel::get_form_meta($form_id); ?>$/;"	v
form	form_settings.php	/^    public $form;$/;"	v
form	forms_model.php	/^		$form = apply_filters('gform_form_post_get_meta', $form);$/;"	v
form	forms_model.php	/^                            $form = RGFormsModel::get_form_meta($lead["form_id"]);$/;"	v
form	forms_model.php	/^                        $form               = GFAPI::get_form( $form_id );$/;"	v
form	forms_model.php	/^                    $form = RGFormsModel::get_form_meta($lead["form_id"]);$/;"	v
form	forms_model.php	/^                $form = self::get_form_meta($lead["form_id"]);$/;"	v
form	forms_model.php	/^            $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	forms_model.php	/^            $form = self::convert_confirmation($form);$/;"	v
form	forms_model.php	/^            $form = self::get_form_meta($form_id);$/;"	v
form	forms_model.php	/^            $form = self::get_form_meta($lead["form_id"]);$/;"	v
form	forms_model.php	/^            $form = self::load_notifications_from_legacy($form); \/\/moving notification data from legacy structure into new "notifications" array$/;"	v
form	forms_model.php	/^            $form = self::unserialize($result["display_meta"]);$/;"	v
form	forms_model.php	/^        $form = GFFormsModel::get_form_meta($form_id);$/;"	v
form	forms_model.php	/^        $form = self::get_form($form_id);$/;"	v
form	forms_model.php	/^        $form = self::get_form_meta($form_id);$/;"	v
form	forms_model.php	/^        $form = self::load_confirmations($form);$/;"	v
form	forms_model.php	/^        $form = self::load_notifications_to_legacy($form);$/;"	v
form	forms_model.php	/^        $form = self::unserialize($form_row["display_meta"]);$/;"	v
form	forms_model.php	/^    public static function delete_files($lead_id, $form=null){$/;"	v
form	forms_model.php	/^    public static function trim_conditional_logic_values_from_element($element, $form = array(), &$updated = false){$/;"	v
form	gravityforms.php	/^            $form = GFFormsModel::trim_form_meta_values($form, $form_updated);$/;"	v
form	gravityforms.php	/^            $form = GFFormsModel::unserialize($result["display_meta"]);$/;"	v
form	gravityforms.php	/^            $form = RGFormsModel::get_form_meta($result->form_id);$/;"	v
form	gravityforms.php	/^        $form = GFExport::add_default_export_fields($form);$/;"	v
form	gravityforms.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	gravityforms.php	/^        $form = apply_filters("gform_before_resend_notifications_{$form_id}", apply_filters('gform_before_resend_notifications', RGFormsModel::get_form_meta($form_id), $leads), $leads);$/;"	v
form	gravityforms.php	/^        $form = apply_filters("gform_form_export_page_{$form_id}", apply_filters("gform_form_export_page", $form));$/;"	v
form	includes/addon/class-gf-addon.php	/^                $form = $this->get_current_form();$/;"	v
form	includes/addon/class-gf-addon.php	/^                $form = apply_filters("gform_admin_pre_render_{$form_id}", apply_filters("gform_admin_pre_render", $form));$/;"	v
form	includes/addon/class-gf-addon.php	/^            $form = $this->get_current_form();$/;"	v
form	includes/addon/class-gf-addon.php	/^        $form = $this->get_current_form();$/;"	v
form	includes/addon/class-gf-addon.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	includes/addon/class-gf-feed-addon.php	/^		$form = RGFormsModel::get_form_meta( $entry['form_id'] );$/;"	v
form	includes/addon/class-gf-feed-addon.php	/^            $form = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/addon/class-gf-payment-addon.php	/^		$form = $validation_result['form'];$/;"	v
form	includes/addon/class-gf-payment-addon.php	/^        $form = $this->get_current_form();$/;"	v
form	includes/addon/class-gf-payment-addon.php	/^        $form = GFAPI::get_form($entry["form_id"]);$/;"	v
form	includes/addon/class-gf-payment-addon.php	/^    public function get_payment_feed( $entry, $form = false ) {$/;"	v
form	includes/addon/class-gf-results.php	/^            $form                      = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/addon/class-gf-results.php	/^            $form                      = apply_filters("gform_form_pre_results_$form_id", apply_filters("gform_form_pre_results", $form));$/;"	v
form	includes/addon/class-gf-results.php	/^            $form           = RGFormsModel::get_form_meta($form_id);$/;"	v
form	includes/addon/class-gf-results.php	/^            $form = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/addon/class-gf-results.php	/^            $form = apply_filters("gform_form_pre_results_$form_id", apply_filters("gform_form_pre_results", $form));$/;"	v
form	includes/api.php	/^        $form = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/api.php	/^        $form = self::get_form($form_id);$/;"	v
form	includes/upload.php	/^        $form           = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/webapi/webapi.php	/^            $form                  = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/webapi/webapi.php	/^            $form    = GFFormsModel::get_form_meta($form_id);$/;"	v
form	includes/webapi/webapi.php	/^            $form    = RGFormsModel::get_form_meta($form_id);$/;"	v
form	includes/webapi/webapi.php	/^            $form = GFAPI::get_form($form_id);$/;"	v
form	notification.php	/^        $form = !is_array($form_id) ? RGFormsModel::get_form_meta($form_id) : $form_id;$/;"	v
form	notification.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	notification.php	/^        $form = apply_filters("gform_admin_pre_render_" . $form_id, apply_filters("gform_admin_pre_render", $form));$/;"	v
form	notification.php	/^        $form = apply_filters("gform_form_notification_page_{$form_id}", apply_filters("gform_form_notification_page", $form, $notification_id), $notification_id);$/;"	v
form	notification.php	/^        $this->form = $form;$/;"	v
form	notification.php	/^    public $form;$/;"	v
form	preview.php	/^            $form = RGFormsModel::get_form_meta($_GET["id"]);$/;"	v
form	print-entry.php	/^$form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	select_columns.php	/^		        $form = self::get_selectable_entry_meta($form);$/;"	v
form	select_columns.php	/^                $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	select_columns.php	/^        $form = RGFormsModel::get_form_meta($form_id);$/;"	v
form	widget.php	/^        $form = RGFormsModel::get_form_meta($instance['form_id']);$/;"	v
form	widget.php	/^    function form( $instance ) {$/;"	f
form_actions	form_list.php	/^                                                $form_actions = GFForms::get_toolbar_menu_items($form->id, true);$/;"	v
form_actions	form_list.php	/^                                            $form_actions = apply_filters("gform_form_actions", $form_actions, $form->id);$/;"	v
form_basics	form_settings.php	/^        $form_basics = array("form_title" => $tr_form_title, "form_description" => $tr_form_description);$/;"	v
form_button	form_settings.php	/^        $form_button = array("form_button_type" => $tr_form_button, "form_button_text" => $tr_form_button_text, "form_button_image_path" => $tr_form_button_image_path, "form_button_conditional" => $tr_form_button_conditional);$/;"	v
form_button_type	form_settings.php	/^        $form_button_type = rgars($form, 'button\/type');$/;"	v
form_count	form_list.php	/^            $form_count = count($form_ids);$/;"	v
form_count	form_list.php	/^        $form_count = RGFormsModel::get_form_count();$/;"	v
form_count	forms_model.php	/^        $form_count = $wpdb->get_var("SELECT count(0) FROM {$form_table_name}");$/;"	v
form_counts	common.php	/^    	$form_counts = GFFormsModel::get_form_count();$/;"	v
form_css_class	form_display.php	/^            $form_css_class = !empty($form["cssClass"]) ? "class='{$form["cssClass"]}'": "";$/;"	v
form_data	includes/addon/class-gf-payment-addon.php	/^        $form_data = array();$/;"	v
form_data	includes/addon/class-gf-payment-addon.php	/^        $form_data = array_merge($form_data, $order_info);$/;"	v
form_element	includes/webapi/webapi.php	/^            $form_element          = array();$/;"	v
form_filter	includes/addon/class-gf-feed-addon.php	/^		$form_filter = is_numeric( $form_id ) ? $wpdb->prepare( 'AND form_id=%d', absint( $form_id ) ) : '';$/;"	v
form_filter	includes/addon/class-gf-feed-addon.php	/^        $form_filter = is_numeric($form_id) ? $wpdb->prepare("AND form_id=%d", absint($form_id)) : "";$/;"	v
form_id	common.php	/^        $form_id            = $form["id"];$/;"	v
form_id	common.php	/^        $form_id = $form["id"];$/;"	v
form_id	common.php	/^        $form_id = IS_ADMIN && empty($form_id) ? rgget("id") : $form_id;$/;"	v
form_id	common.php	/^        $form_id = IS_ADMIN ? rgget("id") : rgar($field,"formId");$/;"	v
form_id	entry_detail.php	/^        $form_id = $form["id"];$/;"	v
form_id	export.php	/^            $form_id = RGFormsModel::insert_form($title);$/;"	v
form_id	export.php	/^            $form_id=$_POST["export_form"];$/;"	v
form_id	export.php	/^        $form_id = $form["id"];$/;"	v
form_id	form_detail.php	/^                $form_id = $result["status"];$/;"	v
form_id	form_detail.php	/^        $form_id =  intval($_POST["form_id"]);$/;"	v
form_id	form_display.php	/^                    $form_id = RGFormsModel::get_form_id( rgar($attr, "name") );$/;"	v
form_id	form_display.php	/^                $form_id = rgar($attr, "id");$/;"	v
form_id	form_display.php	/^            $form_id = RGFormsModel::get_form_id($form_id);$/;"	v
form_id	form_display.php	/^        $form_id = $form["id"];$/;"	v
form_id	form_display.php	/^    public static function is_empty($field, $form_id=0){$/;"	v
form_id	form_list.php	/^                $form_id = abs($result['status']);$/;"	v
form_id	form_list.php	/^            $form_id = RGForms::post("action_argument");$/;"	v
form_id	form_settings.php	/^        $form_id = rgget('id');$/;"	v
form_id	forms_model.php	/^					if ( $form_id == 0 ) {$/;"	v
form_id	forms_model.php	/^		$form_id = $wpdb->get_var($wpdb->prepare("SELECT form_id from $lead_table_name WHERE id=%d", $entry_id));$/;"	v
form_id	forms_model.php	/^            $form_id = $results[0]->form_id;$/;"	v
form_id	forms_model.php	/^            $form_id = absint(rgpost('gform_submit'));$/;"	v
form_id	forms_model.php	/^        $form_id = $entry["form_id"];$/;"	v
form_id	forms_model.php	/^        $form_id = $form["id"];$/;"	v
form_id	forms_model.php	/^        $form_id = 0;$/;"	v
form_id	forms_model.php	/^        $form_id = rgar($field,"formId");$/;"	v
form_id	gravityforms.php	/^            $form_id = $result["form_id"];$/;"	v
form_id	gravityforms.php	/^            $form_id = rgget('id');$/;"	v
form_id	gravityforms.php	/^        $form_id =  intval($_POST["form_id"]);$/;"	v
form_id	gravityforms.php	/^        $form_id = isset($_POST["gform_submit"]) ? absint($_POST["gform_submit"]) : 0;$/;"	v
form_id	gravityforms.php	/^        $form_id = rgget( 'id' );$/;"	v
form_id	gravityforms.php	/^        $form_id = rgpost('formId');$/;"	v
form_id	includes/addon/class-gf-addon.php	/^                $form_id = $form["id"];$/;"	v
form_id	includes/addon/class-gf-addon.php	/^        $form_id = rgget( 'id' );$/;"	v
form_id	includes/addon/class-gf-feed-addon.php	/^	public function get_feeds_by_slug ( $slug, $form_id = null ){$/;"	v
form_id	includes/addon/class-gf-feed-addon.php	/^            $form_id = rgget("id");$/;"	v
form_id	includes/addon/class-gf-feed-addon.php	/^        $form_id = rgar( $form, 'id' );$/;"	v
form_id	includes/addon/class-gf-feed-addon.php	/^    public function get_feeds( $form_id = null ){$/;"	v
form_id	includes/addon/class-gf-results.php	/^                    $form_id = $forms[0]->id;$/;"	v
form_id	includes/addon/class-gf-results.php	/^                $form_id    = $form_meta["id"];$/;"	v
form_id	includes/addon/class-gf-results.php	/^            $form_id                   = rgpost("id");$/;"	v
form_id	includes/addon/class-gf-results.php	/^            $form_id         = rgpost("form_id");$/;"	v
form_id	includes/addon/class-gf-results.php	/^            $form_id        = $form["id"];$/;"	v
form_id	includes/addon/class-gf-results.php	/^            $form_id     = $form["id"];$/;"	v
form_id	includes/api.php	/^            $form_id = $form_meta["id"];$/;"	v
form_id	includes/api.php	/^            $form_id = rgar($current_entry, "form_id");$/;"	v
form_id	includes/api.php	/^        $form_id         = intval($form_id);$/;"	v
form_id	includes/api.php	/^        $form_id = RGFormsModel::insert_form($title);$/;"	v
form_id	includes/api.php	/^        $form_id = rgar($entry, "form_id");$/;"	v
form_id	includes/api.php	/^    public static function add_entries($entries, $form_id = null) {$/;"	v
form_id	includes/api.php	/^    public static function get_feeds($feed_ids = null, $form_id = null, $addon_slug = null, $is_active = true) {$/;"	v
form_id	includes/api.php	/^    public static function update_feed($feed_id, $feed_meta, $form_id = null) {$/;"	v
form_id	includes/api.php	/^    public static function update_form($form_meta, $form_id = null) {$/;"	v
form_id	includes/locking/locking.php	/^        $form_id      = $this->get_object_id();$/;"	v
form_id	includes/locking/locking.php	/^        $form_id      = rgget("id");$/;"	v
form_id	includes/locking/locking.php	/^        $form_id = rgget("id");$/;"	v
form_id	includes/upload.php	/^        $form_id        = intval($_REQUEST["form_id"]);$/;"	v
form_id	includes/webapi/webapi.php	/^                    $form_id            = $form->id;$/;"	v
form_id	includes/webapi/webapi.php	/^            $form_id = $form["id"];$/;"	v
form_id	includes/webapi/webapi.php	/^            $form_id = $lead["form_id"];$/;"	v
form_id	includes/webapi/webapi.php	/^            $form_id = rgar($entry, "form_id");$/;"	v
form_id	includes/webapi/webapi.php	/^        public function delete_feeds($feed_ids, $form_id = null) {$/;"	v
form_id	includes/webapi/webapi.php	/^        public function get_feeds($feed_ids, $form_id = null) {$/;"	v
form_id	includes/webapi/webapi.php	/^        public function post_entries($data, $form_id = null) {$/;"	v
form_id	includes/webapi/webapi.php	/^        public function post_feeds($feeds, $form_id = null) {$/;"	v
form_id	includes/webapi/webapi.php	/^        public function put_forms($data, $form_id = null) {$/;"	v
form_id	notification.php	/^        $form_id = rgget('id');$/;"	v
form_id	print-entry.php	/^$form_id = absint(rgget("fid"));$/;"	v
form_id	select_columns.php	/^        $form_id = $_GET["id"];$/;"	v
form_id_exists	includes/api.php	/^    public static function form_id_exists($form_id) {$/;"	f
form_id_where	forms_model.php	/^            $form_id_where = " AND " . $form_id_where;$/;"	v
form_id_where	forms_model.php	/^            $form_id_where = $form_id > 0 ? $wpdb->prepare("AND form_id=%d", $form_id) : "";$/;"	v
form_id_where	forms_model.php	/^            $form_id_where = $form_id > 0 ? $wpdb->prepare("l.form_id=%d", $form_id) : "";$/;"	v
form_id_where	forms_model.php	/^            $form_id_where = $wpdb->prepare("AND form_id IN ($in_str)", $form_id);$/;"	v
form_id_where	forms_model.php	/^            $form_id_where = $wpdb->prepare("l.form_id IN ($in_str)", $form_id);$/;"	v
form_id_where	forms_model.php	/^        $form_id_where = self::get_form_id_where($form_id);$/;"	v
form_ids	form_list.php	/^            $form_ids = is_array(rgpost('form')) ? rgpost('form') : array();$/;"	v
form_ids	forms_model.php	/^            $form_ids = self::get_form_ids();$/;"	v
form_ids	forms_model.php	/^            $form_ids=array($form_ids);$/;"	v
form_ids	includes/api.php	/^        $form_ids = GFFormsModel::get_form_ids( $active, $trash );$/;"	v
form_ids	includes/api.php	/^        $form_ids = array();$/;"	v
form_ids	includes/webapi/webapi.php	/^                    $form_ids = 0; \/\/ all forms$/;"	v
form_ids	includes/webapi/webapi.php	/^            $form_ids = GFAPI::add_forms($data);$/;"	v
form_ids	includes/webapi/webapi.php	/^            $form_ids = array();$/;"	v
form_ids	includes/webapi/webapi.php	/^        public function get_entries($entry_ids, $form_ids = null, $schema = "", $field_ids = array()) {$/;"	v
form_info	form_display.php	/^            $form_info = RGFormsModel::get_form($form_id);$/;"	v
form_info	gravityforms.php	/^            $form_info = RGFormsModel::get_form($form_id);$/;"	v
form_info	includes/api.php	/^        $form_info            = GFFormsModel::get_form($form_id, true);$/;"	v
form_info	includes/webapi/webapi.php	/^                    $form_info          = array($/;"	v
form_json	form_detail.php	/^        $form_json = $_POST["form"];$/;"	v
form_json	form_detail.php	/^        $form_json = nl2br($form_json);$/;"	v
form_json	form_detail.php	/^        $form_json = stripslashes($form_json);$/;"	v
form_json	form_list.php	/^        $form_json = rgpost('form');$/;"	v
form_json	includes/addon/class-gf-addon.php	/^                $form_json = json_encode($form_meta);$/;"	v
form_layout	form_settings.php	/^        $form_layout = array("form_label_placement" => $tr_form_label_placement, "form_description_placement" => $tr_form_description_placement, "css_class_name" => $tr_css_class_name);$/;"	v
form_list_page	form_list.php	/^    public static function form_list_page(){$/;"	f
form_list_page	gravityforms.php	/^    public static function form_list_page(){$/;"	f
form_markup	widget.php	/^        $form_markup = RGForms::get_form($instance['form_id'], $instance['showtitle'], $instance['showdescription'], false, null, $instance["ajax"]);$/;"	v
form_meta	form_detail.php	/^            $form_meta = GFFormsModel::trim_form_meta_values($form_meta);$/;"	v
form_meta	form_detail.php	/^            $form_meta = RGFormsModel::get_form_meta($id);$/;"	v
form_meta	form_detail.php	/^        $form_meta = json_decode($form_json, true);$/;"	v
form_meta	forms_model.php	/^        $form_meta = apply_filters( "gform_form_update_meta_{$form_id}", $form_meta, $form_id, $meta_name );$/;"	v
form_meta	forms_model.php	/^        $form_meta = apply_filters( 'gform_form_update_meta', $form_meta, $form_id, $meta_name );$/;"	v
form_meta	forms_model.php	/^        $form_meta = json_encode( $form_meta );$/;"	v
form_meta	includes/addon/class-gf-results.php	/^            $form_meta      = GFFormsModel::get_form_meta($form_id);$/;"	v
form_meta_table	forms_model.php	/^        $form_meta_table = self::get_meta_table_name();$/;"	v
form_metas	includes/addon/class-gf-addon.php	/^        $form_metas = GFFormsModel::get_form_meta_by_id($all_form_ids);$/;"	v
form_metas	includes/webapi/webapi.php	/^            $form_metas = GFFormsModel::get_form_meta_by_id($form_ids);$/;"	v
form_options	form_settings.php	/^        $form_options = array("honey_pot" => $tr_honey_pot, "enable_animation" => $tr_enable_animation);$/;"	v
form_restrictions	form_settings.php	/^        $form_restrictions = array("limit_entries" => $tr_limit_entries, "number_of_entries" => $tr_limit_entries_count, "entry_limit_message" => $tr_limit_entries_message, "schedule_form" => $tr_schedule_form, "schedule_start" => $tr_schedule_start, "schedule_end" => $tr_schedule_end, "schedule_pending_message" => $tr_schedule_pending_message,  "schedule_message" => $tr_schedule_message, "requires_login" => $tr_requires_login, "requires_login_message" => $tr_requires_login_message);$/;"	v
form_row	forms_model.php	/^        $form_row = $wpdb->get_row($wpdb->prepare("SELECT display_meta, notifications FROM {$table_name} WHERE form_id=%d", $form_id), ARRAY_A);$/;"	v
form_schedule_validation	form_display.php	/^            $form_schedule_validation = self::validate_form_schedule($form);$/;"	v
form_settings	form_settings.php	/^        $form_settings = apply_filters("gform_form_settings", $form_settings, $form);$/;"	v
form_settings	form_settings.php	/^        $form_settings = array($/;"	v
form_settings	includes/addon/class-gf-addon.php	/^    protected function form_settings($form){}$/;"	f
form_settings	includes/addon/class-gf-feed-addon.php	/^    public function form_settings($form) {$/;"	f
form_settings_fields	includes/addon/class-gf-addon.php	/^    protected function form_settings_fields($form){$/;"	f
form_settings_header	includes/addon/class-gf-feed-addon.php	/^    public function form_settings_header(){$/;"	f
form_settings_icon	includes/addon/class-gf-addon.php	/^    protected function form_settings_icon(){$/;"	f
form_settings_init	includes/addon/class-gf-addon.php	/^    protected function form_settings_init() {$/;"	f
form_settings_init	includes/addon/class-gf-feed-addon.php	/^    public function form_settings_init(){$/;"	f
form_settings_page	form_settings.php	/^    public static function form_settings_page() {$/;"	f
form_settings_page	includes/addon/class-gf-addon.php	/^    public function form_settings_page() {$/;"	f
form_settings_page_title	includes/addon/class-gf-addon.php	/^    protected function form_settings_page_title(){$/;"	f
form_settings_sections	includes/addon/class-gf-feed-addon.php	/^    public function form_settings_sections() {$/;"	f
form_settings_title	includes/addon/class-gf-feed-addon.php	/^    public function form_settings_title(){$/;"	f
form_settings_ui	form_settings.php	/^    public static function form_settings_ui() {$/;"	f
form_string	form_display.php	/^                $form_string = apply_filters('gform_ajax_iframe_content', "<!DOCTYPE html><html><head>" .$/;"	v
form_string	form_display.php	/^        $form_string = "";$/;"	v
form_string	form_display.php	/^        $form_string = apply_filters( 'gform_footer_init_scripts_filter', $form_string, $form, $current_page );$/;"	v
form_string	form_display.php	/^        $form_string = apply_filters( 'gform_footer_init_scripts_filter_' . $form['id'], $form_string, $form, $current_page );$/;"	v
form_string	form_display.php	/^        $form_string = self::get_form_init_scripts($form);$/;"	v
form_table	forms_model.php	/^        $form_table = self::get_form_table_name();$/;"	v
form_table_name	form_detail.php	/^        $form_table_name =  $wpdb->prefix . "rg_form";$/;"	v
form_table_name	forms_model.php	/^        $form_table_name =  $wpdb->prefix . "rg_form";$/;"	v
form_table_name	forms_model.php	/^        $form_table_name =  self::get_form_table_name();$/;"	v
form_table_name	forms_model.php	/^        $form_table_name = self::get_form_table_name();$/;"	v
form_table_name	gravityforms.php	/^        $form_table_name = RGFormsModel::get_form_table_name();$/;"	v
form_table_name	includes/api.php	/^        $form_table_name = $wpdb->prefix . "rg_form";$/;"	v
form_table_name	includes/api.php	/^        $form_table_name = GFFormsModel::get_form_table_name();$/;"	v
form_text	export.php	/^                    $form_text = $count > 1 ? __("forms", "gravityforms") : __("form", "gravityforms");$/;"	v
form_unique_id	forms_model.php	/^        $form_unique_id = self::get_form_unique_id($form_id);$/;"	v
form_unique_id	includes/upload.php	/^        $form_unique_id = rgpost("gform_unique_id");$/;"	v
form_updated	forms_model.php	/^                            $form_updated = true;$/;"	v
form_updated	forms_model.php	/^                    $form_updated = true;$/;"	v
form_updated	gravityforms.php	/^            $form_updated = false;$/;"	v
form_view_table	forms_model.php	/^        $form_view_table = self::get_form_view_table_name();$/;"	v
form_view_table_name	gravityforms.php	/^        $form_view_table_name = RGFormsModel::get_form_view_table_name();$/;"	v
format	common.php	/^                	return $format == "html" ? nl2br($value) : $value;$/;"	v
format	common.php	/^                        $output_arr[] = $format == "text" ? $file_path . PHP_EOL: "<li><a href='$file_path' target='_blank' title='" . __("Click to view", "gravityforms") . "'>" . $info["basename"] . "<\/a><\/li>";$/;"	v
format	common.php	/^                    if(!empty($address) && $format == "html"){$/;"	v
format	common.php	/^                $format = empty($field["dateFormat"]) ? "mdy" : esc_attr($field["dateFormat"]);$/;"	v
format	common.php	/^                if(empty($value) || $format == "text")$/;"	v
format	common.php	/^                return GFCommon::is_valid_email($value) && $format == "html" ? "<a href='mailto:$value'>$value<\/a>" : $value;$/;"	v
format	common.php	/^                return GFCommon::is_valid_url($value) && $format == "html" ? "<a href='$value' target='_blank'>$value<\/a>" : $value;$/;"	v
format	common.php	/^    public static function date_display($value, $format = "mdy"){$/;"	v
format	common.php	/^    public static function parse_date($date, $format="mdy"){$/;"	v
format	entry_list.php	/^            String.prototype.format = function() {$/;"	j
format	form_display.php	/^                                $format = empty($field["dateFormat"]) ? "mdy" : $field["dateFormat"];$/;"	v
format	form_display.php	/^                    $format = 'decimal_dot';$/;"	v
format	form_display.php	/^                    $format = empty($field["dateFormat"]) ? "mdy" : esc_attr($field["dateFormat"]);$/;"	v
format	form_display.php	/^                $format = $currency['decimal_separator'] == ',' ? 'decimal_comma' : 'decimal_dot';$/;"	v
format	form_display.php	/^                $format = rgar( $field, 'numberFormat' ) ? rgar( $field, 'numberFormat' ) : 'decimal_dot';$/;"	v
format	form_display.php	/^            $format = false;$/;"	v
format	forms_model.php	/^        $format = empty($date_format) ? "mdy" : $date_format;$/;"	v
format	includes/addon/class-gf-feed-addon.php	/^        $format = is_numeric($form_id) ? array('%s','%d') : array('%s');$/;"	v
format	includes/phpqrcode/phpqrcode.php	/^                $format = $format >> 1;$/;"	v
format	includes/phpqrcode/phpqrcode.php	/^            $format =  QRspec::getFormatInfo($mask, $level);$/;"	v
format	includes/webapi/webapi.php	/^                $format = "json";$/;"	v
format	includes/webapi/webapi.php	/^            $format = rgar($route_parts, 'extension');$/;"	v
format	js/gf_field_filter.js	/^    String.prototype.format = function () {$/;"	m	class:String
formatDisplayInfo	js/jquery.textareaCounter.plugin.js	/^		function formatDisplayInfo(){$/;"	f	function:countByCharacters
formatInfo	includes/phpqrcode/phpqrcode.php	/^        public static $formatInfo = array($/;"	v
format_chart_h_axis	includes/addon/class-gf-payment-addon.php	/^    protected function format_chart_h_axis($result){$/;"	f
format_currency	common.php	/^                        $format_currency = rgar($match,4) == "currency";$/;"	v
format_date	common.php	/^    public static function format_date($gmt_datetime, $is_human = true, $date_format="", $include_time=true){$/;"	f
format_name	form_display.php	/^                                            $format_name = "dd-mm-yyyy";$/;"	v
format_name	form_display.php	/^                                            $format_name = "dd.mm.yyyy";$/;"	v
format_name	form_display.php	/^                                            $format_name = "dd\/mm\/yyyy";$/;"	v
format_name	form_display.php	/^                                            $format_name = "mm\/dd\/yyyy";$/;"	v
format_name	form_display.php	/^                                            $format_name = "yyyy-mm-dd";$/;"	v
format_name	form_display.php	/^                                            $format_name = "yyyy.mm.dd";$/;"	v
format_name	form_display.php	/^                                            $format_name = "yyyy\/mm\/dd";$/;"	v
format_name	form_display.php	/^                                    $format_name = "";$/;"	v
format_number	common.php	/^    public static function format_number($number, $number_format){$/;"	f
format_numeric	common.php	/^                        $format_numeric = rgar($match,4) == "price";$/;"	v
format_post_category	common.php	/^    public static function format_post_category($value, $use_id){$/;"	f
format_toolbar_menu_items	gravityforms.php	/^	public static function format_toolbar_menu_items($menu_items, $compact = false){$/;"	f
format_variable_value	common.php	/^    private static function format_variable_value($value, $url_encode, $esc_html, $format){$/;"	f
formats	forms_model.php	/^                $formats = $formats[0];$/;"	v
formats	forms_model.php	/^            $formats = get_theme_support('post-formats');$/;"	v
forms	common.php	/^        $forms = GFFormDisplay::get_embedded_forms($content, $is_ajax);$/;"	v
forms	entry_list.php	/^        $forms = RGFormsModel::get_forms(null, "title");$/;"	v
forms	export.php	/^                            $forms = RGFormsModel::get_forms(null, "title");$/;"	v
forms	export.php	/^                        $forms = RGFormsModel::get_forms(null, "title");$/;"	v
forms	export.php	/^            $forms = RGFormsModel::get_form_meta_by_id($selected_forms);$/;"	v
forms	export.php	/^        $forms = $xml->unserialize($xmlstr);$/;"	v
forms	form_detail.php	/^        $forms = RGFormsModel::get_forms();$/;"	v
forms	form_display.php	/^                $forms = self::get_embedded_forms($post->post_content, $ajax);$/;"	v
forms	form_display.php	/^        $forms = array();$/;"	v
forms	form_list.php	/^        $forms = RGFormsModel::get_forms($active, $sort_column, $sort_direction, $trash);$/;"	v
forms	forms_model.php	/^						$forms = GFAPI::get_forms();$/;"	v
forms	forms_model.php	/^					$forms = array();$/;"	v
forms	forms_model.php	/^        $forms = $wpdb->get_results($sql);$/;"	v
forms	forms_model.php	/^        $forms = $wpdb->get_results($sql, ARRAY_A);$/;"	v
forms	forms_model.php	/^        $forms = self::get_forms();$/;"	v
forms	gravityforms.php	/^                                $forms = RGFormsModel::get_forms(1, "title");$/;"	v
forms	gravityforms.php	/^        $forms = RGFormsModel::get_form_summary();$/;"	v
forms	gravityforms.php	/^        $forms = RGFormsModel::get_forms(null, "title");$/;"	v
forms	gravityforms.php	/^    public static function forms(){$/;"	f
forms	includes/addon/class-gf-addon.php	/^        $forms        = GFFormsModel::get_forms();$/;"	v
forms	includes/addon/class-gf-results.php	/^                $forms = RGFormsModel::get_forms();$/;"	v
forms	includes/api.php	/^        $forms = array();$/;"	v
forms	includes/webapi/webapi.php	/^                $forms = RGFormsModel::get_forms(true);$/;"	v
forms	includes/webapi/webapi.php	/^            $forms    = RGFormsModel::get_forms(true);$/;"	v
forms	widget.php	/^                    $forms = RGFormsModel::get_forms(1, "title");$/;"	v
forms_page	form_detail.php	/^    public static function forms_page($form_id){$/;"	f
forms_page	gravityforms.php	/^    public static function forms_page($form_id){$/;"	f
formula	common.php	/^                $formula = str_replace( $text, $value, $formula);$/;"	v
formula	common.php	/^        $formula = (string) apply_filters( 'gform_calculation_formula', rgar( $field, 'calculationFormula' ), $field, $form, $lead );$/;"	v
formula	common.php	/^        $formula = trim( preg_replace( '\/\\s+\/', ' ', $formula ) );$/;"	v
formula_fields	form_display.php	/^        $formula_fields = array();$/;"	v
found	common.php	/^            $found              = true;$/;"	v
found	common.php	/^            $found = false;$/;"	v
found	common.php	/^            $found = true;$/;"	v
found	includes/webapi/webapi.php	/^                                $found = true;$/;"	v
found	includes/webapi/webapi.php	/^                        $found = false;$/;"	v
fourth	xml.php	/^        $fourth = strtolower(substr($str, strlen($str) - 4, 1));$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^                $frame = QRspec::newFrame($a);$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^            $frame = $filler->frame;$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^            $frame = QRspec::newFrame($version);$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^            $frame = array_fill(0, $width, $frameLine);$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^            $this->frame = $frame;$/;"	v
frame	includes/phpqrcode/phpqrcode.php	/^        public $frame;$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                        $frameLine = join('&#9608;&#9608;', explode('1', $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                        $frameLine = join('<span class="m">&nbsp;&nbsp;<\/span>', explode('0', $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('&#8901;', explode("\\0", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('&#9830;', explode("\\x01", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="c">&#9719;<\/span>', explode("\\x91", $frameLine)); \/\/clock 1$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="c">&nbsp;<\/span>',  explode("\\x90", $frameLine)); \/\/clock 0$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="f">&#9618;<\/span>', explode("\\x89", $frameLine)); \/\/version$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="f">&nbsp;<\/span>',  explode("\\x88", $frameLine)); \/\/version$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="m">&#9618;<\/span>', explode("\\xc1", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="m">&nbsp;<\/span>',  explode("\\xc0", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="p">&#9618;<\/span>', explode("\\xa1", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="p">&nbsp;<\/span>',  explode("\\xa0", $frameLine));$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="s">&#9670;<\/span>', explode("\\x85", $frameLine)); \/\/format 1$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="s">&#9671;<\/span>', explode("\\x84", $frameLine)); \/\/format 0$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^                    $frameLine = join('<span class="x">&#9762;<\/span>', explode("\\x81", $frameLine)); \/\/special bit$/;"	v
frameLine	includes/phpqrcode/phpqrcode.php	/^            $frameLine = str_repeat ("\\0", $width);$/;"	v
frameY	includes/phpqrcode/phpqrcode.php	/^                $frameY = $frame[$y];$/;"	v
frameYM	includes/phpqrcode/phpqrcode.php	/^                    $frameYM = $frame[$y-1];$/;"	v
frames	includes/phpqrcode/phpqrcode.php	/^        public static $frames = array();$/;"	v
from	common.php	/^            $from = get_bloginfo( 'admin_email' );$/;"	v
from	common.php	/^        $from = GFCommon::replace_variables($from, $form, $lead, false, false);$/;"	v
from	common.php	/^        $from = GFCommon::replace_variables(rgar($notification, "from"), $form, $lead, false, false);$/;"	v
from	common.php	/^        $from = GFCommon::replace_variables(rgget("from", $form["autoResponder"]), $form, $lead, false, false);$/;"	v
from	common.php	/^        $from = rgempty("fromField", $form["notification"]) ? rgget("from", $form["notification"]) : rgget($form["notification"]["fromField"], $lead);$/;"	v
from_name	common.php	/^            $from_name = GFCommon::get_lead_field_display($field, $value);$/;"	v
from_name	common.php	/^            $from_name = rgget("fromName", $form["notification"]);$/;"	v
from_name	common.php	/^        $from_name = GFCommon::replace_variables($from_name, $form, $lead, false, false);$/;"	v
from_name	common.php	/^        $from_name = GFCommon::replace_variables(rgar($notification, "fromName"), $form, $lead, false, false, true, 'text');$/;"	v
from_name	common.php	/^        $from_name = GFCommon::replace_variables(rgget("fromName", $form["autoResponder"]), $form, $lead, false, false);$/;"	v
from_name	common.php	/^    private static function send_email($from, $to, $bcc, $reply_to, $subject, $message, $from_name="", $message_format="html", $attachments=""){$/;"	v
fs	recaptchalib.php	/^	if( false == ( $fs = @fsockopen($host, $port, $errno, $errstr, 10) ) ) {$/;"	v
full_path	includes/addon/class-gf-addon.php	/^            $full_path = $this->_full_path;$/;"	v
full_tag	common.php	/^            $full_tag = $match[0];$/;"	v
full_values	forms_model.php	/^            $full_values = array();$/;"	v
g	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:r
gateway	includes/addon/class-gf-payment-addon.php	/^		$gateway = gform_get_meta($entry_id, 'payment_gateway');$/;"	v
gateway	includes/addon/class-gf-payment-addon.php	/^        return $gateway == $this->_slug;$/;"	v
generateMaskNo	includes/phpqrcode/phpqrcode.php	/^        private function generateMaskNo($maskNo, $width, $frame)$/;"	f
generateUniqueID	js/gravityforms.js	/^    function generateUniqueID() {$/;"	f
generate_checksum	includes/addon/class-gf-results.php	/^        private static function generate_checksum($data) {$/;"	f
generated_check_sum	includes/addon/class-gf-results.php	/^                    $generated_check_sum = self::generate_checksum($state);$/;"	v
genpoly	includes/phpqrcode/phpqrcode.php	/^        public $genpoly = array();   \/\/ Generator polynomial$/;"	v
get	common.php	/^    public static function get($key, &$found = null) {$/;"	f
get	gravityforms.php	/^    public static function get($name, $array=null){$/;"	f
getAddRemoveButtons	js/gf_field_filter.js	/^    function getAddRemoveButtons () {$/;"	f
getAllFiles	js/gravityforms.js	/^        function getAllFiles(){$/;"	f
getBitStream	includes/phpqrcode/phpqrcode.php	/^        public function getBitStream()$/;"	f
getByteStream	includes/phpqrcode/phpqrcode.php	/^        public function getByteStream()$/;"	f
getCleanedWordString	js/jquery.textareaCounter.plugin.js	/^		function getCleanedWordString(content){$/;"	f	function:countByCharacters
getCode	includes/phpqrcode/phpqrcode.php	/^        public function getCode()$/;"	f
getDataLength	includes/phpqrcode/phpqrcode.php	/^        public static function getDataLength($version, $level)$/;"	f
getECCLength	includes/phpqrcode/phpqrcode.php	/^        public static function getECCLength($version, $level)$/;"	f
getEccSpec	includes/phpqrcode/phpqrcode.php	/^        public static function getEccSpec($version, $level, array &$spec)$/;"	f
getErrorCorrectionLevel	includes/phpqrcode/phpqrcode.php	/^        public function getErrorCorrectionLevel()$/;"	f
getFiles	js/gravityforms.js	/^        function getFiles(fieldID){$/;"	f
getFilter	js/gf_field_filter.js	/^    function getFilter (key) {$/;"	f
getFilterFields	js/gf_field_filter.js	/^    function getFilterFields() {$/;"	f
getFilterMode	js/gf_field_filter.js	/^    function getFilterMode(mode){$/;"	f
getFilterOperators	js/gf_field_filter.js	/^    function getFilterOperators (filter) {$/;"	f
getFilterValues	js/gf_field_filter.js	/^    function getFilterValues (filter) {$/;"	f
getFormatInfo	includes/phpqrcode/phpqrcode.php	/^        public static function getFormatInfo($mask, $level)$/;"	f
getFrameAt	includes/phpqrcode/phpqrcode.php	/^        public function getFrameAt($at)$/;"	f
getInfo	js/jquery.textareaCounter.plugin.js	/^		function getInfo(){$/;"	f	function:countByCharacters
getInputName	js/gravityforms.js	/^        function getInputName(fieldID){$/;"	f
getLeadIds	entry_list.php	/^            function getLeadIds(){$/;"	f
getMinimumVersion	includes/phpqrcode/phpqrcode.php	/^        public static function getMinimumVersion($size, $level)$/;"	f
getNewFilterRow	js/gf_field_filter.js	/^    function getNewFilterRow() {$/;"	f
getNewlineCount	js/jquery.textareaCounter.plugin.js	/^		function getNewlineCount(content){$/;"	f	function:countByCharacters
getNextCharLeftInformation	js/jquery.textareaCounter.plugin.js	/^		function getNextCharLeftInformation(container){$/;"	f	function:countByCharacters
getPlural	entry_list.php	/^            function getPlural(count, singular, plural) {$/;"	f
getRemainder	includes/phpqrcode/phpqrcode.php	/^        public static function getRemainder($version)$/;"	f
getResults	includes/addon/js/gaddon_results.js	/^    getResults: function () {$/;"	m	class:gresults
getSelectAllText	entry_list.php	/^            function getSelectAllText(){$/;"	f
getSelectAllTr	entry_list.php	/^            function getSelectAllTr(){$/;"	f
getVersion	includes/phpqrcode/phpqrcode.php	/^        public function getVersion()$/;"	f
getVersionPattern	includes/phpqrcode/phpqrcode.php	/^        public static function getVersionPattern($version)$/;"	f
getWidth	includes/phpqrcode/phpqrcode.php	/^        public static function getWidth($version)$/;"	f
get_action_links	includes/addon/class-gf-feed-addon.php	/^    protected function get_action_links(){$/;"	f
get_addon_info	gravityforms.php	/^    public static function get_addon_info($api, $action, $args){$/;"	f
get_addon_nonces	gravityforms.php	/^    public static function get_addon_nonces(){$/;"	f
get_address_types	common.php	/^    public static function get_address_types($form_id){$/;"	f
get_akismet_field	common.php	/^    private static function get_akismet_field($field_type, $form, $lead){$/;"	f
get_akismet_fields	common.php	/^    private static function get_akismet_fields($form, $lead){$/;"	f
get_api_calls	common.php	/^    public static function get_api_calls(){$/;"	f
get_app_menu_icon	includes/addon/class-gf-addon.php	/^    protected function get_app_menu_icon(){ return ""; }$/;"	f
get_app_menu_items	includes/addon/class-gf-addon.php	/^    protected function get_app_menu_items(){$/;"	f
get_app_setting	includes/addon/class-gf-addon.php	/^    protected function get_app_setting($setting_name){$/;"	f
get_app_settings	includes/addon/class-gf-addon.php	/^    protected function get_app_settings() {$/;"	f
get_app_settings_tabs	includes/addon/class-gf-addon.php	/^    public function get_app_settings_tabs(){$/;"	f
get_base_path	common.php	/^    public static function get_base_path(){$/;"	f
get_base_path	includes/addon/class-gf-addon.php	/^    protected function get_base_path($full_path = "") {$/;"	f
get_base_url	common.php	/^    public static function get_base_url(){$/;"	f
get_base_url	includes/addon/class-gf-addon.php	/^    protected function get_base_url($full_path = "") {$/;"	f
get_browser_class	common.php	/^    public static function get_browser_class() {$/;"	f
get_bulk_action	includes/addon/class-gf-feed-addon.php	/^    private function get_bulk_action(){$/;"	f
get_bulk_actions	includes/addon/class-gf-feed-addon.php	/^    function get_bulk_actions() {$/;"	f
get_bulk_actions	includes/addon/class-gf-feed-addon.php	/^    protected function get_bulk_actions(){$/;"	f
get_calculation_value	common.php	/^    public static function get_calculation_value($field_id, $form, $lead) {$/;"	f
get_calculations_init_script	form_display.php	/^    public static function get_calculations_init_script($form) {$/;"	f
get_canadian_provinces	common.php	/^    public static function get_canadian_provinces(){$/;"	f
get_canadian_provinces_dropdown	common.php	/^    public static function get_canadian_provinces_dropdown($selected_province = ""){$/;"	f
get_captcha	common.php	/^    public static function get_captcha($field){$/;"	f
get_card_type	common.php	/^    public static function get_card_type($number){$/;"	f
get_card_types	common.php	/^    public static function get_card_types(){$/;"	f
get_changelog	gravityforms.php	/^    public static function get_changelog(){$/;"	f
get_chart_data	includes/addon/class-gf-payment-addon.php	/^    protected function get_chart_data($data){$/;"	f
get_checkbox_choices	common.php	/^    public static function get_checkbox_choices($field, $value, $disabled_text){$/;"	f
get_children	xml.php	/^    private function get_children($values, $parent_index){$/;"	f
get_choice_attributes	includes/addon/class-gf-addon.php	/^    protected function get_choice_attributes($choice, $field_attributes, $default_choice_attributes = array()){$/;"	f
get_choice_text	forms_model.php	/^    public static function get_choice_text($field, $value, $input_id=0){$/;"	f
get_chosen_init_script	form_display.php	/^    public static function get_chosen_init_script($form){$/;"	f
get_column_content	form_settings.php	/^    public static function get_column_content($item) {$/;"	f
get_column_type	form_settings.php	/^    public static function get_column_type($item) {$/;"	f
get_column_value	includes/addon/class-gf-feed-addon.php	/^    public function get_column_value($item, $column) {$/;"	f
get_column_value_amount	includes/addon/class-gf-payment-addon.php	/^    public function get_column_value_amount($feed){$/;"	f
get_column_value_transactionType	includes/addon/class-gf-payment-addon.php	/^    public function get_column_value_transactionType($feed){$/;"	f
get_conditional_logic	form_display.php	/^    private static function get_conditional_logic($form, $field_values = array()){$/;"	f
get_conditional_logic_fields	form_display.php	/^    public static function get_conditional_logic_fields($form, $fieldId){$/;"	f
get_confirmation_ui_settings	form_settings.php	/^    public static function get_confirmation_ui_settings($confirmation) {$/;"	f
get_counter_init_script	form_display.php	/^    public static function get_counter_init_script($form){$/;"	f
get_countries	common.php	/^    public static function get_countries(){$/;"	f
get_country_code	common.php	/^    public static function get_country_code($country_name) {$/;"	f
get_country_dropdown	common.php	/^    public static function get_country_dropdown($selected_country = ""){$/;"	f
get_credit_card_field	includes/addon/class-gf-payment-addon.php	/^    protected function get_credit_card_field( $form ) {$/;"	f
get_credit_card_init_script	form_display.php	/^    public static function get_credit_card_init_script($form) {$/;"	f
get_credit_card_rules	form_display.php	/^    public static function get_credit_card_rules() {$/;"	f
get_currencies	currency.php	/^    public static function get_currencies(){$/;"	f
get_currency	common.php	/^    public static function get_currency(){$/;"	f
get_currency	currency.php	/^    public static function get_currency($code){$/;"	f
get_currency_format_init_script	form_display.php	/^    public static function get_currency_format_init_script($form){$/;"	f
get_current_feed	includes/addon/class-gf-feed-addon.php	/^    public function get_current_feed(){$/;"	f
get_current_feed_id	includes/addon/class-gf-feed-addon.php	/^    public function get_current_feed_id(){$/;"	f
get_current_form	includes/addon/class-gf-addon.php	/^    protected function get_current_form(){$/;"	f
get_current_lead	forms_model.php	/^    public static function get_current_lead() {$/;"	f
get_current_page	form_display.php	/^    public static function get_current_page($form_id){$/;"	f
get_current_page_url	forms_model.php	/^    public static function get_current_page_url($force_ssl=false) {$/;"	f
get_current_settings	includes/addon/class-gf-addon.php	/^    protected function get_current_settings(){$/;"	f
get_custom_choices	forms_model.php	/^    public static function get_custom_choices(){$/;"	f
get_custom_field	forms_model.php	/^    private static function get_custom_field($form, $meta_name, $meta_index){$/;"	f
get_custom_field_names	forms_model.php	/^    public static function get_custom_field_names(){$/;"	f
get_date_range_where	forms_model.php	/^    private static function get_date_range_where($search_criteria) {$/;"	f
get_day_dropdown	common.php	/^    private static function get_day_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	f
get_db_charset	forms_model.php	/^    public static function get_db_charset(){$/;"	f
get_default_feed_id	includes/addon/class-gf-feed-addon.php	/^    protected function get_default_feed_id($form_id){$/;"	f
get_default_field_results	includes/addon/class-gf-results.php	/^        public static function get_default_field_results($form_id, $field, $search_criteria, $offset, $page_size, &$more_remaining = false) {$/;"	f
get_default_post_title	forms_model.php	/^    private static function get_default_post_title(){$/;"	f
get_default_value	forms_model.php	/^    public static function get_default_value($field, $input_id){$/;"	f
get_description	form_display.php	/^    private static function get_description($description, $css_class){$/;"	f
get_disallowed_file_extensions	common.php	/^    public static function get_disallowed_file_extensions(){$/;"	f
get_email_fields	common.php	/^    public static function get_email_fields($form){$/;"	f
get_emails_sent	common.php	/^    public static function get_emails_sent(){$/;"	f
get_embed_post	common.php	/^    public static function get_embed_post(){$/;"	f
get_embedded_forms	form_display.php	/^    public static function get_embedded_forms($post_content, &$ajax){$/;"	f
get_encrypted_fields	forms_model.php	/^    public static function get_encrypted_fields( $entry_id ) {$/;"	f
get_entries	includes/api.php	/^    public static function get_entries($form_ids, $search_criteria = array(), $sorting = null, $paging = null, &$total_count = null) {$/;"	f
get_entries	includes/webapi/webapi.php	/^        public function get_entries($entry_ids, $form_ids = null, $schema = "", $field_ids = array()) {$/;"	f
get_entry	includes/api.php	/^    public static function get_entry($entry_id) {$/;"	f
get_entry_by_transaction_id	includes/addon/class-gf-payment-addon.php	/^    protected function get_entry_by_transaction_id( $transaction_id ) {$/;"	f
get_entry_info_filter_columns	common.php	/^    public static function get_entry_info_filter_columns($get_users = true){$/;"	f
get_entry_info_filter_settings	common.php	/^    public static function get_entry_info_filter_settings() {$/;"	f
get_entry_meta	export.php	/^	private static function get_entry_meta($form){$/;"	f
get_entry_meta	forms_model.php	/^    public static function get_entry_meta($form_ids){$/;"	f
get_entry_meta	includes/addon/class-gf-addon.php	/^    protected function get_entry_meta($entry_meta, $form_id) {$/;"	f
get_entry_meta_filter_settings	common.php	/^    public static function get_entry_meta_filter_settings($form_id) {$/;"	f
get_error_icon	includes/addon/class-gf-addon.php	/^    protected function get_error_icon( $field ) {$/;"	f
get_error_response	includes/webapi/webapi.php	/^        public function get_error_response($wp_error) {$/;"	f
get_error_status	includes/webapi/webapi.php	/^        public function get_error_status($wp_error) {$/;"	f
get_expiration_months	common.php	/^    private static function get_expiration_months($selected_month){$/;"	f
get_expiration_years	common.php	/^    private static function get_expiration_years($selected_year){$/;"	f
get_feed	includes/addon/class-gf-feed-addon.php	/^    public function get_feed( $id ) {$/;"	f
get_feed_settings_fields	includes/addon/class-gf-feed-addon.php	/^    public function get_feed_settings_fields() {$/;"	f
get_feed_table	includes/addon/class-gf-feed-addon.php	/^    public function get_feed_table( $form ) {$/;"	f
get_feeds	includes/addon/class-gf-feed-addon.php	/^    public function get_feeds( $form_id = null ){$/;"	f
get_feeds	includes/api.php	/^    public static function get_feeds($feed_ids = null, $form_id = null, $addon_slug = null, $is_active = true) {$/;"	f
get_feeds	includes/webapi/webapi.php	/^        public function get_feeds($feed_ids, $form_id = null) {$/;"	f
get_feeds_by_entry	includes/addon/class-gf-feed-addon.php	/^    public function get_feeds_by_entry($entry_id){$/;"	f
get_feeds_by_slug	includes/addon/class-gf-feed-addon.php	/^	public function get_feeds_by_slug ( $slug, $form_id = null ){$/;"	f
get_field	form_display.php	/^    public static function get_field($field, $value="", $force_frontend_label = false, $form=null, $field_values=null){$/;"	f
get_field	forms_model.php	/^    public static function get_field($form, $field_id){$/;"	f
get_field	includes/addon/class-gf-addon.php	/^    protected function get_field( $name, $settings ) {$/;"	f
get_field_attributes	includes/addon/class-gf-addon.php	/^    protected function get_field_attributes($field, $default = array()){$/;"	f
get_field_content	form_display.php	/^    public static function get_field_content($field, $value="", $force_frontend_label = false, $form_id=0){$/;"	f
get_field_display	forms_model.php	/^    private static function get_field_display($form, $field, $field_values, $lead=null){$/;"	f
get_field_errors	includes/addon/class-gf-addon.php	/^    protected function get_field_errors( $field = false ) {$/;"	f
get_field_filter_settings	common.php	/^    public static function get_field_filter_settings($form) {$/;"	f
get_field_filters_from_post	common.php	/^    public static function get_field_filters_from_post($form){$/;"	f
get_field_filters_where	forms_model.php	/^    private static function get_field_filters_where($form_id, $search_criteria) {$/;"	f
get_field_input	common.php	/^    public static function get_field_input($field, $value="", $lead_id=0, $form_id=0){$/;"	f
get_field_map_choices	includes/addon/class-gf-addon.php	/^    public static function get_field_map_choices( $form_id ) {$/;"	f
get_field_map_fields	includes/addon/class-gf-addon.php	/^    public static function get_field_map_fields( $feed, $field_name ) {$/;"	f
get_field_merge_tag	forms_model.php	/^    private static function get_field_merge_tag($form, $field_id){$/;"	f
get_field_merge_tags	common.php	/^    public static function get_field_merge_tags($field, $option="") {$/;"	f
get_field_results	includes/addon/class-gf-results.php	/^        public static function get_field_results($form_id, $data, $field, $search_criteria) {$/;"	f
get_field_row_count	export.php	/^    private static function get_field_row_count($form, $exported_field_ids, $entry_count){$/;"	f
get_field_type_title	common.php	/^    public static function get_field_type_title($type){$/;"	f
get_field_value	forms_model.php	/^    public static function get_field_value(&$field, $field_values = array(), $get_from_post=true){$/;"	f
get_field_value_long	forms_model.php	/^    public static function get_field_value_long($lead, $field_number, $form, $apply_filter=true){$/;"	f
get_field_values	notification.php	/^    private static function get_field_values($i, $form, $field_id, $selected_value, $max_field_length = 16){$/;"	f
get_fields	includes/addon/class-gf-results.php	/^        private function get_fields($form) {$/;"	f
get_fields_by_type	common.php	/^    public static function get_fields_by_type($form, $types){$/;"	f
get_file_upload_path	forms_model.php	/^    public static function get_file_upload_path($form_id, $file_name){$/;"	f
get_fileupload_value	forms_model.php	/^    private static function get_fileupload_value($form_id, $input_name){$/;"	f
get_first_routing_field	notification.php	/^    private static function get_first_routing_field($form){$/;"	f
get_form	form_display.php	/^    public static function get_form($form_id, $display_title=true, $display_description=true, $force_display=false, $field_values=null, $ajax=false, $tabindex = 1){$/;"	f
get_form	forms_model.php	/^    public static function get_form($form_id, $allow_trash = false){$/;"	f
get_form	gravityforms.php	/^    public static function get_form($form_id, $display_title=true, $display_description=true, $force_display=false, $field_values=null, $ajax=false, $tabindex = 1){$/;"	f
get_form	includes/api.php	/^    public static function get_form($form_id) {$/;"	f
get_form_button	form_display.php	/^    private static function get_form_button($form_id, $button_input_id, $button, $default_text, $class, $alt, $target_page_number){$/;"	f
get_form_confirmations	forms_model.php	/^    public static function get_form_confirmations($form_id) {$/;"	f
get_form_count	forms_model.php	/^    public static function get_form_count(){$/;"	f
get_form_counts	forms_model.php	/^    public static function get_form_counts($form_id){$/;"	f
get_form_fields_as_choices	includes/addon/class-gf-addon.php	/^    public function get_form_fields_as_choices( $form, $args = array() ) {$/;"	f
get_form_id	forms_model.php	/^    public static function get_form_id($form_title){$/;"	f
get_form_id_where	forms_model.php	/^    private static function get_form_id_where($form_id){$/;"	f
get_form_ids	forms_model.php	/^    public static function get_form_ids($active = true, $trash = false){$/;"	f
get_form_init_scripts	form_display.php	/^    public static function get_form_init_scripts($form) {$/;"	f
get_form_meta	forms_model.php	/^    public static function get_form_meta($form_id){$/;"	f
get_form_meta_by_id	forms_model.php	/^    public static function get_form_meta_by_id($ids){$/;"	f
get_form_metas	includes/webapi/webapi.php	/^        public static function get_form_metas() {$/;"	f
get_form_payment_totals	forms_model.php	/^    public static function get_form_payment_totals($form_id){$/;"	f
get_form_settings	includes/addon/class-gf-addon.php	/^    protected function get_form_settings($form) {$/;"	f
get_form_settings_sub_menu_items	gravityforms.php	/^	public static function get_form_settings_sub_menu_items($form_id) {$/;"	f
get_form_summary	forms_model.php	/^    public static function get_form_summary(){$/;"	f
get_form_table_name	forms_model.php	/^    public static function get_form_table_name(){$/;"	f
get_form_unique_id	forms_model.php	/^    public static function get_form_unique_id($form_id) {$/;"	f
get_form_view_table_name	forms_model.php	/^    public static function get_form_view_table_name(){$/;"	f
get_forms	forms_model.php	/^    public static function get_forms($is_active = null, $sort_column = "title", $sort_dir = "ASC", $is_trash = false){$/;"	f
get_forms	includes/api.php	/^    public static function get_forms( $active = true, $trash = false ) {$/;"	f
get_forms	includes/webapi/webapi.php	/^        public function get_forms($form_ids = null, $schema = "") {$/;"	f
get_forms_by_id	forms_model.php	/^    public static function get_forms_by_id($ids){$/;"	f
get_full_address	includes/addon/class-gf-addon.php	/^    protected function get_full_address($entry, $field_id){$/;"	f
get_full_name	includes/addon/class-gf-addon.php	/^    protected function get_full_name($entry, $field_id){$/;"	f
get_gfaddon_base_path	includes/addon/class-gf-addon.php	/^    final public static function get_gfaddon_base_path() {$/;"	f
get_gfaddon_base_url	includes/addon/class-gf-addon.php	/^    final public static function get_gfaddon_base_url() {$/;"	f
get_gmt_date	export.php	/^    public static function get_gmt_date($local_date){$/;"	f
get_gmt_timestamp	common.php	/^    public static function get_gmt_timestamp($local_timestamp){$/;"	f
get_gmt_timestamp	export.php	/^    public static function get_gmt_timestamp($local_timestamp){$/;"	f
get_grid_column_meta	forms_model.php	/^    public static function get_grid_column_meta($form_id){$/;"	f
get_grid_columns	forms_model.php	/^    public static function get_grid_columns($form_id, $input_label_only=false){$/;"	f
get_honeypot_field	form_display.php	/^    private static function get_honeypot_field($form){$/;"	f
get_honeypot_labels	form_display.php	/^    private static function get_honeypot_labels(){$/;"	f
get_icon_url	entry_list.php	/^    public static function get_icon_url($path){$/;"	f
get_info_search_where	forms_model.php	/^    private static function get_info_search_where($search_criteria) {$/;"	f
get_input	common.php	/^    public static function get_input($field, $id){$/;"	f
get_input	forms_model.php	/^    public static function get_input($field, $id){$/;"	f
get_input_mask_init_script	form_display.php	/^    public static function get_input_mask_init_script($form) {$/;"	f
get_input_masks	forms_model.php	/^    public static function get_input_masks(){$/;"	f
get_input_type	forms_model.php	/^    public static function get_input_type($field){$/;"	f
get_input_value	forms_model.php	/^    private static function get_input_value($field, $standard_name, $custom_name = "", $field_values=array(), $get_from_post=true){$/;"	f
get_ip	forms_model.php	/^    public static function get_ip(){$/;"	f
get_js_redirect_confirmation	form_display.php	/^    private static function get_js_redirect_confirmation($url, $ajax){$/;"	f
get_key	common.php	/^    public static function get_key(){$/;"	f
get_key	includes/addon/class-gf-auto-upgrade.php	/^    private function get_key() {$/;"	f
get_key_info	common.php	/^    public static function get_key_info($key){$/;"	f
get_label	common.php	/^    public static function get_label($field, $input_id = 0, $input_only = false){$/;"	f
get_label	forms_model.php	/^    public static function get_label($field, $input_id = 0, $input_only = false){$/;"	f
get_lead	forms_model.php	/^    public static function get_lead($lead_id){$/;"	f
get_lead_count	forms_model.php	/^    public static function get_lead_count($form_id, $search, $star=null, $read=null, $start_date=null, $end_date=null, $status=null, $payment_status = null){$/;"	f
get_lead_count_all_forms	forms_model.php	/^    public static function get_lead_count_all_forms($status='active'){$/;"	f
get_lead_db_columns	forms_model.php	/^    private static function get_lead_db_columns(){$/;"	f
get_lead_detail_id	forms_model.php	/^    public static function get_lead_detail_id($current_fields, $field_number){$/;"	f
get_lead_details_long_table_name	forms_model.php	/^    public static function get_lead_details_long_table_name(){$/;"	f
get_lead_details_table_name	forms_model.php	/^    public static function get_lead_details_table_name(){$/;"	f
get_lead_field_display	common.php	/^    public static function get_lead_field_display($field, $value, $currency="", $use_text=false, $format="html", $media="screen"){$/;"	f
get_lead_field_value	forms_model.php	/^    public static function get_lead_field_value($lead, $field){$/;"	f
get_lead_ids	forms_model.php	/^    public static function get_lead_ids($form_id, $search, $star=null, $read=null, $start_date=null, $end_date=null, $status=null, $payment_status = null){$/;"	f
get_lead_meta_table_name	forms_model.php	/^    public static function get_lead_meta_table_name(){$/;"	f
get_lead_notes	forms_model.php	/^    public static function get_lead_notes($lead_id){$/;"	f
get_lead_notes_table_name	forms_model.php	/^    public static function get_lead_notes_table_name(){$/;"	f
get_lead_table_name	forms_model.php	/^    public static function get_lead_table_name(){$/;"	f
get_lead_view_name	forms_model.php	/^    public static function get_lead_view_name(){$/;"	f
get_leads	forms_model.php	/^    public static function get_leads($form_id, $sort_field_number=0, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $start_date=null, $end_date=null, $status='active', $payment_status = false){$/;"	f
get_leads_by_meta	forms_model.php	/^    public static function get_leads_by_meta($meta_key, $meta_value){$/;"	f
get_leads_count	forms_model.php	/^    public static function get_leads_count($form_id) { }$/;"	f
get_leads_where_sql	forms_model.php	/^    public static function get_leads_where_sql($args) {$/;"	f
get_likert_score	includes/addon/class-gf-results.php	/^        public function get_likert_score($field, $entry) {$/;"	f
get_limit_period_dates	form_display.php	/^    private static function get_limit_period_dates($period){$/;"	f
get_list_input	common.php	/^    private static function get_list_input($field, $has_columns, $column, $value, $form_id){$/;"	f
get_local_timestamp	common.php	/^    public static function get_local_timestamp($timestamp = null){$/;"	f
get_lock_meta	includes/locking/class-gf-locking.php	/^    protected function get_lock_meta($object_id) {$/;"	f
get_lock_request_meta	includes/locking/class-gf-locking.php	/^    protected function get_lock_request_meta($object_id) {$/;"	f
get_lock_ui	includes/locking/class-gf-locking.php	/^    public function get_lock_ui($user_id) {$/;"	f
get_locking_config	includes/addon/class-gf-addon.php	/^    public function get_locking_config() {$/;"	f
get_locking_object_id	includes/addon/class-gf-addon.php	/^    public function get_locking_object_id() {$/;"	f
get_logic_event	common.php	/^    private static function get_logic_event($field, $event){$/;"	f
get_mapped_field_name	includes/addon/class-gf-addon.php	/^    public function get_mapped_field_name( $parent_field, $field_name ) {$/;"	f
get_mapped_field_value	includes/addon/class-gf-addon.php	/^    protected function get_mapped_field_value( $setting_name, $form, $entry, $settings = false ){$/;"	f
get_math_captcha	common.php	/^    public static function get_math_captcha($field, $pos){$/;"	f
get_max_field_id	form_display.php	/^    private static function get_max_field_id($form){$/;"	f
get_max_page_number	form_display.php	/^    private static function get_max_page_number($form){$/;"	f
get_merge_tags	common.php	/^    public static function get_merge_tags($fields, $element_id, $hide_all_fields = false, $exclude_field_types = array(), $option = '') {$/;"	f
get_meta_table_name	forms_model.php	/^    public static function get_meta_table_name(){$/;"	f
get_month_dropdown	common.php	/^    private static function get_month_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	f
get_mysql_tz_offset	includes/addon/class-gf-payment-addon.php	/^    private function get_mysql_tz_offset(){$/;"	f
get_notification	notification.php	/^    private static function get_notification($form, $notification_id){$/;"	f
get_notification_post_category_values	gravityforms.php	/^    public static function get_notification_post_category_values(){$/;"	f
get_notification_ui_settings	notification.php	/^    private static function get_notification_ui_settings($notification) {$/;"	f
get_notifications	common.php	/^    public static function get_notifications($action, $form){$/;"	f
get_notifications_to_send	common.php	/^    public static function get_notifications_to_send($action, $form, $lead){$/;"	f
get_number_dropdown	common.php	/^    private static function get_number_dropdown($name, $id, $selected_value, $tabindex, $disabled_text, $placeholder, $start_number, $end_number){$/;"	f
get_number_formats_script	form_display.php	/^    public static function get_number_formats_script( $form ) {$/;"	f
get_numeric_choices	includes/addon/class-gf-payment-addon.php	/^    public function get_numeric_choices($min, $max){$/;"	f
get_object_id	includes/addon/class-gf-addon-locking.php	/^    protected function get_object_id() {$/;"	f
get_object_id	includes/locking/class-gf-locking.php	/^    protected function get_object_id() {$/;"	f
get_object_id	includes/locking/locking.php	/^    protected function get_object_id() {$/;"	f
get_option_info	common.php	/^    public static function get_option_info($value, $option, $use_choice_text){$/;"	f
get_order_data	includes/addon/class-gf-payment-addon.php	/^    protected function get_order_data($feed, $form, $entry){$/;"	f
get_order_total	common.php	/^    public static function get_order_total($form, $lead) {$/;"	f
get_other_choice_value	common.php	/^    public static function get_other_choice_value(){$/;"	f
get_page	gravityforms.php	/^    public static function get_page() {$/;"	f
get_page_by_field	forms_model.php	/^    public static function get_page_by_field($form, $field){$/;"	f
get_page_by_number	forms_model.php	/^    public static function get_page_by_number($form, $page_number){$/;"	f
get_parameter_value	forms_model.php	/^    public static function get_parameter_value($name, $field_values, $field){$/;"	f
get_parent_menu	gravityforms.php	/^    public static function get_parent_menu($addon_menus){$/;"	f
get_parent_menu	includes/addon/class-gf-addon.php	/^    private function get_parent_menu($menu_items, $addon_menus) {$/;"	f
get_password_strength_init_script	form_display.php	/^    public static function get_password_strength_init_script($form) {$/;"	f
get_payment_choices	includes/addon/class-gf-payment-addon.php	/^    protected function get_payment_choices($form){$/;"	f
get_payment_feed	includes/addon/class-gf-payment-addon.php	/^    public function get_payment_feed( $entry, $form = false ) {$/;"	f
get_payment_methods	includes/addon/class-gf-payment-addon.php	/^    protected function get_payment_methods($form_id){$/;"	f
get_paypal_feed	includes/addon/class-gf-feed-addon.php	/^    public function get_paypal_feed( $form_id, $entry ) {$/;"	f
get_plugin_setting	includes/addon/class-gf-addon.php	/^    protected function get_plugin_setting($setting_name){$/;"	f
get_plugin_settings	includes/addon/class-gf-addon.php	/^    protected function get_plugin_settings() {$/;"	f
get_plugin_settings_url	includes/addon/class-gf-addon.php	/^    protected function get_plugin_settings_url() {$/;"	f
get_post_category_values	form_detail.php	/^    public static function get_post_category_values(){$/;"	f
get_post_category_values	gravityforms.php	/^    public static function get_post_category_values(){$/;"	f
get_post_category_values	notification.php	/^    public static function get_post_category_values(){$/;"	f
get_post_field_value	forms_model.php	/^    private static function get_post_field_value($field, $lead){$/;"	f
get_post_fields	forms_model.php	/^    private static function get_post_fields($form, $lead) {$/;"	f
get_post_image_variable	common.php	/^    private static function get_post_image_variable($media_id, $arg1, $arg2, $is_url = false){$/;"	f
get_posted_settings	includes/addon/class-gf-addon.php	/^    protected function get_posted_settings(){$/;"	f
get_prepared_input_value	forms_model.php	/^    public static function get_prepared_input_value($form, $field, $lead, $input_id) {$/;"	f
get_previous_settings	includes/addon/class-gf-addon.php	/^    protected function get_previous_settings() {$/;"	f
get_pricing_init_script	form_display.php	/^    public static function get_pricing_init_script($form) {$/;"	f
get_product_fields	common.php	/^    public static function get_product_fields($form, $lead, $use_choice_text=false, $use_admin_label=false){$/;"	f
get_product_fields_by_type	common.php	/^    public static function get_product_fields_by_type($form, $types, $product_id){$/;"	f
get_progress_bar	form_display.php	/^    private static function get_progress_bar($form, $form_id,$confirmation_message) {$/;"	f
get_radio_choices	common.php	/^    public static function get_radio_choices($field, $value="", $disabled_text){$/;"	f
get_range_message	common.php	/^    public static function get_range_message($field){$/;"	f
get_remote_message	common.php	/^    public static function get_remote_message(){$/;"	f
get_remote_post_params	common.php	/^    public static function get_remote_post_params(){$/;"	f
get_remote_request_params	common.php	/^    public static function get_remote_request_params(){$/;"	f
get_remote_request_params	includes/addon/class-gf-auto-upgrade.php	/^    private function get_remote_request_params($offering, $key, $version){$/;"	f
get_required_indicator	includes/addon/class-gf-addon.php	/^    protected function get_required_indicator( $field ) {$/;"	f
get_results	includes/webapi/webapi.php	/^        public function get_results($form_id) {$/;"	f
get_results_cache_key	includes/webapi/webapi.php	/^        public function get_results_cache_key($form_id, $fields, $search_criteria) {$/;"	f
get_results_cache_key_prefix	includes/webapi/webapi.php	/^        public function get_results_cache_key_prefix($form_id) {$/;"	f
get_results_cache_meta	includes/webapi/webapi.php	/^        public function get_results_cache_meta($form_id) {$/;"	f
get_results_cache_meta_key	includes/webapi/webapi.php	/^        public function get_results_cache_meta_key($form_id) {$/;"	f
get_results_cron_hook	includes/webapi/webapi.php	/^        public function get_results_cron_hook() {$/;"	f
get_results_data	includes/addon/class-gf-results.php	/^        public function get_results_data($form, $fields, $search_criteria = array(), $state_array = array(), $max_execution_time = 15 \/* seconds *\/) {$/;"	f
get_results_page_config	includes/addon/class-gf-addon.php	/^     * public function get_results_page_config() {$/;"	f
get_results_page_config	includes/addon/class-gf-addon.php	/^    public function get_results_page_config() {$/;"	f
get_results_page_config	includes/addon/class-gf-payment-addon.php	/^    public function get_results_page_config() {$/;"	f
get_routing_fields	notification.php	/^    private static function get_routing_fields($form, $selected_field_id){$/;"	f
get_sales_chart	includes/addon/class-gf-payment-addon.php	/^    public static function get_sales_chart($sales_data) {$/;"	f
get_sales_data	includes/addon/class-gf-payment-addon.php	/^    protected function get_sales_data($form_id, $search, $state){$/;"	f
get_sales_summary	includes/addon/class-gf-payment-addon.php	/^    protected function get_sales_summary($form_id){$/;"	f
get_save_button	includes/addon/class-gf-addon.php	/^    protected function get_save_button($sections){$/;"	f
get_save_error_message	includes/addon/class-gf-addon.php	/^    protected function get_save_error_message( $sections ) {$/;"	f
get_save_error_message	includes/addon/class-gf-feed-addon.php	/^    protected function get_save_error_message( $sections ) {$/;"	f
get_save_success_message	includes/addon/class-gf-addon.php	/^    protected function get_save_success_message( $sections ) {$/;"	f
get_save_success_message	includes/addon/class-gf-feed-addon.php	/^    protected function get_save_success_message( $sections ) {$/;"	f
get_search_operator	forms_model.php	/^    private static function get_search_operator($search_criteria){$/;"	f
get_search_where	forms_model.php	/^    private static function get_search_where($form_id, $search_criteria){$/;"	f
get_section	forms_model.php	/^    public static function get_section($form, $field_id){$/;"	f
get_section_fields	common.php	/^    public static function get_section_fields($form, $section_field_id){$/;"	f
get_select_choices	common.php	/^    public static function get_select_choices($field, $value=""){$/;"	f
get_select_option	includes/addon/class-gf-addon.php	/^    protected function get_select_option( $choice, $selected_value ) {$/;"	f
get_select_options	includes/addon/class-gf-addon.php	/^    public function get_select_options( $choices, $selected_value ) {$/;"	f
get_selectable_entry_meta	select_columns.php	/^    public static function get_selectable_entry_meta($form){$/;"	f
get_selection_fields	common.php	/^    public static function get_selection_fields($form, $selected_field_id){$/;"	f
get_selection_value	common.php	/^    public static function get_selection_value($value){$/;"	f
get_setting	includes/addon/class-gf-addon.php	/^    protected function get_setting( $setting_name, $default_value = "" , $settings = false ) {$/;"	f
get_short_title	includes/addon/class-gf-addon.php	/^    protected function get_short_title() {$/;"	f
get_simple_captcha	common.php	/^    public static function get_simple_captcha(){$/;"	f
get_source_page	form_display.php	/^    public static function get_source_page($form_id){$/;"	f
get_state	form_display.php	/^    public static function get_state($form, $field_values){$/;"	f
get_state_dropdown	common.php	/^    public static function get_state_dropdown($states, $selected_state=""){$/;"	f
get_state_field	common.php	/^    private static function get_state_field($field, $id, $field_id, $state_value, $disabled_text, $form_id){$/;"	f
get_string	includes/locking/class-gf-locking.php	/^    public function get_string($string_key) {$/;"	f
get_strings	includes/addon/class-gf-addon-locking.php	/^    public function get_strings() {$/;"	f
get_strings	includes/locking/class-gf-locking.php	/^    protected function get_strings() {$/;"	f
get_strings	includes/locking/locking.php	/^    public function get_strings() {$/;"	f
get_submission_data	includes/addon/class-gf-payment-addon.php	/^    protected function get_submission_data($feed, $form, $entry){$/;"	f
get_submitted_fields	common.php	/^    public static function get_submitted_fields($form, $lead, $display_empty=false, $use_text=false, $format="html", $use_admin_label=false, $merge_tag="", $options=""){$/;"	f
get_submitted_fields	forms_model.php	/^    public static function get_submitted_fields($form_id){$/;"	f
get_submitted_pricing_fields	common.php	/^    public static function get_submitted_pricing_fields($form, $lead, $format, $use_text=true, $use_admin_label=false){$/;"	f
get_subview	settings.php	/^    public static function get_subview() {$/;"	f
get_tabindex	common.php	/^    public static function get_tabindex(){$/;"	f
get_tables	forms_model.php	/^    public static function get_tables() {$/;"	f
get_tabs	export.php	/^    public static function get_tabs() {$/;"	f
get_tabs	form_settings.php	/^    public static function get_tabs($form_id) {$/;"	f
get_target_page	form_display.php	/^    public static function get_target_page($form, $current_page, $field_values){$/;"	f
get_temp_filename	forms_model.php	/^    public static function get_temp_filename($form_id, $input_name){$/;"	f
get_toolbar_menu_items	gravityforms.php	/^	public static function get_toolbar_menu_items($form_id, $compact = false){$/;"	f
get_total	common.php	/^    public static function get_total($products) {$/;"	f
get_total_entries	includes/addon/class-gf-results.php	/^        public static function get_total_entries($form) {$/;"	f
get_transient	common.php	/^    private static function get_transient($key) {$/;"	f
get_upload_path	forms_model.php	/^    public static function get_upload_path($form_id){$/;"	f
get_upload_root	forms_model.php	/^    public static function get_upload_root(){$/;"	f
get_upload_url	forms_model.php	/^    public static function get_upload_url($form_id){$/;"	f
get_upload_url_root	forms_model.php	/^    public static function get_upload_url_root(){$/;"	f
get_us_state_code	common.php	/^    public static function get_us_state_code($state_name){$/;"	f
get_us_state_dropdown	common.php	/^    public static function get_us_state_dropdown($selected_state = ""){$/;"	f
get_us_states	common.php	/^    public static function get_us_states(){$/;"	f
get_validation_result	includes/addon/class-gf-payment-addon.php	/^    protected function get_validation_result($validation_result, $authorization_result){$/;"	f
get_version_info	common.php	/^    public static function get_version_info($cache=true){$/;"	f
get_version_info	includes/addon/class-gf-auto-upgrade.php	/^    private function get_version_info($offering, $use_cache=true){$/;"	f
get_wp_option	gravityforms.php	/^    public static function get_wp_option($option_name){$/;"	f
get_year_dropdown	common.php	/^    private static function get_year_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	f
gfConfirmBulkAction	form_list.php	/^            function gfConfirmBulkAction(element_id){$/;"	f
gfFilterUI.addNewFieldFilter	js/gf_field_filter.js	/^    gfFilterUI.addNewFieldFilter = function (el) {$/;"	f
gfFilterUI.changeField	js/gf_field_filter.js	/^    gfFilterUI.changeField = function (fieldSelect) {$/;"	f
gfFilterUI.removeFieldFilter	js/gf_field_filter.js	/^    gfFilterUI.removeFieldFilter = function (img) {$/;"	f
gf_ajax_actions	gravityforms.php	/^        $gf_ajax_actions = array('rg_save_form', 'rg_change_input_type', 'rg_add_field', 'rg_duplicate_field',$/;"	v
gf_apply_field_rule	js/conditional_logic.js	/^function gf_apply_field_rule(formId, fieldId, isInit, callback){$/;"	f
gf_apply_rules	js/conditional_logic.js	/^function gf_apply_rules(formId, fields, isInit){$/;"	f
gf_caps	gravityforms.php	/^        $gf_caps = GFCommon::all_caps();$/;"	v
gf_check_field_rule	js/conditional_logic.js	/^function gf_check_field_rule(formId, fieldId, isInit, callback){$/;"	f
gf_do_action	js/conditional_logic.js	/^function gf_do_action(action, targetId, useAnimation, defaultValues, isInit, callback){$/;"	f
gf_do_field_action	js/conditional_logic.js	/^function gf_do_field_action(formId, action, fieldId, isInit, callback){$/;"	f
gf_do_next_button_action	js/conditional_logic.js	/^function gf_do_next_button_action(formId, action, fieldId, isInit){$/;"	f
gf_entry_locking	entry_detail.php	/^            <h2 class="gf_admin_page_title"><span><?php echo __("Entry #", "gravityforms") . absint($lead["id"]); ?><\/span><span class="gf_admin_page_subtitle"><span class="gf_admin_page_formid">ID: <?php echo $form['id']; ?><\/span><?php echo $form['title']; $gf_entry_locking = new GFEntryLocking(); $gf_entry_locking->lock_info($lead_id);?><\/span><\/h2>$/;"	v
gf_entry_locking	entry_list.php	/^                        $gf_entry_locking = new GFEntryLocking();$/;"	v
gf_form_locking	form_list.php	/^                                $gf_form_locking = new GFFormLocking();$/;"	v
gf_get_field_action	js/conditional_logic.js	/^function gf_get_field_action(formId, conditionalLogic){$/;"	f
gf_get_value	js/conditional_logic.js	/^function gf_get_value(val){$/;"	f
gf_global	common.php	/^        $gf_global = array();$/;"	v
gf_global	common.php	/^    public static function gf_global($echo = true) {$/;"	f
gf_global_json	common.php	/^        $gf_global_json = 'var gf_global = ' . json_encode($gf_global) . ';';$/;"	v
gf_global_script	form_display.php	/^            $gf_global_script = "if(typeof gf_global == 'undefined') " . GFCommon::gf_global(false);$/;"	v
gf_is_match	js/conditional_logic.js	/^function gf_is_match(formId, rule){$/;"	f
gf_license_key	gravityforms.php	/^$gf_license_key = "";$/;"	v
gf_locking	includes/addon/class-gf-addon.php	/^        $gf_locking = new GFAddonLocking($this->get_locking_config(),$this);$/;"	v
gf_matches_operation	js/conditional_logic.js	/^function gf_matches_operation(val1, val2, operation){$/;"	f
gf_pages	gravityforms.php	/^        $gf_pages = array("gf_edit_forms", "gf_new_form", "gf_entries", "gf_settings", "gf_export", "gf_help");$/;"	v
gf_recaptcha_private_key	gravityforms.php	/^$gf_recaptcha_private_key = "";$/;"	v
gf_recaptcha_public_key	gravityforms.php	/^$gf_recaptcha_public_key = "";$/;"	v
gf_register_widget	widget.php	/^function gf_register_widget() {$/;"	f
gf_required_scripts	gravityforms.php	/^        $gf_required_scripts = array($/;"	v
gf_required_styles	gravityforms.php	/^        $gf_required_styles = array($/;"	v
gf_reset_to_default	js/conditional_logic.js	/^function gf_reset_to_default(targetId, defaultValue){$/;"	f
gf_results	includes/addon/class-gf-addon.php	/^            $gf_results = new GFResults($this->_slug, $this->get_results_page_config());$/;"	v
gf_results	includes/addon/class-gf-addon.php	/^        $gf_results = new GFResults($this->_slug, $results_page_config);$/;"	v
gf_results	includes/webapi/webapi.php	/^                    $gf_results         = new GFResults($this->_slug, array());$/;"	v
gf_results	includes/webapi/webapi.php	/^                $gf_results = new GFResults($this->_slug, array());$/;"	v
gf_try_convert_float	js/conditional_logic.js	/^function gf_try_convert_float(text){$/;"	f
gf_vars	common.php	/^        $gf_vars = array();$/;"	v
gf_vars	common.php	/^    public static function gf_vars($echo = true) {$/;"	f
gf_vars_json	common.php	/^        $gf_vars_json = 'var gf_vars = ' . json_encode($gf_vars) . ';';$/;"	v
gfapiCalculateSig	includes/webapi/js/gfwebapi_settings.js	/^function gfapiCalculateSig(stringToSign, privateKey) {$/;"	f
gfapiToggleSettings	includes/webapi/js/gfwebapi_settings.js	/^function gfapiToggleSettings(enabled) {$/;"	f
gfield_original_title	js/gravityforms.js	/^var gfield_original_title = "";$/;"	v
gflocking.init	includes/locking/js/locking-list.js	/^    gflocking.init = function () {$/;"	f
gflocking.init	includes/locking/js/locking-view.js	/^    gflocking.init = function () {$/;"	f
gflocking.init	includes/locking/js/locking.js	/^    gflocking.init = function () {$/;"	f
gformAddListItem	js/gravityforms.js	/^function gformAddListItem(element, max){$/;"	f
gformAdjustClasses	js/gravityforms.js	/^function gformAdjustClasses(table){$/;"	f
gformBindFormatPricingFields	js/gravityforms.js	/^function gformBindFormatPricingFields(){$/;"	f
gformCalculateProductPrice	js/gravityforms.js	/^function gformCalculateProductPrice(form_id, productFieldId){$/;"	f	function:gformGetDecimalSeparator
gformCalculateTotalPrice	js/gravityforms.js	/^function gformCalculateTotalPrice(formId){$/;"	f	function:gformGetDecimalSeparator
gformCleanNumber	js/gravityforms.js	/^function gformCleanNumber(text, symbol_right, symbol_left, decimal_separator){$/;"	f
gformDeleteListItem	js/gravityforms.js	/^function gformDeleteListItem(element, max){$/;"	f
gformDeleteUploadedFile	js/gravityforms.js	/^function gformDeleteUploadedFile(formId, fieldId, deleteButton){$/;"	f	function:gformGetDecimalSeparator
gformFindCardType	js/gravityforms.js	/^function gformFindCardType(value) {$/;"	f
gformFormatMoney	js/gravityforms.js	/^function gformFormatMoney(text){$/;"	f	function:gformGetDecimalSeparator
gformFormatPricingField	js/gravityforms.js	/^function gformFormatPricingField(element){$/;"	f	function:gformGetDecimalSeparator
gformGetBasePrice	js/gravityforms.js	/^function gformGetBasePrice(formId, productFieldId){$/;"	f	function:gformGetDecimalSeparator
gformGetDecimalSeparator	js/gravityforms.js	/^function gformGetDecimalSeparator(numberFormat){$/;"	f
gformGetFieldId	js/gravityforms.js	/^function gformGetFieldId(element){$/;"	f	function:gformGetDecimalSeparator
gformGetOptionLabel	js/gravityforms.js	/^function gformGetOptionLabel(element, selected_value, current_price, form_id, field_id){$/;"	f	function:gformGetDecimalSeparator
gformGetPrice	js/gravityforms.js	/^function gformGetPrice(text){$/;"	f
gformGetPriceDifference	js/gravityforms.js	/^function gformGetPriceDifference(currentPrice, newPrice){$/;"	f	function:gformGetDecimalSeparator
gformGetProductIds	js/gravityforms.js	/^function gformGetProductIds(parent_class, element){$/;"	f	function:gformGetDecimalSeparator
gformGetProductQuantity	js/gravityforms.js	/^function gformGetProductQuantity( formId, productFieldId ) {$/;"	f	function:gformGetDecimalSeparator
gformGetShippingPrice	js/gravityforms.js	/^function gformGetShippingPrice(formId){$/;"	f	function:gformGetDecimalSeparator
gformInitChosenFields	js/gravityforms.js	/^function gformInitChosenFields(fieldList, noResultsText){$/;"	f
gformInitCurrencyFormatFields	js/gravityforms.js	/^function gformInitCurrencyFormatFields(fieldList){$/;"	f
gformInitDatepicker	js/datepicker.js	/^function gformInitDatepicker(){$/;"	f
gformInitPriceFields	js/gravityforms.js	/^function gformInitPriceFields(){$/;"	f
gformInitSpinner	js/gravityforms.js	/^function gformInitSpinner( formId, spinnerUrl ) {$/;"	f
gformIsHidden	js/gravityforms.js	/^function gformIsHidden(element){$/;"	f	function:gformGetDecimalSeparator
gformIsNumber	js/gravityforms.js	/^function gformIsNumber(n) {$/;"	f	function:gformGetDecimalSeparator
gformIsNumeric	js/gravityforms.js	/^function gformIsNumeric(value, number_format){$/;"	f	function:gformGetDecimalSeparator
gformMatchCard	js/gravityforms.js	/^function gformMatchCard(id) {$/;"	f
gformPasswordStrength	js/gravityforms.js	/^function gformPasswordStrength(password1, password2) {$/;"	f
gformRedirect	form_display.php	/^        $confirmation = "<script type=\\"text\/javascript\\">" . apply_filters("gform_cdata_open", "") . " function gformRedirect(){document.location.href='$url';}";$/;"	f
gformRegisterPriceField	js/gravityforms.js	/^function gformRegisterPriceField(item){$/;"	f
gformShowPasswordStrength	js/gravityforms.js	/^function gformShowPasswordStrength(fieldId){$/;"	f
gformToNumber	js/gravityforms.js	/^function gformToNumber(text){$/;"	f	function:gformGetDecimalSeparator
gformToggleCreditCard	js/gravityforms.js	/^function gformToggleCreditCard(){$/;"	f
gformToggleIcons	js/gravityforms.js	/^function gformToggleIcons(table, max){$/;"	f
gform_delete_meta	forms_model.php	/^function gform_delete_meta($entry_id, $meta_key=""){$/;"	f
gform_do_shortcode	common.php	/^    public static function gform_do_shortcode($content){$/;"	f
gform_footer	form_display.php	/^    private static function gform_footer($form, $class, $ajax, $field_values, $previous_button, $display_title, $display_description, $tabindex = 1){$/;"	f
gform_get_meta	forms_model.php	/^function gform_get_meta($entry_id, $meta_key){$/;"	f
gform_get_meta_values_for_entries	forms_model.php	/^function gform_get_meta_values_for_entries($entry_ids, $meta_keys){$/;"	f
gform_tooltip	tooltips.php	/^function gform_tooltip($name, $css_class="", $return=false){$/;"	f
gform_update_meta	forms_model.php	/^function gform_update_meta($entry_id, $meta_key, $meta_value){$/;"	f
gforms	gravityforms.php	/^            $gforms = get_plugin_data( __FILE__ );$/;"	v
gfpoly	includes/phpqrcode/phpqrcode.php	/^        public $gfpoly;$/;"	v
gmt_timestamp	export.php	/^        $gmt_timestamp = self::get_gmt_timestamp($local_timestamp);$/;"	v
goNext	js/thickbox.js	/^				function goNext(){$/;"	f	function:function
goPrev	js/thickbox.js	/^				function goPrev(){$/;"	f	function:function
go_to_next_page	export.php	/^            $go_to_next_page = count($results) == $page_size;$/;"	v
go_to_next_page	export.php	/^        $go_to_next_page = true;$/;"	v
gravity_form	gravityforms.php	/^function gravity_form($id, $display_title=true, $display_description=true, $display_inactive=false, $field_values=null, $ajax=false, $tabindex = 1, $echo = true){$/;"	f
gravity_form_enqueue_scripts	gravityforms.php	/^function gravity_form_enqueue_scripts($form_id, $is_ajax=false){$/;"	f
gravityforms_settings_page	settings.php	/^    public static function gravityforms_settings_page(){$/;"	f
green	includes/addon/class-gf-results.php	/^                            $green   = (int)(($xg + (($percent * ($yg - $xg)) \/ ($n - 1))));$/;"	v
gresultsAjaxRequest	includes/addon/js/gaddon_results.js	/^var gresultsAjaxRequest;$/;"	v
grid_columns	forms_model.php	/^        $grid_columns = RGFormsModel::get_grid_columns($form_id);$/;"	v
group	common.php	/^            <?php foreach($merge_tags as $group => $group_tags) {$/;"	v
group	includes/addon/class-gf-payment-addon.php	/^        $group = strtolower(rgpost('group'));$/;"	v
group_by	includes/addon/class-gf-payment-addon.php	/^                $group_by = "date";$/;"	v
group_by	includes/addon/class-gf-payment-addon.php	/^                $group_by = "month";$/;"	v
group_by	includes/addon/class-gf-payment-addon.php	/^                $group_by = "week";$/;"	v
group_label	common.php	/^                $group_label = rgar($group_tags, 'label');$/;"	v
h	includes/phpqrcode/phpqrcode.php	/^                    $h = ($val >> 8) * 0xc0;$/;"	v
h	includes/phpqrcode/phpqrcode.php	/^            $h = count($frame);$/;"	v
hAxis_column	includes/addon/class-gf-payment-addon.php	/^        $hAxis_column = $data["chart"]["hAxis"]["column"];$/;"	v
hAxis_value	includes/addon/class-gf-payment-addon.php	/^            $hAxis_value = $row[$hAxis_column];$/;"	v
handle	gravityforms.php	/^    public static function add_settings_page( $name, $handle = '', $icon_path = '' ){$/;"	v
handleBulkApply	entry_list.php	/^            function handleBulkApply(actionElement){$/;"	f
handle_confirmation	form_display.php	/^    public static function handle_confirmation($form, $lead, $ajax=false){$/;"	f
handle_confirmation_edit_submission	form_settings.php	/^    public static function handle_confirmation_edit_submission($confirmation, $form) {$/;"	f
handle_page_request	includes/webapi/webapi.php	/^        public function handle_page_request() {$/;"	f
handle_submission	form_display.php	/^	public static function handle_submission($form, &$lead, $ajax=false){$/;"	f
has_admin_notification	common.php	/^    public static function has_admin_notification($form){$/;"	f
has_akismet	common.php	/^    public static function has_akismet(){$/;"	f
has_app_menu	includes/addon/class-gf-addon.php	/^    public function has_app_menu() {$/;"	f
has_app_settings	includes/addon/class-gf-addon.php	/^    public function has_app_settings() {$/;"	f
has_calculation_field	form_display.php	/^    public static function has_calculation_field($form) {$/;"	f
has_cap	common.php	/^            $has_cap = current_user_can($caps) || current_user_can("gform_full_access");$/;"	v
has_character_counter	form_display.php	/^    private static function has_character_counter($form){$/;"	f
has_columns	common.php	/^                $has_columns = is_array($value[0]);$/;"	v
has_columns	common.php	/^                $has_columns = is_array(rgar($field, "choices"));$/;"	v
has_conditional_logic	form_display.php	/^        $has_conditional_logic = self::has_conditional_logic_legwork( $form );$/;"	v
has_conditional_logic	form_display.php	/^    public static function has_conditional_logic( $form ) {$/;"	f
has_conditional_logic_legwork	form_display.php	/^    private static function has_conditional_logic_legwork($form){$/;"	f
has_content_field	forms_model.php	/^        $has_content_field = sizeof(GFCommon::get_fields_by_type($form, array("post_content"))) > 0;$/;"	v
has_credit_card_field	common.php	/^    public static function has_credit_card_field($form){$/;"	f
has_credit_card_field	includes/addon/class-gf-payment-addon.php	/^    protected function has_credit_card_field( $form ) {$/;"	f
has_currency_format_number_field	form_display.php	/^    private static function has_currency_format_number_field($form){$/;"	f
has_database_permission	gravityforms.php	/^    private static function has_database_permission(&$error){$/;"	f
has_datepicker_field	form_display.php	/^    private static function has_datepicker_field($form){$/;"	f
has_enhanced_dropdown	form_display.php	/^    private static function has_enhanced_dropdown($form){$/;"	f
has_entry	form_detail.php	/^            function has_entry(fieldNumber){$/;"	f
has_feed	includes/addon/class-gf-feed-addon.php	/^    protected function has_feed( $form_id, $meets_conditional_logic = null ) {$/;"	f
has_feed_condition_field	includes/addon/class-gf-feed-addon.php	/^    protected function has_feed_condition_field() {$/;"	f
has_field_by_type	common.php	/^    private static function has_field_by_type($form, $type) {$/;"	f
has_field_calculation	common.php	/^    public static function has_field_calculation($field) {$/;"	f
has_field_input_mask	form_display.php	/^    public static function has_field_input_mask($field){$/;"	f
has_fileupload_field	form_display.php	/^    private static function has_fileupload_field($form){$/;"	f
has_form_settings_page	includes/addon/class-gf-addon.php	/^    private function has_form_settings_page() {$/;"	f
has_full_access	common.php	/^        $has_full_access = current_user_can("gform_full_access");$/;"	v
has_full_access	gravityforms.php	/^        $has_full_access = current_user_can("gform_full_access");$/;"	v
has_full_access	includes/addon/class-gf-addon.php	/^        $has_full_access = current_user_can("gform_full_access");$/;"	v
has_gf_cap	gravityforms.php	/^                    $has_gf_cap = true;$/;"	v
has_gf_cap	gravityforms.php	/^            $has_gf_cap = false;$/;"	v
has_https_plugin	common.php	/^        $has_https_plugin = class_exists('WordPressHTTPS') && isset($wordpress_https);$/;"	v
has_identical_tags	xml.php	/^    private function has_identical_tags($nodes){$/;"	f
has_index	gravityforms.php	/^        $has_index = $wpdb->get_var("SHOW INDEX FROM {$table} WHERE Key_name='{$index}'");$/;"	v
has_input	forms_model.php	/^    public static function has_input($field, $input_id){$/;"	f
has_input_mask	form_display.php	/^    public static function has_input_mask($form, $field = false){$/;"	f
has_input_name	form_detail.php	/^        $has_input_name = strtolower(rgpost("inputName")) != "false";$/;"	v
has_isSsl_method	common.php	/^        $has_isSsl_method = $has_https_plugin && method_exists('WordPressHTTPS', 'isSsl');$/;"	v
has_is_ssl_method	common.php	/^        $has_is_ssl_method = $has_https_plugin && method_exists('WordPressHTTPS', 'is_ssl');$/;"	v
has_list_field	common.php	/^    public static function has_list_field($form){$/;"	f
has_lock	includes/locking/class-gf-locking.php	/^    protected function has_lock() {$/;"	f
has_long_field	forms_model.php	/^                $has_long_field = intval($wpdb->get_var($sql)) > 0;$/;"	v
has_members_plugin	gravityforms.php	/^    public static function has_members_plugin(){$/;"	f
has_members_plugin	includes/addon/class-gf-addon.php	/^    protected function has_members_plugin() {$/;"	f
has_multifile_fileupload_field	common.php	/^    public static function has_multifile_fileupload_field($form){$/;"	f
has_other_choice	form_display.php	/^    private static function has_other_choice($form){$/;"	f
has_pages	common.php	/^    public static function has_pages($form){$/;"	f
has_pages	form_detail.php	/^                        $has_pages = GFCommon::has_pages($form);$/;"	v
has_pages	form_display.php	/^        $has_pages = self::has_pages($form);$/;"	v
has_pages	form_display.php	/^    private static function has_pages($form){$/;"	f
has_password_strength	form_display.php	/^    private static function has_password_strength($form){$/;"	f
has_paypal_payment	includes/addon/class-gf-feed-addon.php	/^	public function has_paypal_payment( $feed, $form, $entry ){$/;"	f
has_permission	gravityforms.php	/^                $has_permission = false;$/;"	v
has_permission	gravityforms.php	/^            $has_permission = false;$/;"	v
has_permission	gravityforms.php	/^        $has_permission = true;$/;"	v
has_placeholder	common.php	/^        $has_placeholder = rgar($field, 'categoryInitialItemEnabled') && RGFormsModel::get_input_type($field) == 'select';$/;"	v
has_plugin_page	includes/addon/class-gf-addon.php	/^    private function has_plugin_page() {$/;"	f
has_plugin_settings_page	includes/addon/class-gf-addon.php	/^    public function has_plugin_settings_page() {$/;"	f
has_post_field	common.php	/^    public static function has_post_field($fields){$/;"	f
has_post_field	forms_model.php	/^                $has_post_field = true;$/;"	v
has_post_field	forms_model.php	/^        $has_post_field = false;$/;"	v
has_price_field	form_display.php	/^    private static function has_price_field($form){$/;"	f
has_product_fields	entry_detail.php	/^                                $has_product_fields = true;$/;"	v
has_product_fields	entry_detail.php	/^                $has_product_fields = false;$/;"	v
has_quantity	common.php	/^                $has_quantity = sizeof(GFCommon::get_product_fields_by_type($form, array("quantity"), $field["id"])) > 0;$/;"	v
has_quantity_field	common.php	/^                $has_quantity_field = sizeof(GFCommon::get_product_fields_by_type($form, array("quantity"), $field["id"])) > 0;$/;"	v
has_recaptcha_field	form_display.php	/^    private static function has_recaptcha_field($form){$/;"	f
has_setting_field_type	includes/addon/class-gf-addon.php	/^    protected function has_setting_field_type( $type, $fields ) {$/;"	f
has_state_drop_down	common.php	/^        $has_state_drop_down = isset($address_types[$address_type]["states"]) && is_array($address_types[$address_type]["states"]);$/;"	v
has_subscription	includes/addon/class-gf-payment-addon.php	/^    public function has_subscription($entry){$/;"	f
has_title_field	forms_model.php	/^        $has_title_field = sizeof(GFCommon::get_fields_by_type($form, array("post_title"))) > 0;$/;"	v
has_update	common.php	/^    public static function has_update($use_cache=true){$/;"	f
has_user_notification	common.php	/^    public static function has_user_notification($form){$/;"	f
has_version_changed	gravityforms.php	/^            $has_version_changed = self::get_wp_option("rg_form_version") != GFCommon::$version;$/;"	v
has_version_changed	gravityforms.php	/^        $has_version_changed = get_option("rg_form_version") != GFCommon::$version;$/;"	v
hash	form_display.php	/^            $hash = wp_hash($input_value);$/;"	v
hash	form_display.php	/^        $hash = json_encode($product_fields);$/;"	v
hash	includes/webapi/webapi.php	/^            $hash = hash_hmac("sha1", $string, $this->_private_key, true);$/;"	v
head	includes/phpqrcode/phpqrcode.php	/^                        $head = 1;$/;"	v
head	includes/phpqrcode/phpqrcode.php	/^                $head = 0;$/;"	v
head	includes/phpqrcode/phpqrcode.php	/^            $head = 0;$/;"	v
headers	common.php	/^        $headers = array();$/;"	v
headers	entry_detail.php	/^                    $headers = "From: \\"$email_from\\" <$email_from> \\r\\n";$/;"	v
headers	export.php	/^        $headers = array();$/;"	v
headers	forms_model.php	/^        $headers = array( 'HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'REMOTE_ADDR' );$/;"	v
heartbeat_check_locked_objects	includes/locking/class-gf-locking.php	/^    public function heartbeat_check_locked_objects($response, $data, $screen_id) {$/;"	f
heartbeat_key	includes/locking/class-gf-locking.php	/^        $heartbeat_key = 'gform-check-locked-objects-' . $this->_object_type;$/;"	v
heartbeat_key	includes/locking/class-gf-locking.php	/^        $heartbeat_key = 'gform-refresh-lock-' . $this->_object_type;$/;"	v
heartbeat_key	includes/locking/class-gf-locking.php	/^        $heartbeat_key = 'gform-request-lock-' . $this->_object_type;$/;"	v
heartbeat_refresh_lock	includes/locking/class-gf-locking.php	/^    public function heartbeat_refresh_lock($response, $data, $screen_id) {$/;"	f
heartbeat_refresh_nonces	includes/locking/class-gf-locking.php	/^    public function heartbeat_refresh_nonces($response, $data, $screen_id) {$/;"	f
heartbeat_request_lock	includes/locking/class-gf-locking.php	/^    public function heartbeat_request_lock($response, $data, $screen_id) {$/;"	f
height	includes/addon/class-gf-results.php	/^                    $height          = ""; \/\/             = sprintf("height:%dpx", (count($choices) * $bar_height));$/;"	v
help_page	gravityforms.php	/^    public static function help_page(){$/;"	f
help_page	help.php	/^    public static function help_page() {$/;"	f
hex2rgb	common.php	/^    private static function hex2rgb($color){$/;"	f
hidden	includes/locking/class-gf-locking.php	/^        $hidden = $locked ? '' : ' hidden';$/;"	v
hidden	js/forms.js	/^    "hidden" :          ".prepopulate_field_setting, .label_setting, .default_value_setting",$/;"	p	class:fieldSettings
hidden_class	common.php	/^                    $hidden_class = " gform_hidden";$/;"	v
hidden_class	common.php	/^                $hidden_class = $preview = "";$/;"	v
hidden_class	form_display.php	/^        $hidden_class = in_array($input_type, array("hidden", "hiddenproduct")) ? "gform_hidden" : "";$/;"	v
hidden_field	includes/addon/class-gf-feed-addon.php	/^        $hidden_field = array($/;"	v
hidden_field_value	includes/addon/class-gf-addon.php	/^		$hidden_field_value = $value == '1' ? '1' : '0';$/;"	v
hidden_product_class	form_display.php	/^        $hidden_product_class = $input_type == "hiddenproduct" ? "gfield_hidden_product" : "";$/;"	v
hidden_style	common.php	/^                $hidden_style = "style='display:none;'";$/;"	v
hiddenproduct	js/forms.js	/^    "hiddenproduct" :   ".base_price_setting",$/;"	p	class:fieldSettings
hideMessage	entry_list.php	/^            function hideMessage(container, messageQueued){$/;"	f
hide_all_fields	common.php	/^    public static function get_merge_tags($fields, $element_id, $hide_all_fields = false, $exclude_field_types = array(), $option = '') {$/;"	v
hide_all_fields	common.php	/^    public static function insert_variables($fields, $element_id, $hide_all_fields=false, $callback="", $onchange="", $max_label_size=40, $exclude = null, $args="", $class_name=""){$/;"	v
hide_country	common.php	/^                $hide_country = !empty($address_type["country"]) || rgget("hideCountry", $field);$/;"	v
hint	includes/phpqrcode/phpqrcode.php	/^        public $hint = QR_MODE_8;$/;"	v
honey_pot_checked	form_settings.php	/^			$honey_pot_checked = 'checked="checked"';$/;"	v
honey_pot_checked	form_settings.php	/^        $honey_pot_checked = "";$/;"	v
honeypot_id	form_display.php	/^        $honeypot_id = self::get_max_field_id($form);$/;"	v
horizontal	includes/addon/class-gf-addon.php	/^		$horizontal         = rgar( $field, 'horizontal' ) ? ' gaddon-setting-inline' : '';$/;"	v
horizontal	includes/addon/class-gf-addon.php	/^        $horizontal = rgar($field, "horizontal") ? " gaddon-setting-inline" : "";$/;"	v
hour	common.php	/^                    $hour = esc_attr($matches[1]);$/;"	v
hour	common.php	/^                    $hour = esc_attr($value[0]);$/;"	v
hour	common.php	/^                $hour = $minute = $am_selected = $pm_selected = "";$/;"	v
hour	form_display.php	/^                            $hour = $value[0];$/;"	v
hour	forms_model.php	/^                $hour = empty($value[0]) ? "0" : strip_tags($value[0]);$/;"	v
hour_tabindex	common.php	/^                $hour_tabindex = self::get_tabindex();$/;"	v
howManuOut	includes/phpqrcode/phpqrcode.php	/^                $howManuOut = 8-(QR_FIND_FROM_RANDOM % 9);$/;"	v
href	entry_detail.php	/^        $href = !rgblank($pos) ? 'href="' . add_query_arg(array('pos' => $pos), remove_query_arg(array('pos', 'lid'))) . '"': '';$/;"	v
html	form_display.php	/^                $html = "<\/ul>$/;"	v
html	includes/addon/class-gf-addon.php	/^		$html = '';$/;"	v
html	includes/addon/class-gf-addon.php	/^        $html = "";$/;"	v
html	includes/addon/class-gf-addon.php	/^        $html = $this->settings_select( $field, false );$/;"	v
html	includes/addon/class-gf-addon.php	/^        $html = '';$/;"	v
html	includes/addon/class-gf-addon.php	/^        $html = '<input$/;"	v
html	includes/addon/class-gf-addon.php	/^        $html = sprintf($/;"	v
html	includes/addon/class-gf-feed-addon.php	/^        $html = $this->settings_checkbox( $checkbox_field, '', false );$/;"	v
html	includes/addon/class-gf-payment-addon.php	/^        $html = "<table width='100%' id='gaddon-results-summary'>$/;"	v
html	includes/addon/class-gf-payment-addon.php	/^        $html = $this->settings_checkbox( $enabled_field, false );$/;"	v
html	includes/addon/class-gf-payment-addon.php	/^        $html = $this->settings_select( $length_field, false );$/;"	v
html	includes/addon/class-gf-results.php	/^                    $html = isset($this->_callbacks["markup"]) ? call_user_func($this->_callbacks["markup"], $html, $data, $form, $fields) : "";$/;"	v
html	includes/addon/class-gf-results.php	/^                $html = __("No results.", "gravityforms");$/;"	v
html	includes/addon/class-gf-results.php	/^            $html                      = "";$/;"	v
html	includes/addon/class-gf-results.php	/^            $html           = self::get_default_field_results($form_id, $field, $search_criteria, $offset, $page_size, $more_remaining);$/;"	v
html	includes/locking/class-gf-locking.php	/^        $html = '<div id="gform-lock-dialog" class="notification-dialog-wrap' . $hidden . '">$/;"	v
html	js/forms.js	/^    "html" :            ".label_setting, .content_setting, .conditional_logic_field_setting, .disable_margins_setting, .css_class_setting",$/;"	p	class:fieldSettings
html5_attributes	common.php	/^                $html5_attributes = $is_html5 ? "placeholder='http:\/\/'" : "";$/;"	v
html5_attributes	common.php	/^        $html5_attributes = "";$/;"	v
html5_output	common.php	/^                $html5_output = ! is_admin() && GFFormsModel::is_html5_enabled() ? "pattern='[0-9]*' title='" . __("Only digits are allowed", "gravityforms") .  "'" : "";$/;"	v
html5_output	common.php	/^                $html5_output = GFFormsModel::is_html5_enabled() ? "pattern='[0-9]*' title='" . __("Only digits are allowed", "gravityforms") .  "'" : "";$/;"	v
htmlDecode	js/gravityforms.js	/^    this.htmlDecode = function(text) {$/;"	m	class:Currency
html_block_class	form_display.php	/^        $html_block_class = $field["type"] == "html" ? "gfield_html" : "";$/;"	v
html_current_page	includes/addon/class-gf-payment-addon.php	/^        $html_current_page = $current;$/;"	v
html_formatted_class	form_display.php	/^        $html_formatted_class = $field["type"] == "html" && !IS_ADMIN && !rgget("disableMargins", $field) ? "gfield_html_formatted" : "";$/;"	v
html_input_type	common.php	/^                    $html_input_type = "password";$/;"	v
html_input_type	common.php	/^                    $html_input_type = "text";$/;"	v
html_input_type	common.php	/^                $html_input_type = $is_html5 && !GFCommon::has_field_calculation($field) && ($field["numberFormat"] != "currency" && $field["numberFormat"] != "decimal_comma" ) ? "number" : "text"; \/\/ chrome does not allow number fields to have commas, calculations and currency values display numbers with commas$/;"	v
html_input_type	common.php	/^                $html_input_type = $is_html5 ? "url" : "text";$/;"	v
html_input_type	common.php	/^                $html_input_type = RGFormsModel::is_html5_enabled() ? "email" : "text";$/;"	v
html_input_type	common.php	/^                $html_input_type = RGFormsModel::is_html5_enabled() ? "tel" : "text";$/;"	v
html_no_follows_desc_class	form_display.php	/^        $html_no_follows_desc_class = $field["type"] == "html" && !IS_ADMIN && !self::prev_field_has_description($form, $field["id"]) ? "gfield_no_follows_desc" : "";$/;"	v
html_total_pages	includes/addon/class-gf-payment-addon.php	/^        $html_total_pages = sprintf( "<span class='total-pages'>%s<\/span>", number_format_i18n( $total_pages ) );$/;"	v
http_code	includes/webapi/webapi.php	/^            $http_code  = isset($mappings[$error_code]) ? $mappings[$error_code] : 400;$/;"	v
http_request	recaptchalib.php	/^	$http_request  = "POST $path HTTP\/1.0\\r\\n";$/;"	v
i	form_detail.php	/^        $i = -1;$/;"	v
i	forms_model.php	/^                        foreach($uploaded_temp_files as $i => $file_info){$/;"	v
i	includes/addon/class-gf-addon.php	/^            for( $i = 0; $i < count( $section['fields'] ); $i++ ) {$/;"	v
i	includes/addon/class-gf-addon.php	/^            foreach ($field["choices"] as $i => $choice) {$/;"	v
i	includes/addon/class-gf-results.php	/^                foreach ($filter_fields as $i => $filter_field) {$/;"	v
i	includes/webapi/webapi.php	/^                    $i = 0;$/;"	v
i	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:n
i	preview.php	/^    for ( $i = 0; $i < $depth = 10; $i++ ) {$/;"	v
i	print-entry.php	/^    for ( $i = 0; $i < $depth = 10; $i++ ) {$/;"	v
i	select_columns.php	/^    for ( $i = 0; $i < $depth = 10; $i++ ) {$/;"	v
icon	gravityforms.php	/^                    $icon 		= rgar($menu_item, "icon");$/;"	v
icon	includes/addon/class-gf-addon.php	/^						$icon = '<i class="fa fa-cogs"><\/i>';$/;"	v
icon	includes/addon/class-gf-addon.php	/^			$icon = '<i class="fa fa-cogs"><\/i>';$/;"	v
icon	includes/addon/class-gf-addon.php	/^                    $icon = $this->form_settings_icon();$/;"	v
icon	includes/addon/class-gf-addon.php	/^                $icon = "icon-check fa-check gf_valid"; \/\/ check icon$/;"	v
icon	includes/addon/class-gf-addon.php	/^                $icon = "icon-remove fa-times gf_invalid"; \/\/ x icon$/;"	v
icon	includes/addon/class-gf-addon.php	/^            $icon = "";$/;"	v
icon	includes/addon/class-gf-addon.php	/^            $icon = $this->plugin_page_icon();$/;"	v
icon	includes/addon/class-gf-addon.php	/^            $icon = '<i class="fa fa-cogs"><\/i>';$/;"	v
icon	includes/addon/class-gf-addon.php	/^        $icon = $this->app_settings_icon();$/;"	v
icon	includes/addon/class-gf-addon.php	/^        $icon = $this->plugin_settings_icon();$/;"	v
icon	includes/addon/class-gf-results.php	/^						$icon = '<i class="fa fa-bar-chart-o fa-lg"><\/i>';$/;"	v
icon	includes/addon/class-gf-results.php	/^					$icon = "";$/;"	v
icon	includes/addon/class-gf-results.php	/^                	$icon = $this->_icon;$/;"	v
icon_class	common.php	/^                        $icon_class = $field["calendarIconType"] == "none" ? "datepicker_no_icon" : "datepicker_with_icon";$/;"	v
icon_display	common.php	/^                    $icon_display = rgget("calendarIconType", $field) == "calendar" ? "inline" : "none";$/;"	v
icon_url	common.php	/^                        $icon_url = empty($field["calendarIconUrl"]) ? GFCommon::get_base_url() . "\/images\/calendar.png" : $field["calendarIconUrl"];$/;"	v
id	common.php	/^                $id = $field["id"] . '_' . $choice_id++;$/;"	v
id	common.php	/^                $id = $field["id"] . '_' . $choice_number++;$/;"	v
id	common.php	/^                $id = $field["id"];$/;"	v
id	common.php	/^        $id = $field["id"];$/;"	v
id	common.php	/^    private static function get_day_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	v
id	common.php	/^    private static function get_month_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	v
id	common.php	/^    private static function get_year_dropdown($name="", $id="", $selected_value="", $tabindex="", $disabled_text=""){$/;"	v
id	entry_list.php	/^                $id = $forms[0]->id;$/;"	v
id	entry_list.php	/^        $id = RGForms::get("id");$/;"	v
id	export.php	/^                            $id = $i + $adjust_by;$/;"	v
id	form_detail.php	/^            $id = RGFormsModel::insert_form($form_meta["title"]);$/;"	v
id	form_detail.php	/^        $id = !$has_input_name ? rgpost("objectType") . "_rule_value_" . rgpost("ruleIndex") : rgpost("inputName");$/;"	v
id	form_detail.php	/^        $id = $_POST["id"];$/;"	v
id	form_detail.php	/^        $id = $field["id"];$/;"	v
id	form_display.php	/^        $id = $field["id"];$/;"	v
id	forms_model.php	/^        $id = $wpdb->get_var($sql, 0, 0);$/;"	v
id	forms_model.php	/^        $id = uniqid();$/;"	v
id	forms_model.php	/^        $id = wp_insert_attachment($attachment, $file, $post_id);$/;"	v
id	gravityforms.php	/^                    $id = $name;$/;"	v
id	gravityforms.php	/^        $id = RGForms::get("id");$/;"	v
id	gravityforms.php	/^        $id = rgempty("id", $_GET) ? count($forms) > 0 ? $forms[0]->id : "0" : rgget("id");$/;"	v
id	includes/addon/class-gf-results.php	/^                $id = rgget("id");$/;"	v
id	includes/webapi/webapi.php	/^                $id = explode(";", $id);$/;"	v
id	includes/webapi/webapi.php	/^            $id = rgar($path_array, 1);$/;"	v
id	notification.php	/^        $id = "routing_value_" . rgpost("ruleIndex");$/;"	v
id	notification.php	/^        foreach($form["notifications"] as $id => $notification){$/;"	v
id2	includes/webapi/webapi.php	/^                $id2 = explode(";", $id2);$/;"	v
id2	includes/webapi/webapi.php	/^            $id2         = rgar($path_array, 3);$/;"	v
identifyMode	includes/phpqrcode/phpqrcode.php	/^        public function identifyMode($pos)$/;"	f
ids	forms_model.php	/^            $ids = implode(",", array_map('intval', $ids ) );$/;"	v
ids	forms_model.php	/^            $ids = intval($ids);$/;"	v
iframe_style	form_display.php	/^                $iframe_style = defined( 'GF_DEBUG' ) && GF_DEBUG ? 'display:block;width:600px;height:300px;border:1px solid #eee;' : 'display:none;width:0px;height:0px;';$/;"	v
ignoreDrag	js/gravityforms.js	/^        function ignoreDrag( e ) {$/;"	f
im	common.php	/^    	$im = is_multisite();$/;"	v
image	common.php	/^            $image = wp_get_attachment_image_src($media_id, $arg1);$/;"	v
image	gravityforms.php	/^        $image = imagecreatefrompng($captcha["path"]);$/;"	v
image	includes/phpqrcode/phpqrcode.php	/^            $image = self::image($frame, $pixelPerPoint, $outerFrame);$/;"	v
image	includes/phpqrcode/phpqrcode.php	/^        private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4)$/;"	f
imageUrl	form_display.php	/^            $imageUrl = $button["imageUrl"];$/;"	v
image_btn	gravityforms.php	/^            $image_btn = GFCommon::get_base_url() . "\/images\/form-button.png";$/;"	v
image_button_checked	form_settings.php	/^			$image_button_checked = 'checked="checked"';$/;"	v
image_button_checked	form_settings.php	/^        $image_button_checked = "";$/;"	v
image_caption	forms_model.php	/^                $image_caption = isset($_POST["{$input_name}_4"]) ? strip_tags($_POST["{$input_name}_4"]) : "";$/;"	v
image_caption	forms_model.php	/^            $image_caption = isset($_POST["{$input_name}_4"]) ? strip_tags($_POST["{$input_name}_4"]) : "";$/;"	v
image_description	forms_model.php	/^                $image_description = isset($_POST["{$input_name}_7"]) ? strip_tags($_POST["{$input_name}_7"]) : "";$/;"	v
image_description	forms_model.php	/^            $image_description = isset($_POST["{$input_name}_7"]) ? strip_tags($_POST["{$input_name}_7"]) : "";$/;"	v
image_meta	forms_model.php	/^            $image_meta= array( "post_excerpt" => $image["caption"],$/;"	v
image_meta	forms_model.php	/^        if ( $image_meta = @wp_read_image_metadata($file) ) {$/;"	v
image_style_display	form_settings.php	/^            $image_style_display = "display:none;";$/;"	v
image_style_display	form_settings.php	/^        $image_style_display = "";$/;"	v
image_title	forms_model.php	/^                $image_title = isset($_POST["{$input_name}_1"]) ? strip_tags($_POST["{$input_name}_1"]) : "";$/;"	v
image_title	forms_model.php	/^            $image_title = isset($_POST["{$input_name}_1"]) ? strip_tags($_POST["{$input_name}_1"]) : "";$/;"	v
images	forms_model.php	/^        $images = array();$/;"	v
img	common.php	/^                $img = wp_get_attachment_image($media_id, $arg1, false, array("class" => "size-{$arg1} align{$arg2} wp-image-{$media_id}"));$/;"	v
img	includes/addon/class-gf-feed-addon.php	/^        $img = "<img src='{$src}' title='{$title}' onclick='gaddon.toggleFeedActive(this, \\"{$this->_slug}\\", {$item['id']});' style='cursor:pointer';\/>";$/;"	v
imgH	includes/phpqrcode/phpqrcode.php	/^            $imgH = $h + 2*$outerFrame;$/;"	v
imgPreloader.onload	js/thickbox.js	/^			imgPreloader.onload = function(){$/;"	f
imgW	includes/phpqrcode/phpqrcode.php	/^            $imgW = $w + 2*$outerFrame;$/;"	v
implode_non_blank	common.php	/^    public static function implode_non_blank($separator, $array){$/;"	f
import_file	export.php	/^    public static function import_file($filepath, &$forms=null){$/;"	f
import_form_page	export.php	/^    public static function import_form_page() {$/;"	f
in	includes/upload.php	/^                    $in = @fopen($_FILES["file"]['tmp_name'], "rb");$/;"	v
in	includes/upload.php	/^                $in = @fopen("php:\/\/input", "rb");$/;"	v
in_footer	includes/addon/class-gf-addon.php	/^            $in_footer =  isset($script["in_footer"]) ? $script["in_footer"] : false;$/;"	v
in_section	common.php	/^                $in_section = true;$/;"	v
in_section	common.php	/^        $in_section = false;$/;"	v
in_str	forms_model.php	/^            $in_str     = esc_sql(join(",", $in_str_arr));$/;"	v
in_str	includes/api.php	/^            $in_str      = join($in_str_arr, ",");$/;"	v
in_str	includes/api.php	/^        $in_str     = join($in_str_arr, ",");$/;"	v
in_str_arr	forms_model.php	/^            $in_str_arr = array_fill(0, count($form_id), '%s');$/;"	v
in_str_arr	includes/api.php	/^            $in_str_arr  = array_fill(0, count($feed_ids), '%d');$/;"	v
in_str_arr	includes/api.php	/^        $in_str_arr = array_fill(0, count($form_ids), '%d');$/;"	v
inactive_count	common.php	/^    	$inactive_count = $form_counts["inactive"];$/;"	v
include_addon_framework	gravityforms.php	/^    public static function include_addon_framework() {$/;"	f
include_feed_addon_framework	gravityforms.php	/^    public static function include_feed_addon_framework() {$/;"	f
include_payment_addon_framework	gravityforms.php	/^    public static function include_payment_addon_framework() {$/;"	f
increment	common.php	/^        $increment = $start_number < $end_number ? 1 : -1;$/;"	v
indent	xml.php	/^        $indent = str_pad($indent, $depth, "\\t");$/;"	v
indent	xml.php	/^        $indent="";$/;"	v
indent	xml.php	/^    private function indent($path){$/;"	f
index	entry_detail.php	/^                                                            $index = 1;$/;"	v
index	form_display.php	/^                        $index = 1;$/;"	v
index	forms_model.php	/^        $index = 0;$/;"	v
index	includes/addon/class-gf-addon.php	/^		$index = array_search( $overrides, self::$_registered_addons['active'] );$/;"	v
index_of	includes/phpqrcode/phpqrcode.php	/^        public $index_of = array();  \/\/ Antilog lookup table$/;"	v
info	common.php	/^                        $info = pathinfo($file_path);$/;"	v
info	entry_list.php	/^        $info = pathinfo($path);$/;"	v
info	form_display.php	/^                                $info = pathinfo(rgar($file_name, "uploaded_filename"));$/;"	v
info	includes/addon/class-gf-auto-upgrade.php	/^        $info = array("is_valid_key" => $is_valid_key, "version" => rgars($version_info, "offerings\/{$offering}\/version"), "url" => rgars($version_info, "offerings\/{$offering}\/url"));$/;"	v
info_column_keys	forms_model.php	/^        $info_column_keys = self::get_lead_db_columns();$/;"	v
info_columns	common.php	/^        $info_columns = self::get_entry_info_filter_columns();$/;"	v
info_filters	common.php	/^        $info_filters = self::get_entry_info_filter_settings();$/;"	v
info_search_where	forms_model.php	/^        $info_search_where = self::get_info_search_where($search_criteria);$/;"	v
init	gravityforms.php	/^    public static function init(){$/;"	f
init	includes/addon/class-gf-addon.php	/^    public function init() {$/;"	f
init	includes/addon/class-gf-auto-upgrade.php	/^    public function init(){$/;"	f
init	includes/addon/class-gf-results.php	/^        public function init() {$/;"	f
init	includes/phpqrcode/phpqrcode.php	/^        public function init(array $spec)$/;"	f
init	js/gf_field_filter.js	/^    function init (c, s, initVars, m, h){$/;"	f
initHeartbeat	includes/locking/js/locking-list.js	/^    function initHeartbeat() {$/;"	f
initHeartbeat	includes/locking/js/locking-view.js	/^    function initHeartbeat() {$/;"	f
initHeartbeat	includes/locking/js/locking.js	/^    function initHeartbeat() {$/;"	f
initMenus	js/menu.js	/^function initMenus() {$/;"	f
initSelectAllEntries	entry_list.php	/^            function initSelectAllEntries(){$/;"	f
initUI	includes/locking/js/locking.js	/^    function initUI() {$/;"	f
init_addons	includes/addon/class-gf-addon.php	/^	public static function init_addons(){$/;"	f
init_admin	includes/addon/class-gf-addon.php	/^    protected function init_admin(){$/;"	f
init_admin	includes/addon/class-gf-payment-addon.php	/^    public function init_admin() {$/;"	f
init_admin	includes/webapi/webapi.php	/^        public function init_admin() {$/;"	f
init_ajax	includes/addon/class-gf-addon.php	/^    protected function init_ajax(){$/;"	f
init_ajax	includes/addon/class-gf-feed-addon.php	/^    public function init_ajax() {$/;"	f
init_ajax	includes/addon/class-gf-payment-addon.php	/^    public function init_ajax(){$/;"	f
init_ajax	includes/locking/class-gf-locking.php	/^    public function init_ajax() {$/;"	f
init_ajax	includes/webapi/webapi.php	/^        public function init_ajax() {$/;"	f
init_edit_lock	includes/locking/class-gf-locking.php	/^    public function init_edit_lock() {$/;"	f
init_field_id	entry_list.php	/^        $init_field_id       = empty($search_field_id) ? 0 : $search_field_id;$/;"	v
init_field_operator	entry_list.php	/^        $init_field_operator = empty($search_operator) ? "contains" : $search_operator;$/;"	v
init_filter_vars	entry_list.php	/^        $init_filter_vars = array($/;"	v
init_frontend	includes/addon/class-gf-addon.php	/^    protected function init_frontend(){$/;"	f
init_frontend	includes/addon/class-gf-feed-addon.php	/^    public function init_frontend() {$/;"	f
init_frontend	includes/addon/class-gf-payment-addon.php	/^    public function init_frontend() {$/;"	f
init_frontend	includes/webapi/webapi.php	/^        public function init_frontend() {$/;"	f
init_list_page	includes/locking/class-gf-locking.php	/^    public function init_list_page() {$/;"	f
init_rs	includes/phpqrcode/phpqrcode.php	/^        public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)$/;"	f
init_rs_char	includes/phpqrcode/phpqrcode.php	/^        public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)$/;"	f
init_scripts	form_display.php	/^        $init_scripts = rgar(self::$init_scripts, $form["id"]);$/;"	v
init_scripts	form_display.php	/^    private static $init_scripts = array();$/;"	v
init_vars	includes/addon/class-gf-results.php	/^            $init_vars = array();$/;"	v
init_view_page	includes/locking/class-gf-locking.php	/^    public function init_view_page() {$/;"	f
inner_sql	forms_model.php	/^            $inner_sql = $wpdb->prepare($inner_sql_template, $field["id"], $form_id, $form_id, doubleval($field["id"]) - 0.001, doubleval($field["id"]) + 0.001, $value, $value );$/;"	v
inner_sql_template	forms_model.php	/^        $inner_sql_template =  "SELECT %s as input, ld.lead_id$/;"	v
input	common.php	/^                $input = "<input type='text' name='input_{$field["id"]}[]' value='" . esc_attr($value) . "' {$tabindex}\/>";$/;"	v
input	common.php	/^                $input = "<select name='input_{$field["id"]}[]' {$tabindex} >";$/;"	v
input	forms_model.php	/^                $input = $field["inputs"][$i];$/;"	v
input	forms_model.php	/^                $input = RGFormsModel::get_input($field, $input_id);$/;"	v
input	forms_model.php	/^        $input = self::get_input($field, $input_id);$/;"	v
input	gravityforms.php	/^                $input = GFCommon::get_input($field, $result->field_number);$/;"	v
input	includes/phpqrcode/phpqrcode.php	/^            $input = new QRinput($version, $level);$/;"	v
input	includes/phpqrcode/phpqrcode.php	/^            $this->input    = $input;$/;"	v
input	includes/phpqrcode/phpqrcode.php	/^        public $input;$/;"	v
input	js/jquery.textareaCounter.plugin.js	/^				input: numInput,$/;"	p	class:countByCharacters.getInfo.info
inputType	export.php	/^                    $inputType = RGFormsModel::get_input_type($field);$/;"	v
input_count	forms_model.php	/^            $input_count = sizeof($field["inputs"]);$/;"	v
input_count	forms_model.php	/^        $input_count = 1;$/;"	v
input_focus	common.php	/^                    $input_focus = !IS_ADMIN ? "onfocus=\\"jQuery(this).next('input').focus();\\"" : "";$/;"	v
input_focus	common.php	/^                $input_focus = '';$/;"	v
input_id	common.php	/^                        foreach($items as $input_id => $item){$/;"	v
input_id	common.php	/^                $input_id = $field["id"] . '.' . $choice_number;$/;"	v
input_id	common.php	/^                $input_id = $match[1];$/;"	v
input_id	common.php	/^            $input_id = $field["id"] . '.' . $choice_number;$/;"	v
input_id	common.php	/^    public static function get_label($field, $input_id = 0, $input_only = false){$/;"	v
input_id	forms_model.php	/^                else if( $input_id == '4' ) {$/;"	v
input_id	forms_model.php	/^            $input_id = (string)$field_number == (string)$field["id"] ? "" : $field_number;$/;"	v
input_id	forms_model.php	/^    public static function get_choice_text($field, $value, $input_id=0){$/;"	v
input_id	forms_model.php	/^    public static function get_label($field, $input_id = 0, $input_only = false){$/;"	v
input_id	includes/api.php	/^                    $input_id = $input["id"];$/;"	v
input_id	includes/api.php	/^                    $input_id = (string)$input["id"];$/;"	v
input_info	common.php	/^        $input_info = apply_filters("gform_column_input_{$form_id}_{$field["id"]}_{$column_index}", apply_filters("gform_column_input", $input_info, $field, rgar($column, "text"), $value, $form_id), $field, rgar($column, "text"), $value, $form_id);$/;"	v
input_info	common.php	/^        $input_info = array("type" => "text");$/;"	v
input_label_only	forms_model.php	/^    public static function get_grid_columns($form_id, $input_label_only=false){$/;"	v
input_name	common.php	/^                    $input_name = "input_{$id}";$/;"	v
input_name	form_display.php	/^                            $input_name = "input_" . $field["id"];$/;"	v
input_name	form_display.php	/^                $input_name = "input_" . $field["id"];$/;"	v
input_name	form_display.php	/^            $input_name = "input_{$field["id"]}";$/;"	v
input_name	forms_model.php	/^        $input_name = "input_" . str_replace('.', '_', $input_id);$/;"	v
input_type	common.php	/^		            $input_type = GFFormsModel::get_input_type( $field );$/;"	v
input_type	common.php	/^	        $input_type = GFFormsModel::get_input_type( $field );$/;"	v
input_type	common.php	/^            $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	common.php	/^            if($input_type == "checkbox" || $input_type == "radio" || $input_type == "select"){$/;"	v
input_type	common.php	/^        $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	entry_list.php	/^		        $input_type = GFFormsModel::get_input_type( $field );$/;"	v
input_type	entry_list.php	/^                                    $input_type = !empty($columns[$field_id]["inputType"]) ? $columns[$field_id]["inputType"] : $columns[$field_id]["type"];$/;"	v
input_type	export.php	/^                            $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	export.php	/^                $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	form_display.php	/^					if( $input_type == "checkbox" && ($choice_index % 10) == 0){$/;"	v
input_type	form_display.php	/^                    if(rgar($choice,"isSelected") && $input_type == "select"){$/;"	v
input_type	form_display.php	/^                $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	form_display.php	/^            $input_type = GFFormsModel::get_input_type($field);$/;"	v
input_type	form_display.php	/^            $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	form_display.php	/^            $input_type='button';$/;"	v
input_type	form_display.php	/^        $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_type	form_display.php	/^        $input_type='submit';$/;"	v
input_type	forms_model.php	/^        $input_type = self::get_input_type($field);$/;"	v
input_type	includes/addon/class-gf-addon.php	/^                if( $input_type == 'address' )$/;"	v
input_type	includes/addon/class-gf-addon.php	/^                if( $input_type == 'checkbox' )$/;"	v
input_type	includes/addon/class-gf-addon.php	/^                if( $input_type == 'name' )$/;"	v
input_type	includes/addon/class-gf-addon.php	/^            $input_type = GFFormsModel::get_input_type( $field );$/;"	v
input_type	notification.php	/^            $input_type = RGFormsModel::get_input_type($field);$/;"	v
input_value	form_display.php	/^                $input_value = GFCommon::to_number($input_value);$/;"	v
inputs	common.php	/^                $inputs               = rgar($field, "inputs");$/;"	v
inputs	common.php	/^                $inputs = $address_display_format == "zip_before_city" ? $street_address . $street_address2 . $zip . $city . $state . $country : $street_address . $street_address2 . $city . $state . $zip . $country;$/;"	v
insertStructuredAppendHeader	includes/phpqrcode/phpqrcode.php	/^        public function insertStructuredAppendHeader($size, $index, $parity)$/;"	f
insert_calculation_variables	common.php	/^    public static function insert_calculation_variables($fields, $element_id, $onchange = '', $callback = '', $max_label_size=40) {$/;"	f
insert_feed	includes/addon/class-gf-feed-addon.php	/^    public function insert_feed($form_id, $is_active, $meta){$/;"	f
insert_field_variable	common.php	/^    public static function insert_field_variable($field, $max_label_size=40, $args=""){$/;"	f
insert_form	forms_model.php	/^    public static function insert_form($form_title){$/;"	f
insert_form_view	forms_model.php	/^    public static function insert_form_view($form_id, $ip){$/;"	f
insert_post_content_variables	common.php	/^    public static function insert_post_content_variables($fields, $element_id, $callback, $max_label_size=25){$/;"	f
insert_transaction	includes/addon/class-gf-payment-addon.php	/^    protected function insert_transaction( $entry_id, $transaction_type, $transaction_id, $amount, $is_recurring = null ) {$/;"	f
insert_variable_prepopulate	form_detail.php	/^    private static function insert_variable_prepopulate($element_id, $callback=""){$/;"	f
insert_variables	common.php	/^    public static function insert_variables($fields, $element_id, $hide_all_fields=false, $callback="", $onchange="", $max_label_size=40, $exclude = null, $args="", $class_name=""){$/;"	f
installed_addons	includes/addon/class-gf-payment-addon.php	/^            $installed_addons = array($this->_slug);$/;"	v
installed_addons	includes/addon/class-gf-payment-addon.php	/^            $installed_addons = array();$/;"	v
installed_addons	includes/addon/class-gf-payment-addon.php	/^        $installed_addons = get_option("gravityformsaddon_payment_addons");$/;"	v
installed_plugin	gravityforms.php	/^            $installed_plugin = array("plugin" => $key, "name" => $plugin["Name"], "is_active"=>$is_active);$/;"	v
installed_plugins	gravityforms.php	/^        $installed_plugins = array();$/;"	v
installed_version	includes/addon/class-gf-addon.php	/^            $installed_version = GFForms::get_wp_option("gravityformsaddon_" . $this->_slug . "_version");$/;"	v
installed_version	includes/addon/class-gf-addon.php	/^        $installed_version = get_option("gravityformsaddon_" . $this->_slug . "_version");$/;"	v
installed_version	includes/addon/class-gf-feed-addon.php	/^        $installed_version = get_option("gravityformsaddon_feed-base_version");$/;"	v
installed_version	includes/addon/class-gf-payment-addon.php	/^        $installed_version = get_option("gravityformsaddon_payment_version");$/;"	v
instance	widget.php	/^        $instance = $old_instance;$/;"	v
instance	widget.php	/^        $instance = wp_parse_args( (array) $instance, array('title' => __("Contact Us", "gravityforms"), 'tabindex' => '1') );$/;"	v
instruction	common.php	/^                            $instruction = "<div class='instruction $validation_class'>" . $message . "<\/div>";$/;"	v
instruction	common.php	/^                $instruction = "";$/;"	v
instruction	common.php	/^                $instruction = $field["phoneFormat"] == "standard" ? __("Phone format:", "gravityforms") . " (###)###-####" : "";$/;"	v
instruction_div	common.php	/^                $instruction_div = rgget("failed_validation", $field) && !empty($instruction) ? "<div class='instruction validation_message'>$instruction<\/div>" : "";$/;"	v
instructions	includes/addon/class-gf-feed-addon.php	/^        $instructions = isset($field["instructions"]) ? $field["instructions"] : __("Process this feed if", "gravityforms");$/;"	v
int_columns	forms_model.php	/^        $int_columns = array("id", "post_id", "is_starred", "is_read", "is_fulfilled", "entry_id");$/;"	v
interval_keys	includes/addon/class-gf-payment-addon.php	/^        $interval_keys = array_keys($intervals);$/;"	v
intervals	includes/addon/class-gf-payment-addon.php	/^        $intervals = $this->supported_billing_intervals();$/;"	v
invalid_email	notification.php	/^            $invalid_email = GFCommon::is_invalid_or_empty_email( $email );$/;"	v
invalid_variable	notification.php	/^            $invalid_variable = !preg_match('\/^({[^{]*?:(\\d+(\\.\\d+)?)(:(.*?))?},? *)+$\/', $email);$/;"	v
ip	common.php	/^        $ip = isset( $entry['ip'] ) ? $entry['ip'] : GFFormsModel::get_ip();$/;"	v
ip	forms_model.php	/^            $ip = rgar( $_SERVER, $header );$/;"	v
ip	forms_model.php	/^        $ip = '';$/;"	v
ip	includes/api.php	/^        $ip             = isset($entry["ip"]) ? $entry["ip"] : GFFormsModel::get_ip();$/;"	v
iprim	includes/phpqrcode/phpqrcode.php	/^        public $iprim;               \/\/ prim-th root of 1, index form$/;"	v
ips	forms_model.php	/^        $ips = explode( ',', $ip );$/;"	v
is	common.php	/^     * This function is used by the gfMergeTags JS object to get the localized label for non-field merge tags as well as$/;"	f
is	includes/addon/class-gf-payment-addon.php	/^			\/\/If the url_redirect() function is overridden, call it.$/;"	f
is	includes/addon/class-gf-payment-addon.php	/^			\/\/Running an authorization only transaction if function is implemented and this is a single payment$/;"	f
is	includes/addon/class-gf-payment-addon.php	/^ * NOTE: This class is still undergoing development and is not ready to be used on live sites.$/;"	c
is	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
is	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
is	notification.php	/^        	\/\/this function is a duplicate of IsConditionalLogicField from form_editor.js$/;"	f
isFieldSelected	js/gf_field_filter.js	/^    function isFieldSelected (fieldId) {$/;"	f
isNew	form_detail.php	/^                                $isNew = rgar($form, "id") > 0 ? 0 : 1;$/;"	v
isNumeric	js/gravityforms.js	/^    this.isNumeric = function(number){$/;"	m	class:Currency
isWin	js/jquery.textareaCounter.plugin.js	/^		function isWin(){$/;"	f	function:countByCharacters
is_active	common.php	/^            $is_active = in_array($key, $active_plugins);$/;"	v
is_active	form_settings.php	/^        $is_active = isset($item["isActive"]) ? $item["isActive"] : true;$/;"	v
is_active	gravityforms.php	/^            $is_active = is_plugin_active($key);$/;"	v
is_active	includes/addon/class-gf-feed-addon.php	/^        $is_active = $is_active ? "1" : "0";$/;"	v
is_active	includes/addon/class-gf-feed-addon.php	/^        $is_active = intval(rgar($item, "is_active"));$/;"	v
is_active	includes/addon/class-gf-feed-addon.php	/^        $is_active = rgpost("is_active");$/;"	v
is_active	includes/api.php	/^        $is_active = rgar($form_meta, "is_active") ? "1" : "0";$/;"	v
is_active	notification.php	/^        $is_active = isset($item["isActive"]) ? $item["isActive"] : true;$/;"	v
is_add_form_page	gravityforms.php	/^        $is_add_form_page = self::page_supports_add_form_button();$/;"	v
is_ajax	common.php	/^        $is_ajax = false;$/;"	v
is_ajax	gravityforms.php	/^function gravity_form_enqueue_scripts($form_id, $is_ajax=false){$/;"	v
is_ajax	includes/addon/class-gf-addon.php	/^    public function enqueue_scripts($form="", $is_ajax=false){$/;"	v
is_akismet_enabled	settings.php	/^                        $is_akismet_enabled = $akismet_setting === false || !empty($akismet_setting); \/\/Akismet is enabled by default.$/;"	v
is_akismet_spam	common.php	/^    public static function is_akismet_spam($form, $lead){$/;"	f
is_any_selected	notification.php	/^	                    $is_any_selected = true;$/;"	v
is_any_selected	notification.php	/^            $is_any_selected = false;$/;"	v
is_app_settings	includes/addon/class-gf-addon.php	/^        $is_app_settings = rgget("page") == $this->_slug. "_settings";$/;"	v
is_app_settings	includes/addon/class-gf-addon.php	/^    protected function is_app_settings($tab = ""){$/;"	f
is_assoc	common.php	/^    public static function json_decode($str, $is_assoc=true){$/;"	v
is_assoc	xml.php	/^    private function is_assoc($array){$/;"	f
is_associative	xml.php	/^        $is_associative = $this->is_assoc($data);$/;"	v
is_attribute	xml.php	/^    private function is_attribute($path){$/;"	f
is_bp_active	common.php	/^    public static function is_bp_active() {$/;"	f
is_callback_valid	includes/addon/class-gf-payment-addon.php	/^    protected function is_callback_valid(){$/;"	f
is_card_supported	common.php	/^    public static function is_card_supported($field, $card_slug){$/;"	f
is_checkbox_checked	forms_model.php	/^    public static function is_checkbox_checked($field_id, $field_label, $lead, $form){$/;"	f
is_condition_enabled	includes/addon/class-gf-feed-addon.php	/^        $is_condition_enabled = rgar( $feed_meta, 'feed_condition_conditional_logic' ) == true;$/;"	v
is_correct_version	includes/addon/class-gf-addon.php	/^            $is_correct_version = version_compare(GFCommon::$version, $min_gravityforms_version, ">=");$/;"	v
is_currency_decimal_dot	common.php	/^    public static function is_currency_decimal_dot($currency = null){$/;"	f
is_default	form_settings.php	/^        $is_default = rgar($confirmation, 'isDefault');$/;"	v
is_default	forms_model.php	/^        $is_default = false;$/;"	v
is_delayed	includes/addon/class-gf-feed-addon.php	/^			$is_delayed = true;$/;"	v
is_delayed	includes/addon/class-gf-feed-addon.php	/^		$is_delayed = false;$/;"	v
is_delayed	includes/addon/class-gf-feed-addon.php	/^	public function is_delayed( $paypal_feed ){$/;"	f
is_description_above	form_display.php	/^        $is_description_above = rgar($field, "descriptionPlacement") == "above";$/;"	v
is_detail_page	includes/addon/class-gf-feed-addon.php	/^    public function is_detail_page(){$/;"	f
is_dismissed	gravityforms.php	/^        $is_dismissed = !empty($ary_dismissed) && in_array($version_info["version"], $ary_dismissed);$/;"	v
is_duplicate	form_settings.php	/^        $is_duplicate = empty($_POST) && !empty($duplicated_cid);$/;"	v
is_duplicate	forms_model.php	/^    public static function is_duplicate($form_id, $field, $value){$/;"	f
is_duplicate_callback	includes/addon/class-gf-payment-addon.php	/^    protected function is_duplicate_callback($callback_id){$/;"	f
is_edit_page	includes/addon/class-gf-addon-locking.php	/^    protected function is_edit_page() {$/;"	f
is_edit_page	includes/locking/class-gf-locking.php	/^                $is_edit_page = true;$/;"	v
is_edit_page	includes/locking/class-gf-locking.php	/^            $is_edit_page = false;$/;"	v
is_edit_page	includes/locking/class-gf-locking.php	/^    protected function is_edit_page() {$/;"	f
is_edit_page	includes/locking/locking.php	/^        $is_edit_page = rgget('page') == 'gf_edit_forms' && rgget('view') == 'settings';$/;"	v
is_edit_page	includes/locking/locking.php	/^    protected function is_edit_page() {$/;"	f
is_empty	form_display.php	/^                $is_empty = (strlen(trim($price)) <= 0);$/;"	v
is_empty	form_display.php	/^                $is_empty = (strlen(trim($value)) <= 0) || ($field["type"] == "post_category" && $value < 0);$/;"	v
is_empty	form_display.php	/^    public static function is_empty($field, $form_id=0){$/;"	f
is_empty	forms_model.php	/^            $is_empty = (strlen(trim($price)) <= 0);$/;"	v
is_empty	xml.php	/^                        $is_empty = false;$/;"	v
is_empty	xml.php	/^                    $is_empty = false;$/;"	v
is_empty	xml.php	/^        $is_empty = true;$/;"	v
is_empty_array	common.php	/^    public static function is_empty_array($val){$/;"	f
is_enabled	includes/addon/class-gf-payment-addon.php	/^        $is_enabled = $this->get_setting("{$field["name"]}_enabled");$/;"	v
is_encrypted_field	forms_model.php	/^    public static function is_encrypted_field( $entry_id, $field_id ) {$/;"	f
is_entry_edit	includes/addon/class-gf-addon.php	/^    protected function is_entry_edit(){$/;"	f
is_entry_list	includes/addon/class-gf-addon.php	/^    protected function is_entry_list(){$/;"	f
is_entry_update	forms_model.php	/^			$is_entry_update = RG_CURRENT_VIEW == 'entry' || ! $is_new_lead;$/;"	v
is_entry_view	includes/addon/class-gf-addon.php	/^    protected function is_entry_view(){$/;"	f
is_equal	common.php	/^        $is_equal = abs( floatval( $float1 ) - floatval( $float2 ) ) < $epsilon;$/;"	v
is_error	common.php	/^    public static function add_message($message, $is_error = false) {$/;"	v
is_error	includes/addon/class-gf-addon.php	/^    public static function display_plugin_message($message, $is_error = false) {$/;"	v
is_expired	common.php	/^        $is_expired = !rgempty("expiration_time", $version_info) && $version_info["expiration_time"] < time();$/;"	v
is_feed_condition_met	includes/addon/class-gf-feed-addon.php	/^    public function is_feed_condition_met( $feed, $form, $entry ) {$/;"	f
is_feed_list_page	includes/addon/class-gf-feed-addon.php	/^    public function is_feed_list_page(){$/;"	f
is_field_displayed_in_section	common.php	/^                $is_field_displayed_in_section = ! $display_product_summary;$/;"	v
is_field_displayed_in_section	common.php	/^            $is_field_displayed_in_section = true;$/;"	v
is_field_hidden	forms_model.php	/^    public static function is_field_hidden($form, $field, $field_values, $lead=null){$/;"	f
is_field_id_integer	includes/addon/class-gf-addon.php	/^        $is_field_id_integer = ctype_digit($field_id);$/;"	v
is_first	includes/addon/class-gf-addon.php	/^            $is_first = false;$/;"	v
is_first	includes/addon/class-gf-addon.php	/^        $is_first = true;$/;"	v
is_first	includes/addon/class-gf-addon.php	/^    protected function single_section( $section, $is_first = false) {$/;"	v
is_first_column	entry_list.php	/^                                    $is_first_column = false;$/;"	v
is_first_column	entry_list.php	/^                                $is_first_column = true;$/;"	v
is_first_load	form_display.php	/^            $is_first_load = !$is_postback;$/;"	v
is_first_row	common.php	/^                                $is_first_row = false;$/;"	v
is_first_row	common.php	/^                            $is_first_row = true;$/;"	v
is_form_editor	includes/addon/class-gf-addon.php	/^    protected function is_form_editor(){$/;"	f
is_form_settings	includes/addon/class-gf-addon.php	/^        $is_form_settings = rgget("page") == "gf_edit_forms" && rgget("view") == "settings";$/;"	v
is_form_settings	includes/addon/class-gf-addon.php	/^    protected function is_form_settings($tab = null){$/;"	f
is_fulfilled	includes/addon/class-gf-feed-addon.php	/^        $is_fulfilled = gform_get_meta( $entry['id'], "{$this->_slug}_is_fulfilled" );$/;"	v
is_fulfilled	includes/api.php	/^        $is_fulfilled   = isset($entry["is_fulfilled"]) ? intval($entry["is_fulfilled"]) : 'NULL';$/;"	v
is_gravity_ajax_action	gravityforms.php	/^    public static function is_gravity_ajax_action(){$/;"	f
is_gravity_page	gravityforms.php	/^    public static function is_gravity_page(){$/;"	f
is_gravityforms_installed	includes/addon/class-gf-addon.php	/^    public function is_gravityforms_installed() {$/;"	f
is_gravityforms_supported	includes/addon/class-gf-addon.php	/^            $is_gravityforms_supported = $this->is_gravityforms_supported($this->_min_gravityforms_version);$/;"	v
is_gravityforms_supported	includes/addon/class-gf-addon.php	/^    public function is_gravityforms_supported($min_gravityforms_version = "") {$/;"	f
is_greater	common.php	/^        $is_greater = floatval( $float1 ) > floatval( $float2 );$/;"	v
is_hidden	common.php	/^                        $is_hidden = RGFormsModel::is_field_hidden($form, $field, array(), $lead);$/;"	v
is_hidden	forms_model.php	/^                $is_hidden = RGFormsModel::is_field_hidden($form, $field, array());$/;"	v
is_hidden	forms_model.php	/^            $is_hidden = self::is_field_hidden($form, $field, array(), $lead);$/;"	v
is_hidden	forms_model.php	/^        $is_hidden = ($do_action && $logic["actionType"] == "hide") || (!$do_action && $logic["actionType"] == "show");$/;"	v
is_html5	common.php	/^                $is_html5 = RGFormsModel::is_html5_enabled();$/;"	v
is_html5_enabled	forms_model.php	/^    public static function is_html5_enabled(){$/;"	f
is_human	common.php	/^    public static function format_date($gmt_datetime, $is_human = true, $date_format="", $include_time=true){$/;"	v
is_identical_tags	xml.php	/^            $is_identical_tags = $this->has_identical_tags($children);$/;"	v
is_invalid_email_to	notification.php	/^        $is_invalid_email_to = !$is_valid && !self::is_valid_notification_to();$/;"	v
is_invalid_message	notification.php	/^        $is_invalid_message = !$is_valid && empty($_POST["gform_notification_message"]);$/;"	v
is_invalid_or_empty_email	common.php	/^    public static function is_invalid_or_empty_email($email){$/;"	f
is_invalid_rule	notification.php	/^                            $is_invalid_rule = !$is_valid && $_POST["gform_notification_to_type"] == "routing" && !self::is_valid_notification_email( rgar( $routing, 'email' ) );$/;"	v
is_invalid_subject	notification.php	/^        $is_invalid_subject = !$is_valid && empty($_POST["gform_notification_subject"]);$/;"	v
is_json	includes/addon/class-gf-addon.php	/^    protected static function is_json($value) {$/;"	f
is_last	entry_detail.php	/^                                $is_last = $count >= $field_count && !$has_product_fields ? true : false;$/;"	v
is_last	entry_detail.php	/^                                $is_last = $count >= $field_count ? true : false;$/;"	v
is_last	entry_detail.php	/^                $is_last = $count >= $notes_count ? true : false;$/;"	v
is_last_page	form_display.php	/^            $is_last_page = $target_page == self::get_max_page_number( $form );$/;"	v
is_last_page	form_display.php	/^            $is_last_page = (string) $target_page === '0';$/;"	v
is_last_page	form_display.php	/^    public static function is_last_page( $form, $mode = 'submit' ) {$/;"	f
is_less	common.php	/^        $is_less = floatval( $float1 ) < floatval( $float2 );$/;"	v
is_list_page	includes/addon/class-gf-addon-locking.php	/^    protected function is_list_page() {$/;"	f
is_list_page	includes/locking/class-gf-locking.php	/^    protected function is_list_page() {$/;"	f
is_list_page	includes/locking/locking.php	/^    protected function is_list_page() {$/;"	f
is_locked	includes/locking/class-gf-locking.php	/^    public function is_locked($object_id) {$/;"	f
is_locking_edit_page	includes/addon/class-gf-addon.php	/^    public function is_locking_edit_page() {$/;"	f
is_locking_list_page	includes/addon/class-gf-addon.php	/^    public function is_locking_list_page() {$/;"	f
is_locking_page	includes/locking/class-gf-locking.php	/^                $is_locking_page = true;$/;"	v
is_locking_page	includes/locking/class-gf-locking.php	/^            $is_locking_page = false;$/;"	v
is_locking_view_page	includes/addon/class-gf-addon.php	/^    public function is_locking_view_page() {$/;"	f
is_long	forms_model.php	/^        $is_long                = ! is_array( $value ) && strlen( $value ) > GFORMS_MAX_FIELD_LENGTH - 10;$/;"	v
is_match	common.php	/^                                $is_match = true;$/;"	v
is_match	common.php	/^                        $is_match = false;$/;"	v
is_match	forms_model.php	/^            $is_match = $operation == "isnot" ? $match_count == count($field_value) : $match_count > 0;$/;"	v
is_match	forms_model.php	/^            $is_match = true;$/;"	v
is_match	forms_model.php	/^        $is_match = false;$/;"	v
is_my_entry	includes/addon/class-gf-payment-addon.php	/^        $is_my_entry = $this->is_payment_gateway($entry["id"]);$/;"	v
is_negative	common.php	/^                $is_negative = true;$/;"	v
is_negative	common.php	/^        $is_negative = false;$/;"	v
is_negative	currency.php	/^                $is_negative = true;$/;"	v
is_negative	currency.php	/^        $is_negative = false;$/;"	v
is_new_confirmation	form_settings.php	/^        $is_new_confirmation = !$confirmation;$/;"	v
is_new_lead	forms_model.php	/^        $is_new_lead = $lead == null;$/;"	v
is_new_notification	notification.php	/^        $is_new_notification = empty($notification_id) || empty($notification);$/;"	v
is_number_field	forms_model.php	/^                            $is_number_field = true;$/;"	v
is_number_field	forms_model.php	/^                    $is_number_field = false;$/;"	v
is_numeric	common.php	/^    public static function is_numeric($value, $number_format=""){$/;"	f
is_numeric	entry_detail.php	/^        $is_numeric = $sort_field_meta["type"] == "number";$/;"	v
is_numeric	entry_list.php	/^        $is_numeric = $sort_field_meta["type"] == "number";$/;"	v
is_numeric	includes/addon/class-gf-addon.php	/^        $is_numeric = is_int( $first_key ) && $first_key === 0;$/;"	v
is_numeric_sort	forms_model.php	/^            $is_numeric_sort = $entry_meta[$sort_field]['is_numeric'];$/;"	v
is_numeric_sort	forms_model.php	/^        $is_numeric_sort = isset($sorting["is_numeric"]) ? $sorting["is_numeric"] : false;$/;"	v
is_object_locked	includes/addon/class-gf-addon-locking.php	/^    protected function is_object_locked($object_id){$/;"	f
is_object_locked	includes/addon/class-gf-addon.php	/^    public function is_object_locked($object_id) {$/;"	f
is_page	includes/locking/class-gf-locking.php	/^    protected function is_page($page_name) {$/;"	f
is_page_active	form_display.php	/^    private static function is_page_active($form_id, $page_number){$/;"	f
is_page_hidden	forms_model.php	/^    public static function is_page_hidden($form, $page_number, $field_values, $lead=null){$/;"	f
is_payment_gateway	includes/addon/class-gf-payment-addon.php	/^		$this->is_payment_gateway = true;$/;"	v
is_payment_gateway	includes/addon/class-gf-payment-addon.php	/^	protected $is_payment_gateway = false;$/;"	v
is_payment_gateway	includes/addon/class-gf-payment-addon.php	/^	protected function is_payment_gateway($entry_id){$/;"	f
is_persistent	common.php	/^    public static function set($key, $data, $is_persistent = false, $expiration = 0) {$/;"	v
is_plugin_page	includes/addon/class-gf-addon.php	/^    protected function is_plugin_page(){$/;"	f
is_plugin_settings	includes/addon/class-gf-addon.php	/^        $is_plugin_settings = rgget("page") == "gf_settings";$/;"	v
is_plugin_settings	includes/addon/class-gf-addon.php	/^    protected function is_plugin_settings($tab = ""){$/;"	f
is_post	common.php	/^        $is_post = isset($_POST["gform_submit"]);$/;"	v
is_post_edit_page	gravityforms.php	/^        $is_post_edit_page = in_array(RG_CURRENT_PAGE, array('post.php', 'page.php', 'page-new.php', 'post-new.php'));$/;"	v
is_post_field	common.php	/^    public static function is_post_field($field){$/;"	f
is_postback	form_display.php	/^            $is_postback = true;$/;"	v
is_postback	form_display.php	/^        $is_postback = false;$/;"	v
is_postback	includes/addon/class-gf-addon.php	/^    protected function is_postback(){$/;"	f
is_preview	common.php	/^    public static function is_preview(){$/;"	f
is_preview	includes/addon/class-gf-addon.php	/^    protected function is_preview(){$/;"	f
is_pricing_field	common.php	/^    public static function is_pricing_field($field_type){$/;"	f
is_pricing_field	form_display.php	/^                $is_pricing_field = GFCommon::is_pricing_field( $field['type'] );$/;"	v
is_print	includes/addon/class-gf-addon.php	/^    protected function is_print(){$/;"	f
is_product_field	common.php	/^    public static function is_product_field($field_type){$/;"	f
is_read	includes/api.php	/^        $is_read        = isset($entry["is_read"]) ? $entry["is_read"] : 0;$/;"	v
is_recurring	includes/addon/class-gf-payment-addon.php	/^        $is_recurring = $payment_count > 0 && $transaction_type == "payment" ? 1 : 0;$/;"	v
is_recurring	includes/addon/class-gf-payment-addon.php	/^    protected function insert_transaction( $entry_id, $transaction_type, $transaction_id, $amount, $is_recurring = null ) {$/;"	v
is_results	includes/addon/class-gf-addon.php	/^    protected function is_results(){$/;"	f
is_save_postback	includes/addon/class-gf-addon.php	/^    protected function is_save_postback(){$/;"	f
is_section_empty	common.php	/^    public static function is_section_empty( $section_field, $form, $entry ) {$/;"	f
is_selected	common.php	/^                    $is_selected = empty($value) ? $choice_selected : $choice_value == $value;$/;"	v
is_selected	notification.php	/^	                $is_selected = $choice["value"] == $selected_value;$/;"	v
is_spam	common.php	/^        $is_spam = trim(rgar($response, 1)) == "true";$/;"	v
is_spam	form_display.php	/^		$is_spam = GFCommon::akismet_enabled($form['id']) && GFCommon::is_akismet_spam($form, $lead);$/;"	v
is_spam	form_display.php	/^		$is_spam = apply_filters( "gform_entry_is_spam_{$form['id']}", $is_spam, $form, $lead );$/;"	v
is_spam	form_display.php	/^		$is_spam = apply_filters( 'gform_entry_is_spam', $is_spam, $form, $lead );$/;"	v
is_ssl	common.php	/^                            $is_ssl = !empty($_SERVER['HTTPS']);$/;"	v
is_ssl	common.php	/^            $is_ssl = $wordpress_https->isSsl();$/;"	v
is_ssl	common.php	/^            $is_ssl = $wordpress_https->is_ssl();$/;"	v
is_ssl	common.php	/^            $is_ssl = is_ssl();$/;"	v
is_ssl	common.php	/^            $is_ssl=true;$/;"	v
is_ssl	common.php	/^        $is_ssl = false;$/;"	v
is_ssl	common.php	/^    public static function is_ssl(){$/;"	f
is_starred	includes/api.php	/^        $is_starred     = isset($entry["is_starred"]) ? $entry["is_starred"] : 0;$/;"	v
is_subscription	includes/addon/class-gf-payment-addon.php	/^		$is_subscription = $feed["meta"]["transactionType"] == "subscription";$/;"	v
is_success	common.php	/^            $is_success = wp_mail($to, $subject, $message, $headers, $attachments);$/;"	v
is_success	common.php	/^        $is_success = false;$/;"	v
is_tab	includes/addon/class-gf-addon.php	/^        $is_tab = $this->_tab_matches($tab);$/;"	v
is_trial_or_setup_fee	includes/addon/class-gf-feed-addon.php	/^				$is_trial_or_setup_fee = true;$/;"	v
is_trial_or_setup_fee	includes/addon/class-gf-feed-addon.php	/^			$is_trial_or_setup_fee = false;$/;"	v
is_trial_or_setup_fee	includes/addon/class-gf-payment-addon.php	/^				$is_trial_or_setup_fee = true;$/;"	v
is_trial_or_setup_fee	includes/addon/class-gf-payment-addon.php	/^			$is_trial_or_setup_fee = false;$/;"	v
is_unique_name	form_settings.php	/^    public static function is_unique_name($name, $confirmations){$/;"	f
is_unique_name	notification.php	/^    public static function is_unique_name($name, $notifications){$/;"	f
is_unique_title	forms_model.php	/^    public static function is_unique_title($title){$/;"	f
is_update	notification.php	/^            $is_update = true;$/;"	v
is_update	notification.php	/^        $is_update = false;$/;"	v
is_url	common.php	/^                    $is_url = rgar($match,6) == ":url";$/;"	v
is_url	common.php	/^                    $is_url = true;$/;"	v
is_url	common.php	/^    private static function get_post_image_variable($media_id, $arg1, $arg2, $is_url = false){$/;"	v
is_valid	form_display.php	/^                $is_valid = false;$/;"	v
is_valid	form_display.php	/^            $is_valid = rgar($submission_info, "is_valid") || rgar($submission_info, "is_confirmation");$/;"	v
is_valid	form_display.php	/^            $is_valid = self::validate($form, $field_values, $page_number, $failed_validation_page);$/;"	v
is_valid	form_display.php	/^        $is_valid = $validation_result["is_valid"];$/;"	v
is_valid	form_display.php	/^        $is_valid = true;$/;"	v
is_valid	form_settings.php	/^        $is_valid = !empty(GFCommon::$errors);$/;"	v
is_valid	includes/addon/class-gf-addon.php	/^            $is_valid = $this->validate_settings( $sections, $settings );$/;"	v
is_valid	includes/addon/class-gf-addon.php	/^            $is_valid = call_user_func_array( $feedback_callback, array( $value, $field ) );$/;"	v
is_valid	includes/addon/class-gf-addon.php	/^        $is_valid = empty( $field_errors );$/;"	v
is_valid	includes/addon/class-gf-feed-addon.php	/^        $is_valid = $this->validate_settings( $sections, $settings );$/;"	v
is_valid	includes/webapi/webapi.php	/^            $is_valid = $signature == $calculated_sig || $signature == rawurlencode($calculated_sig);$/;"	v
is_valid	notification.php	/^            $is_valid = self::validate_notification();$/;"	v
is_valid	notification.php	/^        $is_valid =  (rgpost('gform_notification_to_type') == "routing" && self::is_valid_routing())$/;"	v
is_valid	notification.php	/^        $is_valid = empty(GFCommon::$errors);$/;"	v
is_valid	notification.php	/^        $is_valid = self::is_valid_notification_to() && !rgempty("gform_notification_subject") && !rgempty("gform_notification_message");$/;"	v
is_valid	notification.php	/^        $is_valid = true;$/;"	v
is_valid	notification.php	/^        return $is_valid = apply_filters("gform_is_valid_notification_to", $is_valid, rgpost('gform_notification_to_type'), rgpost("gform_notification_to_email"), rgpost("gform_notification_to_field"));$/;"	v
is_valid	recaptchalib.php	/^	var $is_valid;$/;"	v
is_valid_card_checksum	common.php	/^    private static function is_valid_card_checksum($number){$/;"	f
is_valid_email	common.php	/^	public static function is_valid_email( $email ) {$/;"	f
is_valid_email_list	common.php	/^	public static function is_valid_email_list( $email_list ) {$/;"	f
is_valid_for_calcuation	common.php	/^    public static function is_valid_for_calcuation($field) {$/;"	f
is_valid_form	gravityforms.php	/^            $is_valid_form = $form_info && $form_info->is_active;$/;"	v
is_valid_format	form_display.php	/^                            $is_valid_format = is_numeric($hour) && is_numeric($minute);$/;"	v
is_valid_key	includes/addon/class-gf-auto-upgrade.php	/^        $is_valid_key = rgar($version_info, "is_valid_key") && rgars($version_info, "offerings\/{$offering}\/is_available");$/;"	v
is_valid_notification_email	notification.php	/^    private static function is_valid_notification_email($text){$/;"	f
is_valid_notification_to	notification.php	/^    private static function is_valid_notification_to(){$/;"	f
is_valid_number	form_display.php	/^                            $is_valid_number = self::validate_range($field, $value) && GFCommon::is_numeric($raw_value, $field["numberFormat"]);$/;"	v
is_valid_routing	notification.php	/^    private static function is_valid_routing(){$/;"	f
is_valid_url	common.php	/^	public static function is_valid_url( $url ) {$/;"	f
is_value_match	common.php	/^                        $is_value_match = GFFormsModel::is_value_match(rgar($lead,$rule["fieldId"]), $rule["value"], $rule["operator"], null, $rule, $form );$/;"	v
is_value_match	common.php	/^                    $is_value_match = GFFormsModel::is_value_match( $field_value, $rule["value"], $rule["operator"], $source_field, $rule, $form );$/;"	v
is_value_match	common.php	/^                $is_value_match = RGFormsModel::is_value_match( $field_value, $routing["value"], $routing["operator"], $source_field, $routing, $form ) && !RGFormsModel::is_field_hidden($form, $source_field, array(), $lead);$/;"	v
is_value_match	common.php	/^                $is_value_match = RGFormsModel::is_value_match($field_value, $routing["value"], $routing["operator"], $source_field, $routing, $form ) && !RGFormsModel::is_field_hidden($form, $source_field, array(), $lead);$/;"	v
is_value_match	forms_model.php	/^            $is_value_match = self::is_value_match( $field_value, $rule['value'], $rule['operator'], $source_field, $rule, $form );$/;"	v
is_value_match	forms_model.php	/^    public static function is_value_match( $field_value, $target_value, $operation="is", $source_field = null, $rule = null, $form = null ) {$/;"	f
is_view_page	includes/addon/class-gf-addon-locking.php	/^    protected function is_view_page() {$/;"	f
is_view_page	includes/locking/class-gf-locking.php	/^    protected function is_view_page() {$/;"	f
is_view_page	includes/locking/locking.php	/^    protected function is_view_page() {$/;"	f
is_within_30_days	includes/addon/class-gf-payment-addon.php	/^            $is_within_30_days = strtotime( $day["date"] ) >= strtotime( "-30 days", $local_time  ) ;$/;"	v
is_wp_version	common.php	/^    public static function is_wp_version($min_version){$/;"	f
isalnumat	includes/phpqrcode/phpqrcode.php	/^        public static function isalnumat($str, $pos)$/;"	f
isdigitat	includes/phpqrcode/phpqrcode.php	/^        public static function isdigitat($str, $pos)$/;"	f
isnot	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
isnot	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
item	forms_model.php	/^                                    $item = implode("|", $item);$/;"	v
item	forms_model.php	/^                                $item = trim($item);$/;"	v
item_value	common.php	/^                                $item_value = self::format_post_category($item, $use_id);$/;"	v
item_value	common.php	/^            $item_value = $item_id;$/;"	v
items	common.php	/^                            $items = $raw_value;$/;"	v
items	common.php	/^                            $items = array($input_id => $raw_value);$/;"	v
items	common.php	/^                            $items = array($input_id => $value); \/\/float input Ids. (i.e. 4.1 ). Used when targeting specific checkbox items$/;"	v
items	common.php	/^                            $items = explode(",", $value);$/;"	v
items	common.php	/^                    $items = '';$/;"	v
items	common.php	/^                $items = '';$/;"	v
items	entry_list.php	/^                                                $items = array();$/;"	v
items	form_settings.php	/^        $this->items = $this->form['confirmations'];$/;"	v
items	includes/addon/class-gf-feed-addon.php	/^        $this->items = isset($this->_feeds) ? $this->_feeds : array();$/;"	v
items	includes/addon/class-gf-payment-addon.php	/^        $this->items = $this->_rows;$/;"	v
items	includes/phpqrcode/phpqrcode.php	/^        public $items;$/;"	v
items	includes/phpqrcode/phpqrcode.php	/^        public static $items = array();$/;"	v
items	notification.php	/^        $this->items = $this->form['notifications'];$/;"	v
iv_size	common.php	/^			$iv_size = mcrypt_get_iv_size( MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB );$/;"	v
j	includes/phpqrcode/phpqrcode.php	/^            $j = QRspec::getRemainder($version);$/;"	v
jQuery.fn.repeater	includes/addon/js/repeater.js	/^jQuery.fn.repeater = function( options ) {$/;"	f
join	includes/addon/class-gf-payment-addon.php	/^                $join = "lead.date = transaction.date";$/;"	v
join	includes/addon/class-gf-payment-addon.php	/^                $join = "lead.month = transaction.month";$/;"	v
join	includes/addon/class-gf-payment-addon.php	/^                $join = "lead.week = transaction.week";$/;"	v
jpg	includes/phpqrcode/phpqrcode.php	/^        public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85)$/;"	f
json_decode	common.php	/^    public static function json_decode($str, $is_assoc=true){$/;"	f
json_encode	common.php	/^    public static function json_encode($value){$/;"	f
k	gravityforms.php	/^		foreach($menu_items as $k => $menu_item){$/;"	v
k	gravityforms.php	/^                        foreach($sub_menu_items as $k => $val){$/;"	v
k	includes/api.php	/^        foreach($current_entry as $k => $v){$/;"	v
key	common.php	/^			$key = substr( md5( wp_salt( 'nonce' ) ), 0, $iv_size );$/;"	v
key	common.php	/^                    $key       = $key_array[0];$/;"	v
key	common.php	/^                    $key = "id";$/;"	v
key	common.php	/^                    foreach($value as $key => $item){$/;"	v
key	common.php	/^                $key                  = $filter_fields[$i];$/;"	v
key	common.php	/^            $key          = $field["id"];$/;"	v
key	common.php	/^            $key = $blog_id . ':' . $key;$/;"	v
key	common.php	/^        $key = GFCommon::get_key();$/;"	v
key	common.php	/^        $key = json_encode($types) . "_" . $product_id . "_" . $form["id"];$/;"	v
key	common.php	/^        $key = self::$_transient_prefix . wp_hash($key);$/;"	v
key	common.php	/^        foreach ($entry_meta as $key => $meta) {$/;"	v
key	common.php	/^        foreach ($plugin_list as $key => $plugin) {$/;"	v
key	common.php	/^        foreach($info_columns as $key => $info_column){$/;"	v
key	entry_detail.php	/^                $key       = $key_array[0];$/;"	v
key	entry_detail.php	/^            $key = $search_field_id;$/;"	v
key	entry_list.php	/^                $key       = $key_array[0];$/;"	v
key	entry_list.php	/^                $key = "id";$/;"	v
key	entry_list.php	/^            $key = $search_field_id;$/;"	v
key	export.php	/^        foreach($forms as $key => &$form){$/;"	v
key	form_detail.php	/^                                                    $key = str_replace("'", "\\'", $name);$/;"	v
key	form_detail.php	/^                                        foreach($addressTypes as $key => $addressType){$/;"	v
key	form_detail.php	/^                                    foreach($addressTypes as $key => $addressType){$/;"	v
key	form_display.php	/^            if( (in_array($field["inputType"], array("singleproduct", "hiddenproduct")) && $key == $field["id"] . ".2") || $field["inputType"] == "singleshipping")$/;"	v
key	form_display.php	/^        $key = $script_name . "_" . $location;$/;"	v
key	form_display.php	/^        foreach($value as $key => $input_value){$/;"	v
key	form_settings.php	/^							foreach($form_settings as $key=>$value) {$/;"	v
key	form_settings.php	/^                foreach($actions as $key => $html) {$/;"	v
key	forms_model.php	/^                $key = "id";$/;"	v
key	forms_model.php	/^            $key = rgar($search, "key");$/;"	v
key	forms_model.php	/^            $key = strtolower(rgar($filter, "key"));$/;"	v
key	forms_model.php	/^            $key = trim($key);$/;"	v
key	forms_model.php	/^            foreach ($entry_metas as $key => $entry_meta){$/;"	v
key	forms_model.php	/^        $key = $form["id"] . "_" . $field_id;$/;"	v
key	gravityforms.php	/^		foreach($menu_items as $key => $menu_item){$/;"	v
key	gravityforms.php	/^                    $key       = $key_array[0];$/;"	v
key	gravityforms.php	/^                $key = $search_field_id;$/;"	v
key	gravityforms.php	/^        $key = GFCommon::get_key();$/;"	v
key	gravityforms.php	/^        $key = array_search($plugin_path, $active_plugins);$/;"	v
key	gravityforms.php	/^        foreach($plugins as $key => $plugin){$/;"	v
key	includes/addon/class-gf-addon.php	/^            foreach($_POST as $key => $value){$/;"	v
key	includes/addon/class-gf-addon.php	/^        foreach($default as $key=>$value){$/;"	v
key	includes/addon/class-gf-addon.php	/^        foreach($query_array as $key => $value){$/;"	v
key	includes/addon/class-gf-auto-upgrade.php	/^        $key = $this->get_key();$/;"	v
key	includes/addon/class-gf-feed-addon.php	/^        foreach ($new_form_settings as $key => $value) {$/;"	v
key	includes/addon/class-gf-payment-addon.php	/^        foreach ($sales_data["data"] as $key => $value) {$/;"	v
key	includes/webapi/webapi.php	/^                foreach($property_values as $key => $property_value){$/;"	v
key	includes/webapi/webapi.php	/^            $key        = $this->get_results_cache_meta_key($form_id);$/;"	v
key	includes/webapi/webapi.php	/^            $key     = $this->get_results_cache_key($form_id, $fields, $search_criteria);$/;"	v
key	includes/webapi/webapi.php	/^            $key = "%" . GFCommon::esc_like( $key ) . "%";$/;"	v
key	includes/webapi/webapi.php	/^            $key = $this->get_results_cache_key_prefix($form_id);$/;"	v
key	includes/webapi/webapi.php	/^            $key = $this->get_results_cache_meta_key($form_id);$/;"	v
key	includes/webapi/webapi.php	/^            $key = is_multisite() ? $blog_id . '-' : "";$/;"	v
key	includes/webapi/webapi.php	/^            $key = substr($key, 0, 60);$/;"	v
key	includes/webapi/webapi.php	/^            foreach ($entry as $key => $val) {$/;"	v
key	includes/webapi/webapi.php	/^            foreach($property_values as $key => $property_value){$/;"	v
key	notification.php	/^                foreach($actions as $key => $html) {$/;"	v
key	print-entry.php	/^            $key       = $key_array[0];$/;"	v
key	print-entry.php	/^        $key = $search_field_id;$/;"	v
key	recaptchalib.php	/^	foreach ( $data as $key => $value )$/;"	v
key	settings.php	/^                        $key = GFCommon::get_key();$/;"	v
key	settings.php	/^        $key = GFCommon::get_key();$/;"	v
key	xml.php	/^                        $xml .= " $key=\\"$value\\"";$/;"	v
key	xml.php	/^            foreach($current["attributes"] as $key => $attribute)$/;"	v
key	xml.php	/^            foreach($data as $key => $obj){$/;"	v
key	xml.php	/^        foreach($data as $key => $obj){$/;"	v
key_array	common.php	/^                    $key_array = explode("|", $key);$/;"	v
key_array	entry_detail.php	/^                $key_array = explode("|", $search_field_id);$/;"	v
key_array	entry_list.php	/^                $key_array = explode("|", $search_field_id);$/;"	v
key_array	gravityforms.php	/^                    $key_array = explode("|", $search_field_id);$/;"	v
key_array	print-entry.php	/^            $key_array = explode("|", $search_field_id);$/;"	v
key_field	includes/addon/class-gf-addon.php	/^        $key_field = $field;$/;"	v
key_field	settings.php	/^                        $key_field = '<input type="password" name="gforms_key" id="gforms_key" style="width:350px;" value="' . $key . '" \/>';$/;"	v
key_info	common.php	/^        $key_info = unserialize(trim($raw_response["body"]));$/;"	v
key_tmp	includes/webapi/webapi.php	/^            $key_tmp = "tmp" . $key;$/;"	v
keys	common.php	/^        $keys = array("to", "from", "bcc", "replyTo", "subject", "message", "from_name", "message_format", "attachments", "disableAutoformat");$/;"	v
keys	export.php	/^            $keys = array_keys($entry_meta);$/;"	v
keys	form_settings.php	/^                $keys = array_keys($actions);$/;"	v
keys	forms_model.php	/^        $keys = $wpdb->get_col( "$/;"	v
keys	forms_model.php	/^        $keys = array_keys($entry_meta);$/;"	v
keys	gravityforms.php	/^        $keys = array_keys($menu_items);$/;"	v
keys	includes/addon/class-gf-feed-addon.php	/^        $keys = array_keys($entry_meta);$/;"	v
keys	notification.php	/^                $keys = array_keys($actions);$/;"	v
keys	select_columns.php	/^		$keys = array_keys($entry_meta);$/;"	v
ky	recaptchalib.php	/^	$ky = pack('H*', $privkey);$/;"	v
l	includes/phpqrcode/phpqrcode.php	/^                $l = 0;$/;"	v
l	includes/phpqrcode/phpqrcode.php	/^                $l = 1;$/;"	v
l	includes/phpqrcode/phpqrcode.php	/^                $l = 2;$/;"	v
l	includes/phpqrcode/phpqrcode.php	/^            $l = QRspec::lengthIndicator($this->mode, $version);$/;"	v
l	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:n
la	includes/phpqrcode/phpqrcode.php	/^            $la = QRspec::lengthIndicator(QR_MODE_AN,  $this->input->getVersion());$/;"	v
la	includes/phpqrcode/phpqrcode.php	/^            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());$/;"	v
label	common.php	/^                    $label = "<input id='input_{$field["formId"]}_{$field["id"]}_other' name='input_{$field["id"]}_other' type='text' value='" . esc_attr($other_value) . "' onfocus='$onfocus' onblur='$onblur' $tabindex $onkeyup $disabled_text \/>";$/;"	v
label	common.php	/^                $label = sprintf("<label for='choice_%s' id='label_%s'>%s<\/label>", $id, $id, $choice["text"]);$/;"	v
label	entry_detail.php	/^    public static function entry_detail_pagination_link($pos, $label = '', $class = '', $icon = '') {$/;"	v
label	forms_model.php	/^            $label = count($ary) > 0 ? $ary[0] : "";$/;"	v
label	gravityforms.php	/^				$label = rgar($menu_item, "label");$/;"	v
label	gravityforms.php	/^                        $label = $compact ? rgar($menu_item, "label") : rgar($sub_menu_items[0], "label");$/;"	v
label	gravityforms.php	/^                        $label = rgar($menu_item, "label");$/;"	v
label	includes/addon/class-gf-addon.php	/^                $label = isset($tab["label"]) ? $tab['label'] : $tab['name'];$/;"	v
label	includes/addon/class-gf-payment-addon.php	/^            $label = GFCommon::get_label($field);$/;"	v
label	includes/addon/class-gf-payment-addon.php	/^            $label = __("Form Total", "gravityforms");$/;"	v
label_dd	form_settings.php	/^        $label_dd = "";$/;"	v
label_target_shim	common.php	/^                $label_target_shim = sprintf( '<input type=\\'text\\' id=\\'input_%1$s_%2$s_shim\\' style=\\'position:absolute;left:-999em;\\' onfocus=\\'jQuery( "#field_%1$s_%2$s table tr td:first-child input" ).focus();\\' \/>', $form_id, $field['id'] );$/;"	v
labels	form_display.php	/^        $labels = self::get_honeypot_labels();$/;"	v
language	common.php	/^                            $language = empty($field["captchaLanguage"]) ? "en" : esc_attr($field["captchaLanguage"]);$/;"	v
last	common.php	/^                    $last = esc_attr(RGForms::get($field["id"] . ".6", $value));$/;"	v
last	common.php	/^                    $last = trim(rgget($field["id"] . ".6", $value));$/;"	v
last	common.php	/^                $last = "";$/;"	v
last	form_display.php	/^                                $last = $_POST["input_" . $field["id"] . "_6"];$/;"	v
last	includes/addon/class-gf-addon.php	/^        $last = trim(rgar($entry,$field_id . ".6"));$/;"	v
last3	xml.php	/^        $last3 = strtolower(substr($str, strlen($str) - 3));$/;"	v
last3	xml.php	/^        if( $last3 == "ies" && in_array($fourth, array("a","e","i","o","u") ) ){$/;"	v
lastTime	includes/phpqrcode/phpqrcode.php	/^                $lastTime = $thisTime;$/;"	v
lastTime	includes/phpqrcode/phpqrcode.php	/^            $lastTime = 0;$/;"	v
last_class	form_display.php	/^                        $last_class = $i+1 == $count ? " gf_step_last" : "";$/;"	v
last_key	form_settings.php	/^                $last_key = array_pop($keys);$/;"	v
last_key	gravityforms.php	/^        $last_key = array_pop($keys);  \/\/ array_pop(array_keys($menu_items)) causes a Strict Standards warning in WP 3.6 on PHP 5.4$/;"	v
last_key	notification.php	/^                $last_key = array_pop($keys);$/;"	v
last_row	entry_detail.php	/^                                $last_row = $is_last ? " lastrow" : "";$/;"	v
last_tabindex	common.php	/^                        $last_tabindex = self::get_tabindex();$/;"	v
last_tabindex	common.php	/^                $last_tabindex = self::get_tabindex();$/;"	v
later	form_list.php	/^                        \/\/ adding class later otherwise WP moves box up to the top of the page$/;"	c
lead	common.php	/^            $lead = RGFormsModel::get_lead($lead_id);$/;"	v
lead	entry_detail.php	/^				$lead = GFFormsModel::set_entry_meta($lead, $form);$/;"	v
lead	entry_detail.php	/^                $lead = RGFormsModel::get_lead($lead["id"]);$/;"	v
lead	entry_detail.php	/^            $lead = !empty($leads) ? $leads[0] : false;$/;"	v
lead	entry_detail.php	/^            $lead = GFAPI::get_entry($lead_id);$/;"	v
lead	form_display.php	/^				$lead = array();$/;"	v
lead	form_display.php	/^		$lead = GFFormsModel::set_entry_meta($lead, $form);$/;"	v
lead	form_display.php	/^		$lead = RGFormsModel::get_lead($lead["id"]);$/;"	v
lead	form_display.php	/^		$lead = apply_filters('gform_entry_post_save', $lead, $form);$/;"	v
lead	form_display.php	/^        	$lead = GFFormsModel::create_lead($form);$/;"	v
lead	form_display.php	/^            $lead = $submission_info["lead"];$/;"	v
lead	form_display.php	/^        $lead = array();$/;"	v
lead	form_display.php	/^    public static function update_confirmation($form, $lead=null) {$/;"	v
lead	forms_model.php	/^                    $lead = array("id" => $result->id, "form_id" => $result->form_id,     "date_created" => $result->date_created,     "is_starred" => intval($result->is_starred),     "is_read" => intval($result->is_read),     "ip" => $result->ip,     "source_url" => $result->source_url,     "post_id" => $result->post_id,     "currency" => $result->currency,     "payment_status" => $result->payment_status,     "payment_date" => $result->payment_date,     "transaction_id" => $result->transaction_id,     "payment_amount" => $result->payment_amount,  "payment_method" => $result->payment_method,     "is_fulfilled" => $result->is_fulfilled,     "created_by" => $result->created_by,     "transaction_type" => $result->transaction_type,     "user_agent" => $result->user_agent,    "status" => $result->status);$/;"	v
lead	forms_model.php	/^                    $lead = empty($lead) ? RGFormsModel::get_lead($lead_id) : $lead;$/;"	v
lead	forms_model.php	/^                $lead = empty($lead) ? RGFormsModel::get_lead($lead_id) : $lead;$/;"	v
lead	forms_model.php	/^            $lead = array( 'id' => $lead_id );$/;"	v
lead	forms_model.php	/^            $lead = array("id" => $results[0]->id, "form_id" => $results[0]->form_id, "date_created" => $results[0]->date_created, "is_starred" => intval($results[0]->is_starred), "is_read" => intval($results[0]->is_read), "ip" => $results[0]->ip, "source_url" => $results[0]->source_url, "post_id" => $results[0]->post_id, "currency" => $results[0]->currency, "payment_status" => $results[0]->payment_status, "payment_date" => $results[0]->payment_date, "transaction_id" => $results[0]->transaction_id, "payment_amount" => $results[0]->payment_amount, "payment_method" => $results[0]->payment_method, "is_fulfilled" => $results[0]->is_fulfilled, "created_by" => $results[0]->created_by, "transaction_type" => $results[0]->transaction_type, "user_agent" => $results[0]->user_agent, "status" => $results[0]->status);$/;"	v
lead	forms_model.php	/^            self::refresh_product_cache($form, $lead = RGFormsModel::get_lead($lead['id']));$/;"	v
lead	forms_model.php	/^        $lead = array();$/;"	v
lead	forms_model.php	/^        $lead = self::get_lead($lead_id);$/;"	v
lead	forms_model.php	/^    private static function get_field_display($form, $field, $field_values, $lead=null){$/;"	v
lead	forms_model.php	/^    public static function is_field_hidden($form, $field, $field_values, $lead=null){$/;"	v
lead	forms_model.php	/^    public static function is_page_hidden($form, $page_number, $field_values, $lead=null){$/;"	v
lead	forms_model.php	/^    public static function prepare_value($form, $field, $value, $input_name, $lead_id, $lead = array()){$/;"	v
lead	gravityforms.php	/^            $lead = RGFormsModel::get_lead($lead_id);$/;"	v
lead	includes/webapi/webapi.php	/^            $lead    = RGFormsModel::get_lead($lead_id);$/;"	v
lead	print-entry.php	/^            $lead = RGFormsModel::get_lead($lead_id);$/;"	v
lead_date_filter	includes/addon/class-gf-payment-addon.php	/^            $lead_date_filter = $wpdb->prepare(" AND timestampdiff(SECOND, %s, CONVERT_TZ(l.date_created, '+00:00', '" . $tz_offset . "')) >= 0", $search["start_date"]);$/;"	v
lead_date_filter	includes/addon/class-gf-payment-addon.php	/^        $lead_date_filter = "";$/;"	v
lead_date_results	forms_model.php	/^        $lead_date_results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
lead_detail_edit	entry_detail.php	/^    public static function lead_detail_edit($form, $lead){$/;"	f
lead_detail_grid	entry_detail.php	/^    public static function lead_detail_grid($form, $lead, $allow_display_empty_fields=false){$/;"	f
lead_detail_id	forms_model.php	/^                    $lead_detail_id = $wpdb->insert_id;$/;"	v
lead_detail_id	forms_model.php	/^        $lead_detail_id = self::get_lead_detail_id($current_fields, $input_id);$/;"	v
lead_detail_id	includes/api.php	/^                        $lead_detail_id = GFFormsModel::get_lead_detail_id($current_fields, $input_id);$/;"	v
lead_detail_id	includes/api.php	/^                $lead_detail_id = GFFormsModel::get_lead_detail_id($current_fields, $field_id);$/;"	v
lead_detail_id	includes/api.php	/^            $lead_detail_id = GFFormsModel::get_lead_detail_id($current_fields, $k);$/;"	v
lead_detail_long	forms_model.php	/^        $lead_detail_long       = self::get_lead_details_long_table_name();$/;"	v
lead_detail_long_table	forms_model.php	/^        $lead_detail_long_table = self::get_lead_details_long_table_name();$/;"	v
lead_detail_long_table_name	gravityforms.php	/^        $lead_detail_long_table_name = RGFormsModel::get_lead_details_long_table_name();$/;"	v
lead_detail_page	entry_detail.php	/^    public static function lead_detail_page(){$/;"	f
lead_detail_table	forms_model.php	/^        $lead_detail_table = self::get_lead_details_table_name();$/;"	v
lead_detail_table	includes/api.php	/^        $lead_detail_table = GFFormsModel::get_lead_details_table_name();$/;"	v
lead_detail_table_name	forms_model.php	/^        $lead_detail_table_name = GFFormsModel::get_lead_details_table_name();$/;"	v
lead_detail_table_name	forms_model.php	/^        $lead_detail_table_name = self::get_lead_details_table_name();$/;"	v
lead_detail_table_name	gravityforms.php	/^        $lead_detail_table_name = RGFormsModel::get_lead_details_table_name();$/;"	v
lead_details_long_table	gravityforms.php	/^        $lead_details_long_table = GFFormsModel::get_lead_details_long_table_name();$/;"	v
lead_details_table	gravityforms.php	/^        $lead_details_table = GFFormsModel::get_lead_details_table_name();$/;"	v
lead_details_table_name	forms_model.php	/^        $lead_details_table_name = GFFormsModel::get_lead_details_table_name();$/;"	v
lead_field_keys	entry_list.php	/^                                                $lead_field_keys = array_keys($lead);$/;"	v
lead_field_keys	forms_model.php	/^            $lead_field_keys = array_keys($lead);$/;"	v
lead_field_keys	forms_model.php	/^        $lead_field_keys = array_keys($lead);$/;"	v
lead_gmt_time	common.php	/^        $lead_gmt_time = mysql2date("G", $gmt_datetime);$/;"	v
lead_gmt_time	export.php	/^                            $lead_gmt_time = mysql2date("G", $lead["date_created"]);$/;"	v
lead_id	entry_detail.php	/^        $lead_id = rgget('lid');$/;"	v
lead_id	entry_list.php	/^                $lead_id = $_POST["action_argument"];$/;"	v
lead_id	form_display.php	/^		$lead_id = apply_filters("gform_entry_id_pre_save_lead{$form["id"]}", apply_filters("gform_entry_id_pre_save_lead", null, $form), $form);$/;"	v
lead_id	forms_model.php	/^            $lead_id = $wpdb->insert_id;$/;"	v
lead_id	forms_model.php	/^        $lead_id = $lead["id"];$/;"	v
lead_id	gravityforms.php	/^        $lead_id =  intval($_POST["lead_id"]);$/;"	v
lead_id	gravityforms.php	/^        $lead_id = rgget('lid');$/;"	v
lead_id	gravityforms.php	/^        $lead_id = rgpost("entry");$/;"	v
lead_ids	print-entry.php	/^    $lead_ids = GFFormsModel::search_lead_ids($form_id, $search_criteria);$/;"	v
lead_ids	print-entry.php	/^    $lead_ids = explode(',', $leads);$/;"	v
lead_local_time	common.php	/^        $lead_local_time = self::get_local_timestamp($lead_gmt_time);$/;"	v
lead_local_time	export.php	/^                            $lead_local_time = GFCommon::get_local_timestamp($lead_gmt_time);$/;"	v
lead_meta_table	forms_model.php	/^        $lead_meta_table = self::get_lead_meta_table_name();$/;"	v
lead_meta_table	includes/addon/class-gf-addon.php	/^        $lead_meta_table = GFFormsModel::get_lead_meta_table_name();$/;"	v
lead_meta_table_name	forms_model.php	/^		$lead_meta_table_name = self::get_lead_meta_table_name();$/;"	v
lead_meta_table_name	forms_model.php	/^        $lead_meta_table_name    = GFFormsModel::get_lead_meta_table_name();$/;"	v
lead_meta_table_name	forms_model.php	/^        $lead_meta_table_name   = GFFormsModel::get_lead_meta_table_name();$/;"	v
lead_meta_table_name	gravityforms.php	/^        $lead_meta_table_name = RGFormsModel::get_lead_meta_table_name();$/;"	v
lead_notes_table	forms_model.php	/^        $lead_notes_table = self::get_lead_notes_table_name();$/;"	v
lead_notes_table_name	gravityforms.php	/^        $lead_notes_table_name = RGFormsModel::get_lead_notes_table_name();$/;"	v
lead_table	forms_model.php	/^            $lead_table = RGFormsModel::get_lead_table_name();$/;"	v
lead_table	forms_model.php	/^        $lead_table = self::get_lead_table_name();$/;"	v
lead_table	includes/api.php	/^        $lead_table = GFFormsModel::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^	    $lead_table_name = self::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^        $lead_table_name        = GFFormsModel::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^        $lead_table_name        = self::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^        $lead_table_name   = GFFormsModel::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^        $lead_table_name = RGFormsModel::get_lead_table_name();$/;"	v
lead_table_name	forms_model.php	/^        $lead_table_name = self::get_lead_table_name();$/;"	v
lead_table_name	gravityforms.php	/^		$lead_table_name = RGFormsModel::get_lead_table_name();$/;"	v
lead_table_name	gravityforms.php	/^        $lead_table_name = RGFormsModel::get_lead_table_name();$/;"	v
lead_value	common.php	/^                $lead_value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
leads	entry_detail.php	/^        $leads = GFAPI::get_entries($form['id'], $search_criteria, $sorting, $paging, $total_count);$/;"	v
leads	entry_list.php	/^                $leads = empty($select_all) ? $_POST["lead"] : GFFormsModel::search_lead_ids($form_id, $search_criteria);$/;"	v
leads	entry_list.php	/^        $leads = GFAPI::get_entries($form_id, $search_criteria, $sorting, $paging, $total_count);$/;"	v
leads	export.php	/^            $leads = GFAPI::get_entries($form_id, $search_criteria, $sorting, $paging );$/;"	v
leads	export.php	/^            $leads = apply_filters("gform_leads_before_export_$form_id", apply_filters("gform_leads_before_export", $leads, $form, $paging), $form, $paging);$/;"	v
leads	forms_model.php	/^        $leads = GFFormsModel::build_lead_array($results);$/;"	v
leads	forms_model.php	/^        $leads = array();$/;"	v
leads	forms_model.php	/^        $leads = self::build_lead_array($results);$/;"	v
leads	forms_model.php	/^        $leads = self::build_lead_array($results, true);$/;"	v
leads	gravityforms.php	/^            $leads = !is_array($leads) ? array($leads) : $leads;$/;"	v
leads	gravityforms.php	/^            $leads = GFFormsModel::search_lead_ids($form_id, $search_criteria);$/;"	v
leads	gravityforms.php	/^        $leads = rgpost('leadIds'); \/\/ may be a single ID or an array of IDs$/;"	v
leads	includes/addon/class-gf-results.php	/^                $leads                   = GFFormsModel::search_leads($form_id, $search_criteria, null, $paging);$/;"	v
leads	includes/addon/class-gf-results.php	/^                $leads  = GFFormsModel::search_leads($form_id, $search_criteria, $sorting, $paging);$/;"	v
leads	print-entry.php	/^$leads = rgget("lid");$/;"	v
leads_in_search	includes/addon/class-gf-results.php	/^                $leads_in_search = count($leads);$/;"	v
leads_page	entry_list.php	/^    public static function leads_page($form_id){$/;"	f
left	js/jquery.textareaCounter.plugin.js	/^				left: numLeft,$/;"	p	class:countByCharacters.getInfo.info
legacy_notification	common.php	/^                $legacy_notification = GFCommon::prepare_admin_notification($form, $lead);$/;"	v
legacy_notification	common.php	/^                $legacy_notification = GFCommon::prepare_user_notification($form, $lead);$/;"	v
legacy_notification	forms_model.php	/^            $legacy_notification = $notification;$/;"	v
len	includes/phpqrcode/phpqrcode.php	/^            $len = count($frame);$/;"	v
length	common.php	/^    public static function safe_substr($string, $start, $length = null){$/;"	v
length	includes/phpqrcode/phpqrcode.php	/^                                $length = $this->eatKanji();$/;"	v
length	includes/phpqrcode/phpqrcode.php	/^                        else    $length = $this->eat8();$/;"	v
length	includes/phpqrcode/phpqrcode.php	/^                    case QR_MODE_AN:  $length = $this->eatAn(); break;$/;"	v
length	includes/phpqrcode/phpqrcode.php	/^                    case QR_MODE_NUM: $length = $this->eatNum(); break;$/;"	v
length	includes/phpqrcode/phpqrcode.php	/^                    default: $length = $this->eat8(); break;$/;"	v
lengthIndicator	includes/phpqrcode/phpqrcode.php	/^        public static function lengthIndicator($mode, $version)$/;"	f
lengthOfCode	includes/phpqrcode/phpqrcode.php	/^        public static function lengthOfCode($mode, $version, $bits)$/;"	f
lengthTableBits	includes/phpqrcode/phpqrcode.php	/^        public static $lengthTableBits = array($/;"	v
length_field	includes/addon/class-gf-payment-addon.php	/^        $length_field = array($/;"	v
lengths	common.php	/^        $lengths = explode(',',$card['lengths']);$/;"	v
level	includes/phpqrcode/phpqrcode.php	/^            $this->level = $level;$/;"	v
level	includes/phpqrcode/phpqrcode.php	/^        private $level;$/;"	v
level	includes/phpqrcode/phpqrcode.php	/^        public $level = QR_ECLEVEL_L;$/;"	v
level	includes/phpqrcode/phpqrcode.php	/^        public function __construct($version = 0, $level = QR_ECLEVEL_L)$/;"	v
level	xml.php	/^        $level = isset($values[$parent_index]["level"]) ? $values[$parent_index]["level"] + 1 : false;$/;"	v
levels	form_display.php	/^                                $levels = array("short" => 1, "bad" => 2, "good" => 3, "strong" => 4);$/;"	v
license_key	gravityforms.php	/^        $license_key = defined("GF_LICENSE_KEY") && empty($gf_license_key) ? GF_LICENSE_KEY : $gf_license_key;$/;"	v
limitTextAreaByCharacterCount	js/jquery.textareaCounter.plugin.js	/^		function limitTextAreaByCharacterCount(){$/;"	f	function:fn.textareaCount
limit_entries_dd	form_settings.php	/^        $limit_entries_dd = "";$/;"	v
limit_entry_checked	form_settings.php	/^			$limit_entry_checked = 'checked="checked"';$/;"	v
limit_entry_checked	form_settings.php	/^        $limit_entry_checked = "";$/;"	v
limit_entry_style	form_settings.php	/^			$limit_entry_style = "display:none";$/;"	v
limit_entry_style	form_settings.php	/^        $limit_entry_style = "";$/;"	v
limit_periods	form_settings.php	/^        $limit_periods = array($/;"	v
line_break	common.php	/^                    $line_break = $format == "html" ? "<br \/>" : "\\n";$/;"	v
line_items	includes/addon/class-gf-feed-addon.php	/^		$line_items   = array();$/;"	v
line_items	includes/addon/class-gf-payment-addon.php	/^        $line_items = array();$/;"	v
lines	export.php	/^                $lines = substr($lines, 0, strlen($lines)-1);$/;"	v
lines	export.php	/^                $lines = utf8_encode( $lines );$/;"	v
lines	export.php	/^            $lines = "";$/;"	v
lines	export.php	/^        $lines = chr(239) . chr(187) . chr(191);$/;"	v
lines	export.php	/^        $lines = substr($lines, 0, strlen($lines)-1) . "\\n";$/;"	v
link	gravityforms.php	/^                            $link = apply_filters("gform_form_delete_link", $link);$/;"	v
link	gravityforms.php	/^                    $link = "<a class='{$link_class}' onclick='{$onclick}' title='{$title}' href='{$url}' target='{$target}'>{$icon} {$label}<\/a>" . $sub_menu_str;$/;"	v
link	includes/addon/class-gf-feed-addon.php	/^            $link = str_replace("{id}", $item["id"], $link);$/;"	v
link_class	gravityforms.php	/^				$link_class = rgar($menu_item, "link_class");$/;"	v
link_class	gravityforms.php	/^                    $link_class = rgar($menu_item, "link_class");$/;"	v
link_class	includes/addon/class-gf-results.php	/^                    $link_class = "gf_toolbar_active";$/;"	v
link_class	includes/addon/class-gf-results.php	/^                    $link_class = "gf_toolbar_disabled";$/;"	v
link_class	includes/addon/class-gf-results.php	/^                    $link_class == empty($existing_link_class) ? $link_class : $existing_link_class;$/;"	v
link_class	includes/addon/class-gf-results.php	/^                $link_class = "";$/;"	v
links	includes/addon/class-gf-feed-addon.php	/^        $links = array($/;"	v
list	common.php	/^                                $list = "<table class='gfield_list' style='border-top: 1px solid #DFDFDF; border-left: 1px solid #DFDFDF; border-spacing: 0; padding: 0; margin: 2px 0 6px; width: 100%'><thead><tr>\\n";$/;"	v
list	common.php	/^                                $list = "<table class='gfield_list'><thead><tr>\\n";$/;"	v
list	common.php	/^                                $list = substr($list, 0, strlen($list)-1);$/;"	v
list	common.php	/^                    $list = "";$/;"	v
list	common.php	/^                $list = "<div class='ginput_container ginput_list'>" .$/;"	v
list	export.php	/^                        $list = empty($value) ? array() : unserialize($value);$/;"	v
list	export.php	/^                $list = unserialize($result["value"]);$/;"	v
list	js/forms.js	/^    "list" :            ".columns_setting, .maxrows_setting, .add_icon_url_setting, .delete_icon_url_setting, .conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
list_fields	export.php	/^        $list_fields = GFCommon::get_fields_by_type($form, array("list"));$/;"	v
list_row_class	includes/addon/class-gf-addon.php	/^    public function list_row_class($object_id, $echo = true) {$/;"	f
list_row_class	includes/locking/class-gf-locking.php	/^    public function list_row_class($object_id, $echo = true) {$/;"	f
ln	includes/phpqrcode/phpqrcode.php	/^            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());$/;"	v
loadBillingLength	includes/addon/js/gaddon_payment.js	/^function loadBillingLength(setting_name){$/;"	f
loadNewFormModal	form_list.php	/^            function loadNewFormModal() {$/;"	f
load_confirmations	forms_model.php	/^    public static function load_confirmations($form) {$/;"	f
load_first	gravityforms.php	/^    public static function load_first() {$/;"	f
load_notifications_from_legacy	forms_model.php	/^    private static function load_notifications_from_legacy($form){$/;"	f
load_notifications_to_legacy	forms_model.php	/^    private static function load_notifications_to_legacy($form){$/;"	f
load_screen_options	includes/addon/class-gf-addon.php	/^    protected function load_screen_options(){ }$/;"	f
loaded	gravityforms.php	/^	public static function loaded(){$/;"	f
local_date_dmy	common.php	/^        $local_date_dmy = date_i18n("d\/m\/Y", $local_timestamp, true);$/;"	v
local_date_mdy	common.php	/^        $local_date_mdy = date_i18n("m\/d\/Y", $local_timestamp, true);$/;"	v
local_time	includes/addon/class-gf-payment-addon.php	/^        $local_time = GFCommon::get_local_timestamp();$/;"	v
local_time_end	form_display.php	/^            $local_time_end = sprintf("%s %02d:%02d %s", $form["scheduleEnd"], $form["scheduleEndHour"], $form["scheduleEndMinute"], $form["scheduleEndAmpm"]);$/;"	v
local_time_start	form_display.php	/^            $local_time_start = sprintf("%s %02d:%02d %s", $form["scheduleStart"], $form["scheduleStartHour"], $form["scheduleStartMinute"], $form["scheduleStartAmpm"]);$/;"	v
local_timestamp	common.php	/^        $local_timestamp = self::get_local_timestamp(time());$/;"	v
local_timestamp	export.php	/^        $local_timestamp = strtotime($local_date);$/;"	v
localize_gform_gravityforms_multifile	common.php	/^    public static function localize_gform_gravityforms_multifile(){$/;"	f
localize_results_scripts	includes/addon/class-gf-results.php	/^        public static function localize_results_scripts() {$/;"	f
lock_holder_user_id	includes/locking/class-gf-locking.php	/^        $lock_holder_user_id = $this->check_lock($object_id);$/;"	v
lock_indicator	includes/locking/class-gf-locking.php	/^        $lock_indicator = '<div class="locked-indicator"><\/div>';$/;"	v
lock_indicator	includes/locking/class-gf-locking.php	/^    public function lock_indicator($echo = true) {$/;"	f
lock_info	includes/addon/class-gf-addon.php	/^        $lock_info = $gf_locking->lock_info($object_id, false);$/;"	v
lock_info	includes/addon/class-gf-addon.php	/^    public function lock_info($object_id, $echo = true) {$/;"	f
lock_info	includes/locking/class-gf-locking.php	/^    public function lock_info($object_id, $echo = true) {$/;"	f
lock_request	includes/locking/class-gf-locking.php	/^                        $lock_request = array($/;"	v
lock_request_timedout	includes/locking/js/locking.js	/^    function lock_request_timedout() {$/;"	f
lock_user_id	includes/locking/class-gf-locking.php	/^        $lock_user_id = $this->check_lock($this->get_object_id());$/;"	v
locked	includes/locking/class-gf-locking.php	/^        $locked = $user_id && $user;$/;"	v
locked_avatar	includes/locking/class-gf-locking.php	/^            $locked_avatar = $locked_text = '';$/;"	v
locked_avatar	includes/locking/class-gf-locking.php	/^            $locked_avatar = get_avatar($user->ID, 18);$/;"	v
locked_class	includes/locking/class-gf-locking.php	/^        $locked_class = $this->is_locked($object_id) ? "wp-locked" : "";$/;"	v
locked_info	includes/locking/class-gf-locking.php	/^        $locked_info = '<div class="locked-info"><span class="locked-avatar">' . $locked_avatar . '<\/span> <span class="locked-text">' . $locked_text . "<\/span><\/div>\\n";$/;"	v
locked_text	includes/locking/class-gf-locking.php	/^            $locked_text   = esc_html(sprintf($this->get_string("currently_editing"), $user->display_name));$/;"	v
locking_path	includes/locking/class-gf-locking.php	/^        $locking_path = GFCommon::get_base_url() . "\/includes\/locking\/";$/;"	v
locking_scripts	includes/locking/class-gf-locking.php	/^        $locking_scripts = array("gforms_locking", "gforms_locking_list", "gforms_locking_view");$/;"	v
locking_styles	includes/locking/class-gf-locking.php	/^        $locking_styles = array("gforms_locking_css", "gforms_locking_list_css");$/;"	v
log	includes/phpqrcode/phpqrcode.php	/^        public static function log($outfile, $err)$/;"	f
log_debug	common.php	/^    public static function log_debug($message){$/;"	f
log_debug	includes/addon/class-gf-addon.php	/^    public function log_debug($message){$/;"	f
log_error	common.php	/^    public static function log_error($message){$/;"	f
log_error	includes/addon/class-gf-addon.php	/^    public function log_error($message){$/;"	f
logic	form_display.php	/^            $logic = rgar($confirmation, "conditionalLogic");$/;"	v
logic	forms_model.php	/^        $logic = rgar($field, "conditionalLogic");$/;"	v
logic	includes/addon/class-gf-feed-addon.php	/^        $logic = rgars( $feed_meta, 'feed_condition_conditional_logic_object\/conditionalLogic' );$/;"	v
logic_event	common.php	/^                    $logic_event = self::get_logic_event($field, "keyup");$/;"	v
logic_event	common.php	/^                $logic_event = self::get_logic_event($field, "change");$/;"	v
logic_event	common.php	/^                $logic_event = self::get_logic_event($field, "click");$/;"	v
logic_event	common.php	/^                $logic_event = self::get_logic_event($field, "keyup");$/;"	v
logic_event	common.php	/^            $logic_event = self::get_logic_event($field, "click");$/;"	v
logics	form_display.php	/^            $logics = substr($logics, 0, strlen($logics) - 1); \/\/removing last comma;$/;"	v
logics	form_display.php	/^        $logics = "";$/;"	v
long_choice	forms_model.php	/^                        $long_choice = $val;$/;"	v
long_choice	forms_model.php	/^                        $long_choice = self::get_field_value_long($lead, $input_id, $form);$/;"	v
long_table_name	forms_model.php	/^        $long_table_name = self::get_lead_details_long_table_name();$/;"	v
long_text	export.php	/^                                $long_text = RGFormsModel::get_field_value_long($lead, $field_id, $form);$/;"	v
long_text	export.php	/^                            $long_text = "";$/;"	v
long_text	forms_model.php	/^                    $long_text = RGFormsModel::get_field_value_long($lead, $field_number, $form, false);$/;"	v
long_text	forms_model.php	/^                $long_text = self::get_field_value_long($lead, $field["id"], $form);$/;"	v
lookAnTable	includes/phpqrcode/phpqrcode.php	/^        public static function lookAnTable($c)$/;"	f
m	forms_model.php	/^        $m = substr( $time, 5, 2 );$/;"	v
m	includes/phpqrcode/phpqrcode.php	/^            $m = 1 << $l;$/;"	v
makeMask	includes/phpqrcode/phpqrcode.php	/^        public function makeMask($width, $frame, $maskNo, $level)$/;"	f
makeMaskNo	includes/phpqrcode/phpqrcode.php	/^        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)$/;"	f
mappings	includes/webapi/webapi.php	/^            $mappings   = array($/;"	v
margin	includes/phpqrcode/phpqrcode.php	/^        public $margin = 4;$/;"	v
markTime	includes/phpqrcode/phpqrcode.php	/^        public static function markTime($markerId)$/;"	f
mark_akismet_spam	common.php	/^    public static function mark_akismet_spam($form, $lead, $is_spam){$/;"	f
markerId	includes/phpqrcode/phpqrcode.php	/^            foreach($GLOBALS['qr_time_bench'] as $markerId=>$thisTime) {$/;"	v
markup	includes/addon/class-gf-addon.php	/^			$markup = $this->checkbox_input( $choice, $attributes, $value, $tooltip );$/;"	v
markup	includes/addon/class-gf-addon.php	/^			$markup = call_user_func( array( $this, "checkbox_input_{$choice['name']}" ), $choice, $attributes, $value, $tooltip );$/;"	v
markup	includes/addon/class-gf-addon.php	/^		$markup = '<input type = "checkbox" ' .$/;"	v
markup	includes/addon/class-gf-payment-addon.php	/^        $markup = "";$/;"	v
mask	form_display.php	/^            $mask = rgar($field, 'inputMaskValue');$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^			$mask = new QRmask();$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^                    $mask = $mask >> 1;$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^                $mask = $mask >> 1;$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^                $mask = 0x80;$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^                $mask = array_fill(0, $width, str_repeat("\\0", $width));$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^            $mask = 1 << ($bits - 1);$/;"	v
mask	includes/phpqrcode/phpqrcode.php	/^        public function mask($width, $frame, $level)$/;"	f
mask0	includes/phpqrcode/phpqrcode.php	/^        public function mask0($x, $y) { return ($x+$y)&1;                       }$/;"	f
mask1	includes/phpqrcode/phpqrcode.php	/^        public function mask1($x, $y) { return ($y&1);                          }$/;"	f
mask2	includes/phpqrcode/phpqrcode.php	/^        public function mask2($x, $y) { return ($x%3);                          }$/;"	f
mask3	includes/phpqrcode/phpqrcode.php	/^        public function mask3($x, $y) { return ($x+$y)%3;                       }$/;"	f
mask4	includes/phpqrcode/phpqrcode.php	/^        public function mask4($x, $y) { return (((int)($y\/2))+((int)($x\/3)))&1; }$/;"	f
mask5	includes/phpqrcode/phpqrcode.php	/^        public function mask5($x, $y) { return (($x*$y)&1)+($x*$y)%3;           }$/;"	f
mask6	includes/phpqrcode/phpqrcode.php	/^        public function mask6($x, $y) { return ((($x*$y)&1)+($x*$y)%3)&1;       }$/;"	f
mask7	includes/phpqrcode/phpqrcode.php	/^        public function mask7($x, $y) { return ((($x*$y)%3)+(($x+$y)&1))&1;     }$/;"	f
maskFunc	includes/phpqrcode/phpqrcode.php	/^                        $maskFunc = call_user_func(array($this, 'mask'.$maskNo), $x, $y);$/;"	v
maskGenOnly	includes/phpqrcode/phpqrcode.php	/^        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)$/;"	v
maskObj	includes/phpqrcode/phpqrcode.php	/^            $maskObj = new QRmask();$/;"	v
mask_name	form_detail.php	/^                                                foreach($masks as $mask_name => $mask_value){$/;"	v
masked	includes/phpqrcode/phpqrcode.php	/^                    $masked = $maskObj->makeMask($width, $frame, (intval(QR_DEFAULT_MASK) % 8), $input->getErrorCorrectionLevel());$/;"	v
masked	includes/phpqrcode/phpqrcode.php	/^                    $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel());$/;"	v
masked	includes/phpqrcode/phpqrcode.php	/^                $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel());$/;"	v
masked	includes/phpqrcode/phpqrcode.php	/^            $masked = array_fill(0, $width, str_repeat("\\0", $width));$/;"	v
masks	form_detail.php	/^                                                $masks = RGFormsModel::get_input_masks();$/;"	v
masks	forms_model.php	/^        $masks = array($/;"	v
match_count	common.php	/^        $match_count = 0;$/;"	v
match_count	forms_model.php	/^            $match_count = 0;$/;"	v
match_count	forms_model.php	/^        $match_count = 0;$/;"	v
match_file_extension	common.php	/^	public static function match_file_extension( $file_name, $extensions ) {$/;"	f
matched_card	common.php	/^                $matched_card = $card;$/;"	v
matched_card	common.php	/^            $matched_card = false;$/;"	v
matched_card	common.php	/^        $matched_card = false;$/;"	v
matches	common.php	/^        $matches = array();$/;"	v
matches_card_type	common.php	/^    private static function matches_card_type($number, $card){$/;"	f
matches_length	common.php	/^                $matches_length = true;$/;"	v
matches_length	common.php	/^        $matches_length = false;$/;"	v
matches_operation	forms_model.php	/^    public static function matches_operation($val1, $val2, $operation){$/;"	f
matches_prefix	common.php	/^                $matches_prefix = true;$/;"	v
matches_prefix	common.php	/^        $matches_prefix = false;$/;"	v
max	common.php	/^        $max = $field["rangeMax"];$/;"	v
max	form_display.php	/^                $max = floatval($field["id"]);$/;"	v
max	form_display.php	/^        $max = 0;$/;"	v
max	includes/addon/class-gf-results.php	/^                                $max                = max(array($max, $results_for_choice));$/;"	v
max	includes/addon/class-gf-results.php	/^                                $max = max(array($max, $results[$choice['value']]));$/;"	v
max	includes/addon/class-gf-results.php	/^                        $max       = 0;$/;"	v
max	js/jquery.textareaCounter.plugin.js	/^				max: maxCharacters,$/;"	p	class:countByCharacters.getInfo.info
maxCharacterSize	js/jquery.textareaCounter.plugin.js	/^			maxCharacterSize: -1,$/;"	p	class:fn.textareaCount.defaults
maxFileAge	includes/upload.php	/^        $maxFileAge         = 5 * 3600; \/\/ Temp file age in seconds$/;"	v
maxRow	common.php	/^                $maxRow = intval(rgar($field, "maxRows"));$/;"	v
maxSize	includes/phpqrcode/phpqrcode.php	/^                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE \/ (count($tab)+2*$this->margin));$/;"	v
max_chars	common.php	/^                $max_chars = "";$/;"	v
max_execution_time	includes/webapi/webapi.php	/^                    $max_execution_time = 5;$/;"	v
max_field_length	notification.php	/^    private static function get_field_values($i, $form, $field_id, $selected_value, $max_field_length = 16){$/;"	v
max_files	common.php	/^                    $max_files = isset($field["maxFiles"]) && $field["maxFiles"] > 0 ? $field["maxFiles"]: 0;$/;"	v
max_hour	form_display.php	/^                            $max_hour = rgar($field, "timeFormat") == "24" ? 23 : 12;$/;"	v
max_id	form_display.php	/^        $max_id = self::get_max_field_id($form);$/;"	v
max_label_size	common.php	/^    public static function insert_field_variable($field, $max_label_size=40, $args=""){$/;"	v
max_label_size	common.php	/^    public static function insert_post_content_variables($fields, $element_id, $callback, $max_label_size=25){$/;"	v
max_length	common.php	/^                    $max_length = "maxlength='{$field["maxLength"]}'";$/;"	v
max_length	common.php	/^        $max_length = "";$/;"	v
max_length	form_display.php	/^            $max_length = rgar($field,"maxLength");$/;"	v
max_length	forms_model.php	/^        $max_length = GFORMS_MAX_FIELD_LENGTH;$/;"	v
max_upload_size	common.php	/^                $max_upload_size = ! IS_ADMIN && isset($field["maxFileSize"]) && $field["maxFileSize"] > 0 ? $field["maxFileSize"] * 1048576: wp_max_upload_size();$/;"	v
max_upload_size	form_detail.php	/^                                    <input type="text" id="field_max_file_size" size="10" placeholder="<?php $max_upload_size = wp_max_upload_size() \/ 1048576; echo $max_upload_size; ?>MB"\/>$/;"	v
max_upload_size_in_bytes	form_display.php	/^								$max_upload_size_in_bytes = isset($field["maxFileSize"]) && $field["maxFileSize"] > 0 ? $field["maxFileSize"] * 1048576: wp_max_upload_size();$/;"	v
max_upload_size_in_bytes	includes/upload.php	/^		$max_upload_size_in_bytes = isset($field["maxFileSize"]) && $field["maxFileSize"] > 0 ? $field["maxFileSize"] * 1048576 : wp_max_upload_size();$/;"	v
max_upload_size_in_mb	form_display.php	/^								$max_upload_size_in_mb = $max_upload_size_in_bytes \/ 1048576;$/;"	v
max_upload_size_in_mb	includes/upload.php	/^		$max_upload_size_in_mb    = $max_upload_size_in_bytes \/ 1048576;$/;"	v
maxbits	includes/phpqrcode/phpqrcode.php	/^            $maxbits = $maxwords * 8;$/;"	v
maximumWords	includes/phpqrcode/phpqrcode.php	/^        public static function maximumWords($mode, $version)$/;"	f
maxsize	includes/phpqrcode/phpqrcode.php	/^            $maxsize = QRspec::maximumWords($mode, $version);$/;"	v
maxwords	includes/phpqrcode/phpqrcode.php	/^            $maxwords = QRspec::getDataLength($this->version, $this->level);$/;"	v
maybeMakeResizable	js/gf_field_filter.js	/^    function maybeMakeResizable () {$/;"	f
maybe_add_leading_zero	common.php	/^    public static function maybe_add_leading_zero($value){$/;"	f
maybe_decode_json	includes/addon/class-gf-addon.php	/^    protected static function maybe_decode_json($value) {$/;"	f
maybe_export	export.php	/^    public static function maybe_export(){$/;"	f
maybe_import_forms	gravityforms.php	/^    private static function maybe_import_forms()$/;"	f
maybe_import_theme_forms	gravityforms.php	/^    private static function maybe_import_theme_forms(){$/;"	f
maybe_lock_object	includes/locking/class-gf-locking.php	/^    public function maybe_lock_object($is_edit_page) {$/;"	f
maybe_output_gf_vars	common.php	/^    public static function maybe_output_gf_vars() {$/;"	f
maybe_populate_keys	gravityforms.php	/^    private static function maybe_populate_keys(){$/;"	f
maybe_process_callback	includes/addon/class-gf-payment-addon.php	/^    public function maybe_process_callback() {$/;"	f
maybe_process_confirmation_list_action	form_settings.php	/^    public static function maybe_process_confirmation_list_action() {$/;"	f
maybe_process_feed	includes/addon/class-gf-feed-addon.php	/^    public function maybe_process_feed( $entry, $form ) {$/;"	f
maybe_process_form	gravityforms.php	/^    public static function maybe_process_form(){$/;"	f
maybe_process_notification_list_action	notification.php	/^    public static function maybe_process_notification_list_action() {$/;"	f
maybe_save_app_settings	includes/addon/class-gf-addon.php	/^    protected function maybe_save_app_settings(){$/;"	f
maybe_save_feed_settings	includes/addon/class-gf-feed-addon.php	/^    protected function maybe_save_feed_settings( $feed_id, $form_id ){$/;"	f
maybe_save_form_settings	includes/addon/class-gf-addon.php	/^    public function maybe_save_form_settings($form){$/;"	f
maybe_save_plugin_settings	includes/addon/class-gf-addon.php	/^    protected function maybe_save_plugin_settings(){$/;"	f
maybe_trim_input	forms_model.php	/^    public static function maybe_trim_input($value, $form_id, $field){$/;"	f
maybe_uninstall	includes/addon/class-gf-addon.php	/^    public function maybe_uninstall(){$/;"	f
maybe_update_results_cache_meta	includes/webapi/webapi.php	/^        public function maybe_update_results_cache_meta($form) {$/;"	f
media	common.php	/^                $media = get_post($media_id);$/;"	v
media	includes/addon/class-gf-addon.php	/^                $media =  isset($style["media"]) ? $style["media"] : "all";$/;"	v
media	includes/addon/class-gf-addon.php	/^            $media =  isset($style["media"]) ? $style["media"] : "all";$/;"	v
media_handle_upload	forms_model.php	/^    private static function media_handle_upload($url, $post_id, $post_data = array()) {$/;"	f
media_id	common.php	/^                $media_id = $post_images[$input_id];$/;"	v
media_id	forms_model.php	/^                $media_id = self::media_handle_upload($image["url"], $post_id, $image_meta);$/;"	v
meets_conditional_logic	includes/addon/class-gf-feed-addon.php	/^    protected function has_feed( $form_id, $meets_conditional_logic = null ) {$/;"	v
member	common.php	/^            foreach($object as $member=>$data)$/;"	v
members_get_capabilities	gravityforms.php	/^    public static function members_get_capabilities( $caps ) {$/;"	f
members_get_capabilities	includes/addon/class-gf-addon.php	/^    public function members_get_capabilities($caps) {$/;"	f
menu_class	gravityforms.php	/^				$menu_class = rgar($menu_item, "menu_class");$/;"	v
menu_class	gravityforms.php	/^                    $menu_class = rgar($menu_item, "menu_class");$/;"	v
menu_item	gravityforms.php	/^                        $menu_item = $sub_menu_items[0];$/;"	v
menu_items	gravityforms.php	/^				$menu_items = apply_filters("gform_toolbar_menu", self::get_toolbar_menu_items($id), $id);$/;"	v
menu_items	gravityforms.php	/^		$menu_items = array();$/;"	v
menu_items	includes/addon/class-gf-addon.php	/^            $menu_items = $this->get_app_menu_items();$/;"	v
menu_items	includes/addon/class-gf-addon.php	/^        $menu_items = $this->get_app_menu_items();$/;"	v
mergeBitStream	includes/phpqrcode/phpqrcode.php	/^        public function mergeBitStream()$/;"	f
merge_legacy_notification	common.php	/^    private static function merge_legacy_notification($notification, $notification_data){$/;"	f
merge_tag	forms_model.php	/^        $merge_tag = self::get_field_merge_tag($form, rgar($array, $source_property));$/;"	v
merge_tags	common.php	/^        $merge_tags = array($/;"	v
merge_tags	common.php	/^        $merge_tags = array();$/;"	v
merge_tags	common.php	/^        $merge_tags = self::get_merge_tags($fields, $element_id, $hide_all_fields, $exclude, $args);$/;"	v
merged_capabilities	includes/addon/class-gf-results.php	/^                    $merged_capabilities                     = array_merge($existing_capabilities, $this->_capabilities);$/;"	v
merged_sub_menu_items	includes/addon/class-gf-results.php	/^                    $merged_sub_menu_items                   = array_merge($existing_sub_menu_items, $sub_menu_items);$/;"	v
message	common.php	/^                        $message = self::get_range_message($field);$/;"	v
message	common.php	/^            $message =  sprintf(__("Please enter a value between %s and %s.", "gravityforms"), "<strong>$min<\/strong>", "<strong>$max<\/strong>") ;$/;"	v
message	common.php	/^            $message = "";$/;"	v
message	common.php	/^            $message = $raw_response['body'];$/;"	v
message	common.php	/^            $message = __("Please enter a valid number", "gravityforms");$/;"	v
message	common.php	/^            $message = do_shortcode($message);$/;"	v
message	common.php	/^            $message = sprintf(__("Please enter a value greater than or equal to %s.", "gravityforms"), "<strong>$min<\/strong>");$/;"	v
message	common.php	/^            $message = sprintf(__("Please enter a value less than or equal to %s.", "gravityforms"), "<strong>$max<\/strong>");$/;"	v
message	common.php	/^        $message = "";$/;"	v
message	common.php	/^        $message = GFCommon::replace_variables(rgar($notification, "message"), $form, $lead, false, false, !rgar($notification, "disableAutoformat"), $message_format);$/;"	v
message	common.php	/^        $message = GFCommon::replace_variables(rgget("message", $form["autoResponder"]), $form, $lead, false, false, !rgget("disableAutoformat", $form["autoResponder"]), $message_format);$/;"	v
message	common.php	/^        $message = GFCommon::replace_variables(rgget("message", $form["notification"]), $form, $lead, false, false, !rgget("disableAutoformat", $form["notification"]), $message_format);$/;"	v
message	entry_list.php	/^                                $message =  isset($_GET["field_id"]) ?  __("This form does not have any entries in the trash matching the search criteria.", "gravityforms") : __("This form does not have any entries in the trash.", "gravityforms");$/;"	v
message	entry_list.php	/^                                $message = __("This form does not have any spam.", "gravityforms");$/;"	v
message	entry_list.php	/^                                $message = isset($_GET["field_id"]) ? __("This form does not have any entries matching the search criteria.", "gravityforms") : __("This form does not have any entries yet.", "gravityforms");$/;"	v
message	entry_list.php	/^                                $message = isset($_GET["field_id"]) ? __("This form does not have any starred entries matching the search criteria.", "gravityforms") : __("This form does not have any starred entries.", "gravityforms");$/;"	v
message	entry_list.php	/^                                $message = isset($_GET["field_id"]) ? __("This form does not have any unread entries matching the search criteria.", "gravityforms") : __("This form does not have any unread entries.", "gravityforms");$/;"	v
message	entry_list.php	/^                            $message = $filter == "trash" ? __("WARNING! This operation cannot be undone. Empty trash? \\'Ok\\' to empty trash. \\'Cancel\\' to abort.", "gravityforms") : __("WARNING! This operation cannot be undone. Permanently delete all spam? \\'Ok\\' to delete. \\'Cancel\\' to abort.", "gravityforms");$/;"	v
message	form_display.php	/^                                    $message = $field["dateType"] == "datepicker" ? sprintf(__("Please enter a valid date in the format (%s).", "gravityforms"), $format_name) : __("Please enter a valid date.", "gravityforms");$/;"	v
message	form_list.php	/^                    $message = __("You don't have adequate permissions to delete entries.", "gravityforms");$/;"	v
message	form_list.php	/^                    $message = __("You don't have adequate permissions to delete forms.", 'gravityforms');$/;"	v
message	form_list.php	/^                    $message = _n('%s form deleted.', '%s forms deleted.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                    $message = _n('Entries for %s form have been deleted.', 'Entries for %s forms have been deleted.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = __("You don't have adequate permissions to delete forms.", 'gravityforms');$/;"	v
message	form_list.php	/^                $message = __('Form deleted.', 'gravityforms');$/;"	v
message	form_list.php	/^                $message = _n('%s form has been marked as active.', '%s forms have been marked as active.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = _n('%s form has been marked as inactive.', '%s forms have been marked as inactive.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = _n('%s form moved to the trash.', '%s forms moved to the trash.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = _n('%s form restored.', '%s forms restored.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = _n('Views for %s form have been reset.', 'Views for %s forms have been reset.', $form_count, 'gravityforms');$/;"	v
message	form_list.php	/^                $message = sprintf($message, $form_count);$/;"	v
message	form_list.php	/^            $message = __('Form duplicated.', 'gravityforms');$/;"	v
message	form_list.php	/^            $message = __('Form moved to the trash.', 'gravityforms');$/;"	v
message	form_list.php	/^            $message = __('Form restored.', 'gravityforms');$/;"	v
message	gravityforms.php	/^            $message = sprintf(__("There is an update available for Gravity Forms. %sView Details%s %s", "gravityforms"), "<a href='admin.php?page=gf_update'>", "<\/a>", $auto_upgrade);$/;"	v
message	includes/addon/class-gf-addon.php	/^            $message = $this->plugin_message();$/;"	v
message	includes/addon/class-gf-addon.php	/^        $message = sprintf(__("Gravity Forms " . $this->_min_gravityforms_version . " is required. Activate it now or %spurchase it today!%s", "gravityforms"), "<a href='http:\/\/www.gravityforms.com'>", "<\/a>");$/;"	v
message	includes/addon/class-gf-addon.php	/^    protected function app_tab_page_header($tabs, $current_tab, $title, $message = ''){$/;"	v
message	includes/addon/class-gf-auto-upgrade.php	/^                $message     = $new_version . sprintf(__('%sRegister%s your copy of Gravity Forms to receive access to automatic upgrades and support. Need a license key? %sPurchase one now%s.', 'gravityforms'), '<a href="admin.php?page=gf_settings">', '<\/a>', '<a href="http:\/\/www.gravityforms.com">', '<\/a>') . '<\/div><\/td>';$/;"	v
message	includes/addon/class-gf-auto-upgrade.php	/^            $message = sprintf(__("Gravity Forms " . $this->_min_gravityforms_version . " is required. Activate it now or %spurchase it today!%s", "gravityforms"), "<a href='http:\/\/www.gravityforms.com'>", "<\/a>");$/;"	v
message	includes/addon/class-gf-feed-addon.php	/^        $message = call_user_func($this->_message_callback);$/;"	v
message	includes/locking/class-gf-locking.php	/^            $message = '<div class="gform-locked-message">$/;"	v
message	includes/locking/class-gf-locking.php	/^            $message = '<div class="gform-taken-over">$/;"	v
message	settings.php	/^            $message = "";$/;"	v
message	settings.php	/^            $message = $raw_response['body'];$/;"	v
message	settings.php	/^    public static function page_header($title = '', $message = ''){$/;"	v
message	update.php	/^                $message = __("There is a new version of Gravity Forms available.", "gravityforms");$/;"	v
message_callback	includes/addon/class-gf-feed-addon.php	/^        $message_callback      = array($this, "feed_list_message");$/;"	v
message_class	notification.php	/^        $message_class = $is_invalid_message ? "class='gfield_error'" : "";$/;"	v
message_format	common.php	/^        $message_format = apply_filters("gform_notification_format_{$form["id"]}", apply_filters("gform_notification_format", "html", "admin", $form, $lead), "admin", $form, $lead);$/;"	v
message_format	common.php	/^        $message_format = apply_filters("gform_notification_format_{$form["id"]}", apply_filters("gform_notification_format", "html", "user", $form, $lead), "user", $form, $lead);$/;"	v
message_format	common.php	/^        $message_format = rgempty("message_format", $notification) ? "html" : rgar($notification, "message_format");$/;"	v
messages	common.php	/^            $messages = self::$messages;$/;"	v
messages	common.php	/^        $messages = apply_filters('gform_admin_messages', $messages);$/;"	v
messages	common.php	/^    private static $messages = array();$/;"	v
messages	common.php	/^    public static function display_admin_message($errors = false, $messages = false) {$/;"	v
messages_id	common.php	/^                    $messages_id = "gform_multifile_messages_{$form_id}_{$id}";$/;"	v
meta	forms_model.php	/^                    $meta = rgar($entry_meta, $key);$/;"	v
meta	forms_model.php	/^                $meta = self::trim_conditional_logic_values_from_element($meta, $form, $updated);$/;"	v
meta	forms_model.php	/^            $meta = array_merge($meta, $_entry_meta[$form_id]);$/;"	v
meta	forms_model.php	/^        $meta = array();$/;"	v
meta	forms_model.php	/^        $meta = maybe_serialize(stripslashes_deep($columns) );$/;"	v
meta	forms_model.php	/^        $meta = self::get_form_meta($form_id);$/;"	v
meta	includes/addon/class-gf-feed-addon.php	/^                $meta = array();$/;"	v
meta	includes/addon/class-gf-feed-addon.php	/^            $meta = gform_get_meta( $entry['id'], 'processed_feeds' );$/;"	v
meta	includes/addon/class-gf-feed-addon.php	/^        $meta = json_encode($meta);$/;"	v
meta_exists	forms_model.php	/^    $meta_exists = gform_get_meta($entry_id, $meta_key) !== false;$/;"	v
meta_filter	forms_model.php	/^    $meta_filter = empty($meta_key) ? "" : $wpdb->prepare("AND meta_key=%s", $meta_key);$/;"	v
meta_index	forms_model.php	/^            $meta_index = 0;$/;"	v
meta_key	forms_model.php	/^function gform_delete_meta($entry_id, $meta_key=""){$/;"	v
meta_key	includes/addon/class-gf-addon.php	/^        foreach( $entry_meta as $meta_key => $meta ) {$/;"	v
meta_key_select	forms_model.php	/^    $meta_key_select = join(",", $meta_key_select_array);$/;"	v
meta_key_select_array	forms_model.php	/^    $meta_key_select_array = array();$/;"	v
meta_keys	forms_model.php	/^        $meta_keys = array_keys($entry_meta);$/;"	v
meta_name	forms_model.php	/^                    $meta_name = $field["postCustomFieldName"];$/;"	v
meta_name	forms_model.php	/^        foreach($post_data["post_custom_fields"] as $meta_name => $meta_value) {$/;"	v
meta_name	forms_model.php	/^    public static function update_form_meta( $form_id, $form_meta, $meta_name = 'display_meta' ) {$/;"	v
meta_table_name	forms_model.php	/^        $meta_table_name =  self::get_meta_table_name();$/;"	v
meta_table_name	forms_model.php	/^        $meta_table_name = self::get_meta_table_name();$/;"	v
meta_table_name	gravityforms.php	/^        $meta_table_name =  GFFormsModel::get_meta_table_name();$/;"	v
meta_table_name	gravityforms.php	/^        $meta_table_name = RGFormsModel::get_meta_table_name();$/;"	v
meta_value	forms_model.php	/^                $meta_value = array($meta_value);$/;"	v
meta_value	forms_model.php	/^         $meta_value = "0";$/;"	v
meta_value	forms_model.php	/^    $meta_value = $value == null ? false : maybe_unserialize($value);$/;"	v
meta_value	forms_model.php	/^    $meta_value = maybe_serialize($meta_value);$/;"	v
meta_value_array	forms_model.php	/^    $meta_value_array = $results;$/;"	v
meta_value_array	forms_model.php	/^    $meta_value_array = array();$/;"	v
method	includes/webapi/webapi.php	/^            $method        = strtoupper($_SERVER['REQUEST_METHOD']);$/;"	v
method	includes/webapi/webapi.php	/^            $method  = strtoupper($_SERVER['REQUEST_METHOD']);$/;"	v
method_is_overridden	includes/addon/class-gf-addon.php	/^    protected final function method_is_overridden( $method_name, $base_class = 'GFAddOn' ) {$/;"	f
middle	common.php	/^        $middle = intval($max_length \/ 2);$/;"	v
min	common.php	/^        $min = $field["rangeMin"];$/;"	v
minDemerit	includes/phpqrcode/phpqrcode.php	/^                    $minDemerit = $demerit;$/;"	v
minDemerit	includes/phpqrcode/phpqrcode.php	/^            $minDemerit = PHP_INT_MAX;$/;"	v
min_cap	gravityforms.php	/^            $min_cap = "gform_full_access";$/;"	v
min_cap	gravityforms.php	/^        $min_cap = GFCommon::current_user_can_which(GFCommon::all_caps());$/;"	v
min_cap	includes/addon/class-gf-addon.php	/^            $min_cap = "gform_full_access";$/;"	v
min_cap	includes/addon/class-gf-addon.php	/^        $min_cap         = GFCommon::current_user_can_which($this->_capabilities_app_menu);$/;"	v
min_gravityforms_version	includes/addon/class-gf-addon.php	/^            $min_gravityforms_version = $this->_min_gravityforms_version;$/;"	v
min_hour	form_display.php	/^                            $min_hour = rgar($field, "timeFormat") == "24" ? 0 : 1;$/;"	v
min_import_version	export.php	/^    private static $min_import_version = "1.3.12.3";$/;"	v
minute	common.php	/^                    $minute = esc_attr($matches[2]);$/;"	v
minute	common.php	/^                    $minute = esc_attr($value[1]);$/;"	v
minute	form_display.php	/^                            $minute = $value[1];$/;"	v
minute	forms_model.php	/^                $minute = empty($value[1]) ? "0" : strip_tags($value[1]);$/;"	v
minute_tabindex	common.php	/^                $minute_tabindex = self::get_tabindex();$/;"	v
missing_count	export.php	/^                        $missing_count = intval($field_rows[$field_id]) - count($list);$/;"	v
mm	includes/phpqrcode/phpqrcode.php	/^        public $mm;                  \/\/ Bits per symbol$/;"	v
mode	common.php	/^    public static function prepare_post_category_value($value, $field, $mode = 'entry_detail') {$/;"	v
mode	entry_detail.php	/^        $mode = empty($_POST["screen_mode"]) ? "view" : $_POST["screen_mode"];$/;"	v
mode	form_display.php	/^        if( $mode == 'render' ) {$/;"	v
mode	form_display.php	/^    public static function is_last_page( $form, $mode = 'submit' ) {$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^                $mode = $this->identifyMode($p);$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^                $mode = $this->identifyMode(0);$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^                $mode = explode(',', $mode);$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^                $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint);$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^            $mode = $this->identifyMode($p);$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^            $this->mode = $mode;$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^        public $mode;$/;"	v
mode	includes/phpqrcode/phpqrcode.php	/^        public static function tcpdfBarcodeArray($code, $mode = 'QR,L', $tcPdfVersion = '4.5.037')$/;"	v
mode	recaptchalib.php	/^	$mode=MCRYPT_MODE_CBC;$/;"	v
modeHint	includes/phpqrcode/phpqrcode.php	/^            $this->modeHint = $modeHint;$/;"	v
modeHint	includes/phpqrcode/phpqrcode.php	/^        public $modeHint;$/;"	v
modify_admin_title	gravityforms.php	/^    public static function modify_admin_title( $admin_title, $title ) {$/;"	f
modify_post	includes/addon/class-gf-payment-addon.php	/^    protected function modify_post( $post_id, $action ) {$/;"	f
modnn	includes/phpqrcode/phpqrcode.php	/^        public function modnn($x)$/;"	f
money	currency.php	/^        $money = number_format($number, $this->currency["decimals"], $this->currency["decimal_separator"], $this->currency["thousand_separator"]);$/;"	v
month	common.php	/^            $month = str_pad($i, 2, "0", STR_PAD_LEFT);$/;"	v
month_dropdown	common.php	/^                    $month_dropdown = "<div class='gfield_date_dropdown_month ginput_date_dropdown' id='gfield_dropdown_date_month' style='display:$dropdown_display'>" . self::get_month_dropdown("","","","","disabled='disabled'") . "<\/div>";$/;"	v
month_field	common.php	/^                    $month_field = "<div class='gfield_date_month ginput_date' id='gfield_input_date_month' style='display:$datefield_display'><input name='ginput_month' type='text' disabled='disabled'\/><label>" . __("MM", "gravityforms") . "<\/label><\/div>";$/;"	v
month_start	form_display.php	/^                $month_start = gmdate("Y-m-1");$/;"	v
months	includes/addon/class-gf-payment-addon.php	/^        $months = array(__("Jan", "gravityforms"), __("Feb", "gravityforms"), __("Mar", "gravityforms"), __("Apr", "gravityforms") ,__("May", "gravityforms"), __("Jun", "gravityforms"), __("Jul", "gravityforms"), __("Aug", "gravityforms"), __("Sep", "gravityforms"), __("Oct", "gravityforms"), __("Nov", "gravityforms"), __("Dec", "gravityforms"));$/;"	v
more_remaining	includes/addon/class-gf-results.php	/^                    $more_remaining = false;$/;"	v
more_remaining	includes/addon/class-gf-results.php	/^                $more_remaining = true;$/;"	v
more_remaining	includes/addon/class-gf-results.php	/^            $more_remaining = false;$/;"	v
move_temp_file	forms_model.php	/^    private static function move_temp_file($form_id, $tempfile_info){$/;"	f
mtd_transform_entries_data	includes/webapi/webapi.php	/^        public function mtd_transform_entries_data($output, $form_id) {$/;"	f
mtd_transform_entry_data	includes/webapi/webapi.php	/^        public static function mtd_transform_entry_data($entry) {$/;"	f
mtd_transform_forms_data	includes/webapi/webapi.php	/^        public function mtd_transform_forms_data($forms) {$/;"	f
mu_drop_tables	forms_model.php	/^    public static function mu_drop_tables($drop_tables) {$/;"	f
multiple_files	common.php	/^                $multiple_files = rgar($field, "multipleFiles");$/;"	v
multiple_files	forms_model.php	/^        $multiple_files = rgar($field, "multipleFiles");$/;"	v
multiple_rows	includes/addon/class-gf-results.php	/^                    $multiple_rows = rgar($field, "gsurveyLikertEnableMultipleRows") ? true : false;$/;"	v
multiplier	common.php	/^            $multiplier = $multiplier == 1 ? 2 : 1;$/;"	v
multiplier	common.php	/^        $multiplier = 1;$/;"	v
multiselect	js/forms.js	/^    "multiselect" :     ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .enable_enhanced_ui_setting, .label_setting, .admin_label_setting, .size_setting, .choices_setting, .rules_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
my_parent	form_detail.php	/^                    $my_parent = $my_parent->parent;$/;"	v
my_parent	form_detail.php	/^                    $my_parent = get_category($my_parent);$/;"	v
my_parent	form_detail.php	/^                while( $my_parent = array_pop($my_parents) ) {$/;"	v
my_parents	form_detail.php	/^                $my_parents = array();$/;"	v
mysack.onError	entry_detail.php	/^                    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while deleting field.", "gravityforms")) ?>' )};$/;"	j
mysack.onError	entry_list.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while setting lead property", "gravityforms")) ?>' )};$/;"	j
mysack.onError	export.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while selecting a form", "gravityforms")) ?>' )};$/;"	j
mysack.onError	form_list.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating form", "gravityforms")) ?>' )};$/;"	j
mysack.onError	form_settings.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating confirmation", "gravityforms")) ?>' )};$/;"	j
mysack.onError	js.php	/^        mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while deleting field.", "gravityforms")) ?>' )};$/;"	j
mysack.onError	js.php	/^        mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while saving form", "gravityforms")) ?>' )};$/;"	j
mysack.onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while adding field", "gravityforms")) ?>' )};$/;"	j
mysack.onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while changing input type", "gravityforms")) ?>' )};$/;"	j
mysack.onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while duplicating field", "gravityforms")) ?>' )};$/;"	j
mysack.onError	notification.php	/^            mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating notification", "gravityforms")) ?>' )};$/;"	j
n	includes/addon/class-gf-results.php	/^                    $n = 100;$/;"	v
n	js/jquery.maskedinput-1.3.1.min.js	/^(function(e){function t(){var e=document.createElement("input"),t="onpaste";return e.setAttribute(t,""),"function"==typeof e[t]?"paste":"input"}var n,a=t()+".mask",r=navigator.userAgent,i=\/iphone\/i.test(r),o=\/android\/i.test(r);e.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},dataName:"rawMaskFn",placeholder:"_"},e.fn.extend({caret:function(e,t){var n;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&(n=this.createTextRange(),n.collapse(!0),n.moveEnd("character",t),n.moveStart("character",e),n.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(n=document.selection.createRange(),e=0-n.duplicate().moveStart("character",-1e5),t=e+n.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(t,r){var c,l,s,u,f,h;return!t&&this.length>0?(c=e(this[0]),c.data(e.mask.dataName)()):(r=e.extend({placeholder:e.mask.placeholder,completed:null},r),l=e.mask.definitions,s=[],u=h=t.length,f=null,e.each(t.split(""),function(e,t){"?"==t?(h--,u=e):l[t]?(s.push(RegExp(l[t])),null===f&&(f=s.length-1)):s.push(null)}),this.trigger("unmask").each(function(){function c(e){for(;h>++e&&!s[e];);return e}function d(e){for(;--e>=0&&!s[e];);return e}function m(e,t){var n,a;if(!(0>e)){for(n=e,a=c(t);h>n;n++)if(s[n]){if(!(h>a&&s[n].test(R[a])))break;R[n]=R[a],R[a]=r.placeholder,a=c(a)}b(),x.caret(Math.max(f,e))}}function p(e){var t,n,a,i;for(t=e,n=r.placeholder;h>t;t++)if(s[t]){if(a=c(t),i=R[t],R[t]=n,!(h>a&&s[a].test(i)))break;n=i}}function g(e){var t,n,a,r=e.which;8===r||46===r||i&&127===r?(t=x.caret(),n=t.begin,a=t.end,0===a-n&&(n=46!==r?d(n):a=c(n-1),a=46===r?c(a):a),k(n,a),m(n,a-1),e.preventDefault()):27==r&&(x.val(S),x.caret(0,y()),e.preventDefault())}function v(t){var n,a,i,l=t.which,u=x.caret();t.ctrlKey||t.altKey||t.metaKey||32>l||l&&(0!==u.end-u.begin&&(k(u.begin,u.end),m(u.begin,u.end-1)),n=c(u.begin-1),h>n&&(a=String.fromCharCode(l),s[n].test(a)&&(p(n),R[n]=a,b(),i=c(n),o?setTimeout(e.proxy(e.fn.caret,x,i),0):x.caret(i),r.completed&&i>=h&&r.completed.call(x))),t.preventDefault())}function k(e,t){var n;for(n=e;t>n&&h>n;n++)s[n]&&(R[n]=r.placeholder)}function b(){x.val(R.join(""))}function y(e){var t,n,a=x.val(),i=-1;for(t=0,pos=0;h>t;t++)if(s[t]){for(R[t]=r.placeholder;pos++<a.length;)if(n=a.charAt(pos-1),s[t].test(n)){R[t]=n,i=t;break}if(pos>a.length)break}else R[t]===a.charAt(pos)&&t!==u&&(pos++,i=t);return e?b():u>i+1?(x.val(""),k(0,h)):(b(),x.val(x.val().substring(0,i+1))),u?t:f}var x=e(this),R=e.map(t.split(""),function(e){return"?"!=e?l[e]?r.placeholder:e:void 0}),S=x.val();x.data(e.mask.dataName,function(){return e.map(R,function(e,t){return s[t]&&e!=r.placeholder?e:null}).join("")}),x.attr("readonly")||x.one("unmask",function(){x.unbind(".mask").removeData(e.mask.dataName)}).bind("focus.mask",function(){clearTimeout(n);var e;S=x.val(),e=y(),n=setTimeout(function(){b(),e==t.length?x.caret(0,e):x.caret(e)},10)}).bind("blur.mask",function(){y(),x.val()!=S&&x.change()}).bind("keydown.mask",g).bind("keypress.mask",v).bind(a,function(){setTimeout(function(){var e=y(!0);x.caret(e),r.completed&&e==x.val().length&&r.completed.call(x)},0)}),y()}))}})})(jQuery);/;"	v
n	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:r
n	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f
name	common.php	/^        		$name = substr($key, 0, strpos($key,"\/"));$/;"	v
name	common.php	/^                                $name = $field["label"];$/;"	v
name	common.php	/^                    $name = $prefix;$/;"	v
name	common.php	/^            $name = RGFormsModel::get_choice_text($option, $name);$/;"	v
name	common.php	/^        $name = empty($from_name) ? $from : $from_name;$/;"	v
name	form_detail.php	/^        $name = ( $name_override ? $name_override : $pad . ' ' . $cat->name );$/;"	v
name	form_settings.php	/^            $name  = $confirmation["name"];$/;"	v
name	form_settings.php	/^        \/\/css class name$/;"	c
name	forms_model.php	/^        $name = basename($url);$/;"	v
name	forms_model.php	/^        $name = trim( substr( $name, 0, -(1 + strlen($name_parts['extension'])) ) );$/;"	v
name	includes/addon/class-gf-addon.php	/^	 * @param string $class - The class name$/;"	c
name	includes/addon/class-gf-addon.php	/^                $name = str_replace( $prefix, '', $name );$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name          = '' . esc_attr( $field['name'] );$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name = $prefix;$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name = $reflector->getDeclaringClass()->getName();$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name = '' . esc_attr($field["name"]);$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name = esc_attr($field["name"]);$/;"	v
name	includes/addon/class-gf-addon.php	/^        $name = rgar($entry,$field_id);$/;"	v
name	includes/addon/class-gf-addon.php	/^        foreach( $feed['meta'] as $name => $value ) {$/;"	v
name	includes/addon/class-gf-results.php	/^                                        foreach($filter_ui as $name => $filter){$/;"	v
name	js/forms.js	/^    "name" :            ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .name_format_setting, .rules_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
name	notification.php	/^        $name = rgar($new_notification, "name");$/;"	v
name	settings.php	/^                        $name = $tab["label"];$/;"	v
name	tooltips.php	/^    "form_css_class" => "<h6>" . __("Form CSS Class Name", "gravityforms") . "<\/h6>" . __("Enter the CSS class name you would like to use in order to override the default styles for this form.", "gravityforms"),$/;"	c
name	tooltips.php	/^    "form_field_css_class" => "<h6>" . __("CSS Class Name", "gravityforms") . "<\/h6>" . __("Enter the CSS class name you would like to use in order to override the default styles for this field.", "gravityforms"),$/;"	c
name_override	form_detail.php	/^    private static function _cat_row( $category, $level, &$output, $name_override = false ) {$/;"	v
name_parts	forms_model.php	/^        $name_parts = pathinfo($name);$/;"	v
names	gravityforms.php	/^    $names = explode("\/", $name);$/;"	v
negative	currency.php	/^            $negative = "-";$/;"	v
negative	currency.php	/^        $negative = "";$/;"	v
newFrame	includes/phpqrcode/phpqrcode.php	/^        public static function newFrame($version)$/;"	f
newFromBytes	includes/phpqrcode/phpqrcode.php	/^        public static function newFromBytes($size, $data)$/;"	f
newFromNum	includes/phpqrcode/phpqrcode.php	/^        public static function newFromNum($bits, $num)$/;"	f
new_array	export.php	/^        $new_array = array();$/;"	v
new_array	includes/api.php	/^        $new_array = array();$/;"	v
new_avatar	includes/addon/class-gf-payment-addon.php	/^            $new_avatar = $this->note_avatar();$/;"	v
new_entry	includes/webapi/webapi.php	/^            $new_entry = array();$/;"	v
new_file	forms_model.php	/^        $new_file = $uploads['path'] . "\/$filename";$/;"	v
new_form	gravityforms.php	/^    public static function new_form(){$/;"	f
new_id	forms_model.php	/^        $new_id = self::insert_form($title);$/;"	v
new_id	notification.php	/^        $new_id = uniqid();$/;"	v
new_name	form_settings.php	/^                $new_name = $name . " - Copy $count";$/;"	v
new_name	form_settings.php	/^            $new_name =  $name . " - Copy 1";$/;"	v
new_name	notification.php	/^            $new_name = $name . " - Copy $count";$/;"	v
new_name	notification.php	/^        $new_name =  $name . " - Copy 1";$/;"	v
new_notification	notification.php	/^        $new_notification = $form['notifications'][$notification_id];$/;"	v
new_version	gravityforms.php	/^            $new_version = version_compare(GFCommon::$version, $version_info["version"], '<') ? __('There is a new version of Gravity Forms available.', 'gravityforms') .' <a class="thickbox" title="Gravity Forms" href="plugin-install.php?tab=plugin-information&plugin=gravityforms&TB_iframe=true&width=640&height=808">'. sprintf(__('View version %s Details', 'gravityforms'), $version_info["version"]) . '<\/a>. ' : '';$/;"	v
new_version	includes/addon/class-gf-auto-upgrade.php	/^                $new_version = version_compare($this->_version, $version_info["version"], '<') ? __("There is a new version of {$title} available.", 'gravityforms') . " <a class='thickbox' title='{$title}' href='plugin-install.php?tab=plugin-information&plugin=" . $this->_slug . "&TB_iframe=true&width=640&height=808'>" . sprintf(__('View version %s Details', 'gravityforms'), $version_info["version"]) . '<\/a>. ' : '';$/;"	v
next	includes/phpqrcode/phpqrcode.php	/^        public function next()$/;"	f
next_button	form_display.php	/^                $next_button = apply_filters("gform_next_button", $next_button, $form);$/;"	v
next_button	form_display.php	/^                $next_button = apply_filters("gform_next_button_{$form["id"]}", $next_button, $form);$/;"	v
next_button	form_display.php	/^                $next_button = self::get_form_button($form["id"], "gform_next_button_{$form["id"]}_{$field["id"]}", $field["nextButton"], __("Next", "gravityforms"), "gform_next_button", __("Next Page", "gravityforms"), $field["pageNumber"]);$/;"	v
next_button_logic	form_display.php	/^            $next_button_logic = isset($field["nextButton"]) && isset($field["nextButton"]["conditionalLogic"]) ? $field["nextButton"]["conditionalLogic"] : null;$/;"	v
next_class	form_display.php	/^                        $next_class = $step_number - 1 == $current_page ? " gf_step_next" : "";$/;"	v
next_page	form_display.php	/^        $next_page = $current_page + 1;$/;"	v
next_page	form_display.php	/^        $next_page = $next_page > self::get_max_page_number($form) ? 0 : $next_page;$/;"	v
next_pos	entry_detail.php	/^                $next_pos = false;$/;"	v
next_pos	entry_detail.php	/^            $next_pos = $position;$/;"	v
next_pos	entry_detail.php	/^        $next_pos = !rgblank($position) && $position < $total_count - 1 ? $position + 1 : false;$/;"	v
nl2br	form_display.php	/^            $nl2br = rgar($form["confirmation"],"disableAutoformat") ? false : true;$/;"	v
nn	includes/phpqrcode/phpqrcode.php	/^        public $nn;                  \/\/ Symbols per block (= (1<<mm)-1)$/;"	v
no_admin	common.php	/^        $no_admin = in_array("noadmin", $options_array);$/;"	v
no_conflict_mode	gravityforms.php	/^    private static function no_conflict_mode(&$wp_objects, $wp_required_objects, $gf_required_objects, $type="scripts"){$/;"	f
no_conflict_mode_script	gravityforms.php	/^    public static function no_conflict_mode_script(){$/;"	f
no_conflict_mode_style	gravityforms.php	/^    public static function no_conflict_mode_style(){$/;"	f
no_hidden	common.php	/^        $no_hidden = in_array("nohidden", $options_array);$/;"	v
no_item_callback	includes/addon/class-gf-feed-addon.php	/^        $no_item_callback      = array($this, "feed_list_no_item_message");$/;"	v
no_items	includes/addon/class-gf-feed-addon.php	/^    function no_items() {$/;"	f
no_items	includes/addon/class-gf-payment-addon.php	/^    function no_items() {$/;"	f
no_items	notification.php	/^    function no_items(){$/;"	f
no_output_choice_attributes	includes/addon/class-gf-addon.php	/^            $no_output_choice_attributes = array( 'default_value', 'label', 'checked', 'value', 'type',$/;"	v
no_output_props	includes/addon/class-gf-addon.php	/^        $no_output_props = apply_filters( 'gaddon_no_output_field_properties',$/;"	v
nocache	common.php	/^            $nocache = $cache ? "" : "nocache=1"; \/\/disabling server side caching$/;"	v
node_name	xml.php	/^            $node_name = $is_associative ? $key : $child_node_name;$/;"	v
nodes	xml.php	/^        $nodes = array();$/;"	v
non_zero_results	includes/addon/class-gf-results.php	/^                    $non_zero_results = is_array($results) ? array_filter($results) : $results;$/;"	v
nonces	gravityforms.php	/^        $nonces = array();$/;"	v
nonces	gravityforms.php	/^        $nonces = self::get_addon_nonces();$/;"	v
note	includes/addon/class-gf-payment-addon.php	/^            $note = sprintf( __( '%s has been captured successfully. Amount: %s. Transaction Id: %s', 'gravityforms' ), $payment_name, $amount_formatted, $payment['transaction_id'] );$/;"	v
note	includes/addon/class-gf-payment-addon.php	/^            $note = sprintf( __( 'Subscription has been cancelled. Subscription Id: %s.', 'gravityforms' ), $entry['transaction_id'] );$/;"	v
note	includes/addon/class-gf-payment-addon.php	/^    public function cancel_subscription( $entry, $feed, $note = null ) {$/;"	v
note_avatar	includes/addon/class-gf-payment-addon.php	/^    public function note_avatar(){$/;"	f
note_button	entry_detail.php	/^                        $note_button = '<input type="submit" name="add_note" value="' . __("Add Note", "gravityforms") . '" class="button" style="width:auto;padding-bottom:2px;" onclick="jQuery(\\'#action\\').val(\\'add_note\\');"\/>';$/;"	v
note_type	forms_model.php	/^    public static function add_note($lead_id, $user_id, $user_name, $note, $note_type = "note"){$/;"	v
note_type	includes/addon/class-gf-payment-addon.php	/^    public function add_note( $entry_id, $note, $note_type = null ) {$/;"	v
notes	entry_detail.php	/^                                        $notes = RGFormsModel::get_lead_notes($lead["id"]);$/;"	v
notes	print-entry.php	/^                $notes = RGFormsModel::get_lead_notes($lead["id"]);$/;"	v
notes_avatar	includes/addon/class-gf-payment-addon.php	/^    public function notes_avatar($avatar, $note){$/;"	f
notes_count	entry_detail.php	/^            $notes_count = sizeof($notes);$/;"	v
notes_grid	entry_detail.php	/^    public static function notes_grid( $notes, $is_editable, $emails = null, $subject = '' ){$/;"	f
notes_table	forms_model.php	/^        $notes_table = self::get_lead_notes_table_name();$/;"	v
notification	common.php	/^                $notification = self::merge_legacy_notification($notification, $legacy_notification);$/;"	v
notification	common.php	/^            $notification = $form["notifications"][$notification_id];$/;"	v
notification	common.php	/^        $notification = apply_filters("gform_notification_{$form["id"]}", apply_filters("gform_notification", $notification, $form, $lead), $form, $lead);$/;"	v
notification	common.php	/^        $notification = self::prepare_admin_notification($form, $lead, $override_options);$/;"	v
notification	common.php	/^        $notification = self::prepare_user_notification($form, $lead, $override_options);$/;"	v
notification	gravityforms.php	/^                $notification = $form["notifications"][$notification_id];$/;"	v
notification	notification.php	/^                $notification = GFFormsModel::trim_conditional_logic_values_from_element($notification, $form);$/;"	v
notification	notification.php	/^            $notification = apply_filters( 'gform_pre_notification_save', apply_filters( "gform_pre_notification_save{$form['id']}", $notification, $form ), $form );$/;"	v
notification	notification.php	/^            $notification = array( 'isActive' => isset( $notification['isActive'] ) ? rgar( $notification, 'isActive') : true );$/;"	v
notification	notification.php	/^        $notification = !$notification_id ? array() : self::get_notification($form, $notification_id);$/;"	v
notification_button	notification.php	/^                    $notification_button = '<input class="button-primary" type="submit" value="' . $button_label . '" name="save"\/>';$/;"	v
notification_deleted	notification.php	/^                $notification_deleted = GFNotification::delete_notification($object_id, rgget('id'));$/;"	v
notification_duplicated	notification.php	/^                $notification_duplicated = GFNotification::duplicate_notification($object_id, rgget('id'));$/;"	v
notification_edit_page	notification.php	/^    public static function notification_edit_page($form_id, $notification_id) {$/;"	f
notification_events	notification.php	/^        $notification_events = apply_filters("gform_notification_events", array("form_submission" => __("Form is submitted", "gravityforms")));$/;"	v
notification_id	forms_model.php	/^            $notification_id = uniqid();$/;"	v
notification_id	notification.php	/^                $notification_id = uniqid();$/;"	v
notification_id	notification.php	/^            $notification_id = rgpost("gform_notification_id");$/;"	v
notification_id	notification.php	/^        $notification_id = rgget("nid");$/;"	v
notification_list_page	notification.php	/^    public static function notification_list_page($form_id) {$/;"	f
notification_page	form_settings.php	/^    public static function notification_page() {$/;"	f
notification_page	notification.php	/^    public static function notification_page() {$/;"	f
notification_table	notification.php	/^        $notification_table = new GFNotificationTable($form);$/;"	v
notification_to_type	notification.php	/^            $notification_to_type = "email";$/;"	v
notification_to_type	notification.php	/^        $notification_to_type = !rgempty("gform_notification_to_type") ? rgpost("gform_notification_to_type") : rgar($notification,"toType");$/;"	v
notification_ui_settings	notification.php	/^        $notification_ui_settings = self::get_notification_ui_settings($notification);$/;"	v
notifications	common.php	/^        $notifications = array();$/;"	v
notifications	common.php	/^        $notifications = self::get_notifications($action, $form);$/;"	v
notifications	common.php	/^        $notifications = self::get_notifications_to_send("form_submission", $form, $lead);$/;"	v
notifications	form_detail.php	/^                $notifications = array($default_notification["id"] => $default_notification);$/;"	v
notifications	forms_model.php	/^        $notifications = $meta["notifications"];$/;"	v
notifications	gravityforms.php	/^            $notifications = GFFormsModel::trim_conditional_logic_values($notifications, $form, $notifications_updated);$/;"	v
notifications	gravityforms.php	/^            $notifications = GFFormsModel::unserialize($result["notifications"]);$/;"	v
notifications	gravityforms.php	/^        $notifications = json_decode(rgpost('notifications'));$/;"	v
notifications_to_send	common.php	/^        $notifications_to_send = array();$/;"	v
notifications_updated	gravityforms.php	/^            $notifications_updated = false;$/;"	v
now	form_display.php	/^            $now = current_time("timestamp");$/;"	v
nowrap_class	entry_list.php	/^                                $nowrap_class="entry_nowrap";$/;"	v
nroots	includes/phpqrcode/phpqrcode.php	/^        public $nroots;              \/\/ Number of generator roots = number of parity symbols$/;"	v
num	common.php	/^            $num = $number{$i} * $multiplier;$/;"	v
num	common.php	/^        $num = 0;$/;"	v
num	includes/phpqrcode/phpqrcode.php	/^            $num = (int)(($this->size + $m - 1) \/ $m);$/;"	v
num_parents	form_detail.php	/^                $num_parents = count($my_parents);$/;"	v
number	common.php	/^            $number = $currency->to_money( $number );$/;"	v
number	common.php	/^            $number = round($number, $rounding);$/;"	v
number	common.php	/^            $number = str_replace(",", "|", $number);$/;"	v
number	common.php	/^            $number = str_replace(".", ",", $number);$/;"	v
number	common.php	/^            $number = str_replace("|", ".", $number);$/;"	v
number	common.php	/^        $number = str_replace (' ', '', $number);$/;"	v
number	currency.php	/^            $number = $this->to_number($number);$/;"	v
number	currency.php	/^            $number = floatval(substr($number,1));$/;"	v
number	js/forms.js	/^    "number" :          ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .size_setting, .number_format_setting, .range_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_setting, .description_setting, .css_class_setting, .calculation_setting",$/;"	p	class:fieldSettings
numberFormat	js/gravityforms.js	/^    this.numberFormat = function(number, decimals, dec_point, thousands_sep, padded){$/;"	m	class:Currency
number_format	common.php	/^            $number_format = self::is_currency_decimal_dot() ? "decimal_dot" : "decimal_comma";$/;"	v
number_format	common.php	/^    public static function clean_number($number, $number_format=""){$/;"	v
number_format	common.php	/^    public static function is_numeric($value, $number_format=""){$/;"	v
number_format	form_display.php	/^        $number_format = $wp_locale->number_format['decimal_point'] == "," ? "decimal_comma" : "decimal_dot";$/;"	v
number_format	forms_model.php	/^        $number_format = $wp_locale->number_format['decimal_point'] == "," ? "decimal_comma" : "decimal_dot";$/;"	v
number_format	forms_model.php	/^        if(is_numeric($text) && $number_format == "decimal_comma"){$/;"	v
number_formats	form_display.php	/^        $number_formats = array();$/;"	v
numpad	recaptchalib.php	/^	$numpad = $block_size - (strlen ($val) % $block_size);$/;"	v
o	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:n
obj	forms_model.php	/^            $obj = @unserialize($string);$/;"	v
obj	forms_model.php	/^            $obj = json_decode($string, true);$/;"	v
obj	xml.php	/^        $obj = array();$/;"	v
object	xml.php	/^        $object = $this->unserialize_node($values, 0);$/;"	v
objectID	includes/locking/js/locking.js	/^    var objectID, objectType, strings, hasLock, lockUI, rejectionCountdown, rejectionRequestTimeout, lockRequestInProgress = false;$/;"	v
object_id	form_settings.php	/^        $object_id = rgpost('action_argument');$/;"	v
object_id	includes/locking/class-gf-locking.php	/^            $object_id = $received['objectID'];$/;"	v
object_id	includes/locking/class-gf-locking.php	/^        $object_id = rgget("object_id");$/;"	v
object_id	notification.php	/^        $object_id = rgpost('action_argument');$/;"	v
object_to_array	common.php	/^    public static function object_to_array($object){$/;"	f
object_type	includes/addon/class-gf-addon-locking.php	/^        $object_type = isset($config["object_type"]) ? $config["object_type"] : "";$/;"	v
object_type	includes/addon/class-gf-addon.php	/^		$object_type = "simple_condition_{$setting_name_root}";$/;"	v
odd_even	common.php	/^                        $odd_even = ( $colnum % 2 ) == 0 ? 'even' : 'odd';$/;"	v
odd_even	common.php	/^                    $odd_even = ($rownum % 2) == 0 ? "even" : "odd";$/;"	v
offset	export.php	/^        $offset = 0;$/;"	v
offset	forms_model.php	/^        $offset          = isset($paging["offset"]) ? $paging["offset"] : 0;$/;"	v
offset	includes/addon/class-gf-payment-addon.php	/^        $offset = $page_size * ($current_page - 1);$/;"	v
offset	includes/addon/class-gf-results.php	/^                    $offset    = 0;$/;"	v
offset	includes/addon/class-gf-results.php	/^                $offset = (int)rgar($data, "offset");$/;"	v
offset	includes/addon/class-gf-results.php	/^            $offset          = rgpost("offset");$/;"	v
offset	includes/addon/class-gf-results.php	/^            $offset      = 0;$/;"	v
offset	includes/webapi/webapi.php	/^                    $offset       = $page_size * ($current_page - 1);$/;"	v
offset	includes/webapi/webapi.php	/^                    $offset = isset($_GET["paging"]["offset"]) ? intval($_GET["paging"]["offset"]) : 0;$/;"	v
offset	includes/webapi/webapi.php	/^            $offset    = isset($_GET["paging"]["offset"]) ? strtolower($_GET["paging"]["offset"]) : 0;$/;"	v
onError	entry_detail.php	/^                    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while deleting field.", "gravityforms")) ?>' )};$/;"	j
onError	entry_list.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while setting lead property", "gravityforms")) ?>' )};$/;"	j
onError	export.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while selecting a form", "gravityforms")) ?>' )};$/;"	j
onError	form_list.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating form", "gravityforms")) ?>' )};$/;"	j
onError	form_settings.php	/^                mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating confirmation", "gravityforms")) ?>' )};$/;"	j
onError	js.php	/^        mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while deleting field.", "gravityforms")) ?>' )};$/;"	j
onError	js.php	/^        mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while saving form", "gravityforms")) ?>' )};$/;"	j
onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while adding field", "gravityforms")) ?>' )};$/;"	j
onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while changing input type", "gravityforms")) ?>' )};$/;"	j
onError	js.php	/^    mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while duplicating field", "gravityforms")) ?>' )};$/;"	j
onError	notification.php	/^            mysack.onError = function() { alert('<?php echo esc_js(__("Ajax error while updating notification", "gravityforms")) ?>' )};$/;"	j
on_click	common.php	/^                    $on_click = IS_ADMIN && RG_CURRENT_VIEW != "entry" ? "" : "onclick='gformAddListItem(this, {$maxRow})'";$/;"	v
onbeforeunload	form_settings.php	/^            window.onbeforeunload = function(){$/;"	j
onbeforeunload	notification.php	/^            window.onbeforeunload = function(){$/;"	j
onblur	common.php	/^                    $onblur = !IS_ADMIN ? 'if(jQuery(this).val().replace(" ", "") == "") { jQuery(this).val("' . $other_default_value . '"); }' : '';$/;"	v
onchange	common.php	/^                $onchange= "onchange='{$action}'";$/;"	v
onchange	common.php	/^                $onchange= rgar($field,"passwordStrengthEnabled") ? "onchange='{$action}'" : "";$/;"	v
onchange	common.php	/^        $onchange = empty($onchange) ? "InsertVariable('{$element_id}', '{$callback}');" : $onchange;$/;"	v
onchange	common.php	/^    public static function insert_calculation_variables($fields, $element_id, $onchange = '', $callback = '', $max_label_size=40) {$/;"	v
onclick	form_display.php	/^            $onclick = "onclick='jQuery(\\"#gform_target_page_number_{$form_id}\\").val(\\"{$target_page_number}\\"); jQuery(\\"#gform_{$form_id}\\").trigger(\\"submit\\",[true]); '";$/;"	v
onclick	form_display.php	/^            $onclick="onclick='if(window[\\"gf_submitting_{$form_id}\\"]){return false;}  $set_submitting '";$/;"	v
onclick	form_display.php	/^        $onclick="";$/;"	v
onclick	gravityforms.php	/^                    $onclick 	= rgar($menu_item, "onclick");$/;"	v
onfocus	common.php	/^                    $onfocus = !IS_ADMIN ? 'jQuery(this).prev("input").attr("checked", true); if(jQuery(this).val() == "' . $other_default_value . '") { jQuery(this).val(""); }' : '';$/;"	v
onkeyup	common.php	/^                    $onkeyup = self::get_logic_event($field, "keyup");$/;"	v
onkeyup	common.php	/^                $onkeyup = "onkeyup='{$action}'";$/;"	v
onkeyup	common.php	/^                $onkeyup = rgar($field,"passwordStrengthEnabled") ? "onkeyup='{$action}'" : "";$/;"	v
operation	forms_model.php	/^    public static function is_value_match( $field_value, $target_value, $operation="is", $source_field = null, $rule = null, $form = null ) {$/;"	v
operator	common.php	/^			            $operator = 'contains';$/;"	v
operator	common.php	/^                $operator             = $filter_operators[$i];$/;"	v
operator	forms_model.php	/^										if ( ( $operator == '=' && strtolower( $choice['text'] ) == strtolower( $val ) ) || ( $operator == 'like' && strpos( strtolower( $choice['text'] ), strtolower( $val ) ) !== false ) ) {$/;"	v
operator	forms_model.php	/^                $operator = "<>";$/;"	v
operator	forms_model.php	/^                $operator = "=";$/;"	v
operator	forms_model.php	/^                $operator = "like";$/;"	v
operator	forms_model.php	/^            $operator    = isset($filter["operator"]) ? strtolower($filter["operator"]) : "=";$/;"	v
operator	forms_model.php	/^            $operator    = isset($search["operator"]) ? strtolower($search["operator"]) : "=";$/;"	v
operator	includes/addon/class-gf-addon.php	/^			$operator = 'is';$/;"	v
operator	includes/addon/class-gf-addon.php	/^		$operator = $this->get_setting("{$setting_name_root}_operator");$/;"	v
operators	common.php	/^		        $operators = array( 'is' );$/;"	v
operators	common.php	/^            $operators = isset($operators_by_field_type[$field_type]) ? $operators_by_field_type[$field_type] : $operators_by_field_type["default"];$/;"	v
operators_by_field_type	common.php	/^        $operators_by_field_type = array($/;"	v
option	common.php	/^    public static function get_field_merge_tags($field, $option="") {$/;"	v
option	js/forms.js	/^    "option"    :       ".product_field_setting, .option_field_type_setting, .conditional_logic_field_setting, .prepopulate_field_setting, .label_setting, .admin_label_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
option	xml.php	/^                    $option = rgar($this->options, $child_path);$/;"	v
option	xml.php	/^            $option = rgar($this->options,$path);$/;"	v
option	xml.php	/^        $option = rgar($this->options, $path);$/;"	v
option_choices	includes/addon/class-gf-payment-addon.php	/^        $option_choices = $this->option_choices();$/;"	v
option_choices	includes/addon/class-gf-payment-addon.php	/^        $option_choices = array($/;"	v
option_choices	includes/addon/class-gf-payment-addon.php	/^    protected function option_choices(){$/;"	f
option_class	form_display.php	/^        $option_class = $field["type"] == "option" ? "gfield_price gfield_price{$product_suffix} gfield_option{$product_suffix}" : "";$/;"	v
option_info	common.php	/^                                        $option_info = self::get_option_info($value, $option, $use_choice_text);$/;"	v
option_info	common.php	/^                                    $option_info = self::get_option_info($option_value, $option, $use_choice_text);$/;"	v
option_label	common.php	/^                                $option_label = empty($option["adminLabel"]) ? $option["label"] : $option["adminLabel"];$/;"	v
option_value	common.php	/^                                $option_value = RGFormsModel::get_lead_field_value($lead, $option);$/;"	v
optional_field	common.php	/^                        $optional_field = $field;$/;"	v
optional_group	common.php	/^                $optional_group = array_merge($optional_group, self::get_field_merge_tags($field, $option));$/;"	v
options	common.php	/^                            $options = "<script type='text\/javascript'>" . apply_filters("gform_cdata_open", "") . " var RecaptchaOptions = {theme : '$theme'}; if(parseInt('" . self::$tab_index . "') > 0) {RecaptchaOptions.tabindex = " . self::$tab_index++ . ";}" .$/;"	v
options	common.php	/^                            $options = array();$/;"	v
options	common.php	/^                            $options = self::get_product_fields_by_type($form, array("option"), $id);$/;"	v
options	common.php	/^            $options = array('method' => 'POST', 'timeout' => 20);$/;"	v
options	common.php	/^            $options = explode(",", rgar($match,2));$/;"	v
options	common.php	/^        $options = array('method' => 'POST', 'timeout' => 3);$/;"	v
options	common.php	/^        $options = array('method' => 'POST', 'timeout' => 3, 'body' => $body);$/;"	v
options	export.php	/^            $options = apply_filters( 'gform_export_options', $options, $forms );$/;"	v
options	export.php	/^            $options = array($/;"	v
options	export.php	/^        $options = apply_filters('gform_import_form_xml_options', $options);$/;"	v
options	export.php	/^        $options = array($/;"	v
options	gravityforms.php	/^        $options = array('body' => $body, 'headers' => array('Referer' => get_bloginfo("url")), 'timeout' => 15);$/;"	v
options	gravityforms.php	/^        $options = array('method' => 'POST', 'timeout' => 3, 'body' => $body);$/;"	v
options	includes/addon/class-gf-addon.php	/^        $options = '';$/;"	v
options	includes/addon/class-gf-auto-upgrade.php	/^        $options = array('method' => 'POST', 'timeout' => 3, 'body' => $body);$/;"	v
options	includes/addon/class-gf-feed-addon.php	/^			$options = array();$/;"	v
options	includes/addon/class-gf-payment-addon.php	/^            $options = array();$/;"	v
options	settings.php	/^        $options = array('method' => 'POST', 'timeout' => 3, 'body' => $body);$/;"	v
options	xml.php	/^        $this->options = $options;$/;"	v
options	xml.php	/^    private $options = array();$/;"	v
options_array	common.php	/^        $options_array = explode(",", $options);$/;"	v
options_json	includes/addon/class-gf-payment-addon.php	/^        $options_json    = json_encode($chart_options);$/;"	v
options_json	includes/addon/class-gf-results.php	/^                    $options_json    = htmlentities(json_encode($chart_options), ENT_QUOTES, 'UTF-8', true);$/;"	v
or	includes/addon/class-gf-addon.php	/^     * Accepts a dashicon class or a URL.$/;"	c
order_by	forms_model.php	/^        $order_by = !empty($sort_column) ? "ORDER BY $sort_column $sort_keyword" : "";$/;"	v
order_by	includes/addon/class-gf-payment-addon.php	/^                $order_by = "date desc";$/;"	v
order_by	includes/addon/class-gf-payment-addon.php	/^                $order_by = "month desc";$/;"	v
order_by	includes/addon/class-gf-payment-addon.php	/^                $order_by = "week desc";$/;"	v
order_info	includes/addon/class-gf-payment-addon.php	/^        $order_info = $this->get_order_data($feed, $form, $entry);$/;"	v
order_label	common.php	/^        $order_label = apply_filters("gform_order_label_{$form["id"]}", apply_filters("gform_order_label", __("Order", "gravityforms"), $form["id"]), $form["id"]);$/;"	v
orderby	forms_model.php	/^            $orderby = $is_numeric_sort ? "ORDER BY ($sort_field+0) $sort_direction" : "ORDER BY $sort_field $sort_direction";$/;"	v
orderby	forms_model.php	/^            $orderby = $is_numeric_sort ? "ORDER BY (l.$sort_field+0) $sort_direction" : "ORDER BY l.$sort_field $sort_direction";$/;"	v
orderby	forms_model.php	/^        $orderby = $is_numeric_sort ? "ORDER BY ($sort_field+0) $sort_direction" : "ORDER BY $sort_field $sort_direction";$/;"	v
orderby	forms_model.php	/^        $orderby = $is_numeric_sort ? "ORDER BY query, (value+0) $sort_direction" : "ORDER BY query, value $sort_direction";$/;"	v
other_default_value	common.php	/^                $other_default_value = GFCommon::get_other_choice_value();$/;"	v
other_settings	includes/addon/class-gf-payment-addon.php	/^        $other_settings = array($/;"	v
other_settings_fields	includes/addon/class-gf-payment-addon.php	/^    public function other_settings_fields(){$/;"	f
other_value	common.php	/^                        $other_value = $other_default_value;$/;"	v
other_value	common.php	/^                        $other_value = $value;$/;"	v
other_value	common.php	/^                        $other_value = rgpost("input_{$field["id"]}_other");$/;"	v
out	includes/upload.php	/^                $out = @fopen("{$file_path}.part", $chunk == 0 ? "wb" : "ab");$/;"	v
out	includes/upload.php	/^            $out = @fopen("{$file_path}.part", $chunk == 0 ? "wb" : "ab");$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public function encode($intext, $outfile = false)$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public function encodePNG($intext, $outfile = false,$saveandprint=false)$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public function encodeRAW($intext, $outfile = false)$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false)$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	v
outfile	includes/phpqrcode/phpqrcode.php	/^        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	v
output	common.php	/^                    $output = join(PHP_EOL, $output_arr);$/;"	v
output	common.php	/^                $output = "";$/;"	v
output	common.php	/^                $output = empty($output) || $format == "text" ? $output : sprintf("<ul>%s<\/ul>", $output);$/;"	v
output	form_settings.php	/^    public static function output($a) {$/;"	f
output	gravityforms.php	/^		$output = "";$/;"	v
output	includes/addon/class-gf-payment-addon.php	/^        $output = '<span class="displaying-num">' . sprintf( _n( '1 item', '%s items', $total_items, 'gravityforms' ), number_format_i18n( $total_items ) ) . '<\/span>';$/;"	v
output	includes/addon/class-gf-results.php	/^            $output                    = array();$/;"	v
output	includes/upload.php	/^        $output = array("status"    => "ok",$/;"	v
output	includes/upload.php	/^        $output = json_encode($output);$/;"	v
output	includes/webapi/webapi.php	/^            $output     = GFAPI::get_feeds($feed_ids, $form_id, $addon_slug);$/;"	v
output_arr	common.php	/^                    $output_arr = array();$/;"	v
output_format	common.php	/^                        $output_format = in_array(rgar($match,4), array("text", "html", "url")) ? rgar($match,4) : $format;$/;"	v
output_json	includes/webapi/webapi.php	/^            $output_json = json_encode($output);$/;"	v
override_key	common.php	/^            foreach($override_options as $override_key => $override_value){$/;"	v
override_options	common.php	/^    private static function prepare_admin_notification($form, $lead, $override_options = false){$/;"	v
override_options	common.php	/^    private static function prepare_user_notification($form, $lead, $override_options = false){$/;"	v
override_options	common.php	/^    public static function send_admin_notification($form, $lead, $override_options = false){$/;"	v
override_options	common.php	/^    public static function send_user_notification($form, $lead, $override_options = false){$/;"	v
overrides	includes/addon/class-gf-addon.php	/^	public static function register( $class, $overrides = null ){$/;"	v
p	includes/phpqrcode/phpqrcode.php	/^                        $p = $q;$/;"	v
p	includes/phpqrcode/phpqrcode.php	/^            $p = 0;$/;"	v
p	includes/phpqrcode/phpqrcode.php	/^            $p = 1;$/;"	v
p	includes/phpqrcode/phpqrcode.php	/^            $p=0;$/;"	v
p	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	v
pad	common.php	/^        $pad = str_repeat('&#9472;', $depth);$/;"	v
pad	form_detail.php	/^        $pad = str_repeat( '&#8212; ', $level );$/;"	v
pad	includes/phpqrcode/phpqrcode.php	/^        public $pad;                 \/\/ Padding bytes in shortened block$/;"	v
padbuf	includes/phpqrcode/phpqrcode.php	/^                $padbuf = array();$/;"	v
padding	includes/phpqrcode/phpqrcode.php	/^            $padding = new QRbitstream();$/;"	v
padding	xml.php	/^        $padding = $this->indent($path);$/;"	v
padlen	includes/phpqrcode/phpqrcode.php	/^            $padlen = $maxwords - $words;$/;"	v
page	form_settings.php	/^            $page = get_post($item['pageId']);$/;"	v
page	forms_model.php	/^        $page = self::get_page_by_number($form, $page_number);$/;"	v
page	gravityforms.php	/^        $page = self::get_page();$/;"	v
page	includes/addon/class-gf-addon.php	/^        $page = rgget("page");$/;"	v
page	js/forms.js	/^    "page" :            ".next_button_setting, .previous_button_setting, .css_class_setting, .conditional_logic_page_setting, .conditional_logic_nextbutton_setting",$/;"	p	class:fieldSettings
pageURL	forms_model.php	/^        $pageURL = 'http';$/;"	v
page_break	print-entry.php	/^$page_break = rgget("page_break") ? 'print-page-break' : false;$/;"	v
page_class	form_display.php	/^        $page_class = $field["type"] == "page" ? "gpage" : "";$/;"	v
page_class	includes/addon/class-gf-payment-addon.php	/^            $page_class = $total_pages < 2 ? ' one-page' : '';$/;"	v
page_class	includes/addon/class-gf-payment-addon.php	/^            $page_class = ' no-pages';$/;"	v
page_count	form_display.php	/^                $page_count = self::get_max_page_number($form);$/;"	v
page_count	form_display.php	/^        $page_count = self::get_max_page_number($form);$/;"	v
page_footer	export.php	/^    public static function page_footer(){$/;"	f
page_footer	form_settings.php	/^    public static function page_footer(){$/;"	f
page_footer	settings.php	/^    public static function page_footer(){$/;"	f
page_header	export.php	/^    public static function page_header($title = ''){$/;"	f
page_header	form_settings.php	/^    public static function page_header($title = ''){$/;"	f
page_header	settings.php	/^    public static function page_header($title = '', $message = ''){$/;"	f
page_index	entry_list.php	/^        $page_index = empty($_GET["paged"]) ? 0 : intval($_GET["paged"]) - 1;$/;"	v
page_label	form_display.php	/^                $page_label = __("Page Break", "gravityforms");$/;"	v
page_links	entry_list.php	/^        $page_links = paginate_links( array($/;"	v
page_links	includes/addon/class-gf-payment-addon.php	/^        $page_links = array();$/;"	v
page_name	form_display.php	/^            $page_name = !empty($form["pagination"]["progressbar_completion_text"]) ? $form["pagination"]["progressbar_completion_text"] : "";$/;"	v
page_name	form_display.php	/^        $page_name = !empty($page_name) ? " - " . $page_name : "";$/;"	v
page_name	form_display.php	/^        $page_name = rgar(rgar($form["pagination"],"pages"), $current_page -1);$/;"	v
page_name	includes/locking/class-gf-locking.php	/^        return $page_name == GFForms::get_page();$/;"	v
page_number	form_display.php	/^			$page_number = $failed_validation_page;$/;"	v
page_number	form_display.php	/^            $page_number = $target_page;$/;"	v
page_number	form_display.php	/^            $page_number = 0;$/;"	v
page_number	form_display.php	/^        $page_number = !is_numeric($page_number) ? 1 : $page_number;$/;"	v
page_number	form_display.php	/^        $page_number = $source_page_number;$/;"	v
page_number	form_display.php	/^        $page_number = 0;$/;"	v
page_number	form_display.php	/^        $page_number = 1;$/;"	v
page_number	form_display.php	/^        $page_number = RGForms::post("gform_source_page_number_{$form_id}");$/;"	v
page_number	form_display.php	/^        $page_number = RGForms::post("gform_target_page_number_{$form["id"]}");$/;"	v
page_number	form_display.php	/^        $page_number = isset(self::$submission[$form_id]) ? intval(self::$submission[$form_id]["page_number"]) : 1;$/;"	v
page_number	form_display.php	/^        $page_number = self::get_source_page( $form['id'] );$/;"	v
page_number	form_display.php	/^        if($is_valid && $page_number == 0){$/;"	v
page_number	form_display.php	/^        return $page_number == 0 ? 0 : $page_number + 1;$/;"	v
page_number	form_display.php	/^    public static function validate(&$form, $field_values, $page_number=0, &$failed_validation_page=0){$/;"	v
page_number	forms_model.php	/^        $page_number = 1;$/;"	v
page_objects	gravityforms.php	/^            $page_objects = array();$/;"	v
page_objects	gravityforms.php	/^        $page_objects = isset($gf_required_objects[$current_page . "_" . $view]) ? $gf_required_objects[$current_page . "_" . $view] : rgar($gf_required_objects, $current_page);$/;"	v
page_size	entry_list.php	/^        $page_size = apply_filters("gform_entry_page_size", apply_filters("gform_entry_page_size_{$form_id}", 20, $form_id), $form_id);$/;"	v
page_size	export.php	/^        $page_size = 100;$/;"	v
page_size	export.php	/^        $page_size = 200;$/;"	v
page_size	forms_model.php	/^        $page_size       = isset($paging["page_size"]) ? $paging["page_size"] : 20;$/;"	v
page_size	includes/addon/class-gf-payment-addon.php	/^        $page_size = 10;$/;"	v
page_size	includes/addon/class-gf-results.php	/^                    $page_size = 5;$/;"	v
page_size	includes/addon/class-gf-results.php	/^            $page_size = 10;$/;"	v
page_size	includes/addon/class-gf-results.php	/^            $page_size = 150;$/;"	v
page_size	includes/webapi/webapi.php	/^                $page_size = isset($_GET["paging"]["page_size"]) ? intval($_GET["paging"]["page_size"]) : 10;$/;"	v
page_size	includes/webapi/webapi.php	/^            $page_size = isset($_GET["paging"]["page_size"]) ? strtolower($_GET["paging"]["page_size"]) : 10;$/;"	v
page_supports_add_form_button	gravityforms.php	/^    public static function page_supports_add_form_button(){$/;"	f
page_text	gravityforms.php	/^                $page_text = "";$/;"	v
page_text	gravityforms.php	/^            $page_text = $raw_response['body'];$/;"	v
page_text	gravityforms.php	/^            $page_text = __("Oops!! Something went wrong.<br\/>Please try again or <a href='http:\/\/www.gravityforms.com'>contact us<\/a>.", 'gravityforms');$/;"	v
page_text	gravityforms.php	/^        $page_text = self::get_changelog();$/;"	v
page_text	includes/addon/class-gf-auto-upgrade.php	/^                $page_text = "";$/;"	v
page_text	includes/addon/class-gf-auto-upgrade.php	/^            $page_text = $raw_response['body'];$/;"	v
page_text	includes/addon/class-gf-auto-upgrade.php	/^            $page_text = sprintf(__("Oops!! Something went wrong.%sPlease try again or %scontact us%s.", 'gravityforms'), "<br\/>", "<a href='http:\/\/www.gravityforms.com'>", "<\/a>");$/;"	v
page_title	gravityforms.php	/^                $page_title = $tab['label'];$/;"	v
page_title	gravityforms.php	/^        $page_title = '';$/;"	v
page_title	includes/addon/class-gf-addon.php	/^                        $page_title = rgar($sections[0], "title");$/;"	v
page_title	includes/addon/class-gf-addon.php	/^                    $page_title = $this->form_settings_page_title();$/;"	v
pages	form_display.php	/^                    $pages = isset($form["pagination"]["pages"]) ? $form["pagination"]["pages"] :  array();$/;"	v
pages	includes/addon/class-gf-addon.php	/^            $pages = array($pages);$/;"	v
pagination	includes/addon/class-gf-payment-addon.php	/^    function pagination( $which ) {$/;"	f
pagination_links_class	includes/addon/class-gf-payment-addon.php	/^            $pagination_links_class = ' hide-if-js';$/;"	v
pagination_links_class	includes/addon/class-gf-payment-addon.php	/^        $pagination_links_class = 'pagination-links';$/;"	v
paging	entry_detail.php	/^        $paging = array('offset' => $position, 'page_size' => 1);$/;"	v
paging	entry_list.php	/^        $paging = array('offset' => $first_item_index, 'page_size' => $page_size);$/;"	v
paging	export.php	/^            $paging = array($/;"	v
paging	includes/addon/class-gf-results.php	/^                $paging = array($/;"	v
paging	includes/addon/class-gf-results.php	/^                $paging = array('offset' => $offset, 'page_size' => $page_size);$/;"	v
paging	includes/api.php	/^        $paging                = array("offset" => 0, "page_size" => 1);$/;"	v
paging	includes/api.php	/^     *     $paging = array('offset' => 0, 'page_size' => 20 );$/;"	v
paging	includes/webapi/webapi.php	/^                $paging = array('offset' => $offset, 'page_size' => $page_size);$/;"	v
paging_html	entry_list.php	/^			$paging_html = "";$/;"	v
paging_html	entry_list.php	/^			$paging_html = '$/;"	v
paging_total	entry_list.php	/^			$paging_total = '<span id="paging_total_' . $which . '">' . $total_lead_count . "<\/span>";$/;"	v
parameter_is_key	tooltips.php	/^    $parameter_is_key = count(explode(" ", $name)) == 1;$/;"	v
parameter_val	form_display.php	/^                    $parameter_val = RGFormsModel::get_parameter_value(rgar($field, "inputName"), $field_values, $field);$/;"	v
parameter_values	forms_model.php	/^                    $parameter_values = explode(",", $parameter_values);$/;"	v
parameter_values	forms_model.php	/^                $parameter_values = self::get_parameter_value( rgar( $field, 'inputName' ), $field_values, $field);$/;"	v
parent	form_detail.php	/^    private static function _cat_rows( $categories, &$count, &$output, $parent = 0, $level = 0, $page = 1, $per_page = 9999999 ) {$/;"	v
parent	gravityforms.php	/^                    $parent = array("name" => $addon_menu["name"], "callback" => $addon_menu["callback"]);$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_addons", "callback" => array("RGForms", "addons_page"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_edit_forms", "callback" => array("RGForms", "forms"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_entries", "callback" => array("RGForms", "all_leads_page"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_export", "callback" => array("RGForms", "export_page"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_help", "callback" => array("RGForms", "help_page"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_new_form", "callback" => array("RGForms", "new_form"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_settings", "callback" => array("RGForms", "settings_page"));$/;"	v
parent	gravityforms.php	/^            $parent = array("name" => "gf_update", "callback" => array("RGForms", "update_page"));$/;"	v
parent	includes/addon/class-gf-addon.php	/^                    $parent = $menu_item;$/;"	v
parent	includes/addon/class-gf-addon.php	/^                    $parent = array("name" => $addon_menu["name"], "callback" => $addon_menu["callback"]);$/;"	v
parent	includes/addon/class-gf-addon.php	/^            $parent = array("name" => $this->_slug . "_settings", "callback" => array($this, "app_settings"));$/;"	v
parent	includes/addon/class-gf-addon.php	/^        $parent = false;$/;"	v
parent_menu	gravityforms.php	/^        $parent_menu = self::get_parent_menu($addon_menus);$/;"	v
parent_menu	includes/addon/class-gf-addon.php	/^        $parent_menu = self::get_parent_menu($menu_items, $addon_menus);$/;"	v
parity	includes/phpqrcode/phpqrcode.php	/^            $parity = 0;$/;"	v
parity	includes/phpqrcode/phpqrcode.php	/^            $parity = array_fill(0, $NROOTS, 0);$/;"	v
parse_date	common.php	/^    public static function parse_date($date, $format="mdy"){$/;"	f
parse_shortcode	gravityforms.php	/^    public static function parse_shortcode( $attributes, $content = null ) {$/;"	f
part	includes/addon/class-gf-addon.php	/^                $part = trim($part, "]");$/;"	v
pass	common.php	/^				$pass = rgar($value, $id );$/;"	v
password	form_display.php	/^                            $password =  $_POST["input_" . $field["id"]];$/;"	v
password	js/forms.js	/^    "password" :        ".conditional_logic_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .rules_setting, .duplicate_setting, .description_setting, .css_class_setting, .password_strength_setting"$/;"	p	class:fieldSettings
password_fields	forms_model.php	/^		$password_fields = GFCommon::get_fields_by_type( $form, array( 'password' ) );$/;"	v
password_script	form_display.php	/^            $password_script = self::get_password_strength_init_script($form);$/;"	v
path	common.php	/^        $path = $captcha->tmp_dir . $filename;$/;"	v
path	forms_model.php	/^        $path = str_replace($uploaddir["baseurl"], $uploaddir["basedir"], $url);$/;"	v
path	includes/webapi/webapi.php	/^            $path    = strtolower(get_query_var(GFWEBAPI_ROUTE_VAR));$/;"	v
path	xml.php	/^            $path = $parent_node_name;$/;"	v
path	xml.php	/^    public function serialize($parent_node_name, $data, $path=""){$/;"	v
path_array	includes/webapi/webapi.php	/^            $path_array = explode("\/", $route);$/;"	v
path_parts	includes/addon/class-gf-addon.php	/^            $path_parts = explode("[", $setting_name);$/;"	v
pathinfo	forms_model.php	/^        $pathinfo = pathinfo($uploaded_filename);$/;"	v
payload	includes/phpqrcode/phpqrcode.php	/^            $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version);$/;"	v
payment	includes/addon/class-gf-payment-addon.php	/^        $payment = rgar( $authorization, 'captured_payment' );$/;"	v
payment	includes/addon/class-gf-payment-addon.php	/^        $payment = rgar( $subscription, 'captured_payment' );$/;"	v
payment_amount	entry_detail.php	/^							$payment_amount = apply_filters( 'gform_payment_amount', GFCommon::to_money( $lead["payment_amount"], $lead["currency"] ), $form, $lead );$/;"	v
payment_amount	forms_model.php	/^        $payment_amount = !rgblank(rgar($lead, "payment_amount")) ? (float) rgar($lead, "payment_amount") : "NULL";$/;"	v
payment_amount	includes/api.php	/^        $payment_amount = isset($entry["payment_amount"]) ? (float)$entry["payment_amount"] : 'NULL';$/;"	v
payment_choices	includes/addon/class-gf-payment-addon.php	/^        $payment_choices = array_merge($this->get_payment_choices($form), array(array("label" => __("Enter an amount", "gravityforms"), "value" => "enter_amount")));$/;"	v
payment_count	includes/addon/class-gf-payment-addon.php	/^        $payment_count = $wpdb->get_var($wpdb->prepare("SELECT count(id) FROM {$wpdb->prefix}gf_addon_payment_transaction WHERE lead_id=%d", $entry_id));$/;"	v
payment_date	entry_detail.php	/^							$payment_date = apply_filters( 'gform_payment_date', GFCommon::format_date($lead["payment_date"], false, "Y\/m\/d", $lead["transaction_type"] != 2), $form, $lead );$/;"	v
payment_date	forms_model.php	/^        $payment_date = strtotime(rgar($lead,"payment_date")) ? "'" . gmdate( 'Y-m-d H:i:s', strtotime("{$lead["payment_date"]}") ) . "'" : "NULL";$/;"	v
payment_date	includes/api.php	/^        $payment_date   = strtotime(rgar($entry, "payment_date")) ? "'" . gmdate('Y-m-d H:i:s', strtotime("{$entry["payment_date"]}")) . "'" : "NULL";$/;"	v
payment_date	includes/api.php	/^        $payment_date   = strtotime(rgar($entry, "payment_date")) ? sprintf("'%s'", gmdate('Y-m-d H:i:s', strtotime("{$entry["payment_date"]}"))) : "NULL";$/;"	v
payment_details_box	entry_detail.php	/^    public static function payment_details_box($lead, $form)$/;"	f
payment_field	includes/addon/class-gf-feed-addon.php	/^		$payment_field   = $feed['meta']['transactionType'] == 'product' ? $feed['meta']['paymentAmount'] : $feed['meta']['recurringAmount'];$/;"	v
payment_field	includes/addon/class-gf-payment-addon.php	/^        $payment_field = $feed["meta"]["transactionType"] == "product" ? $feed["meta"]["paymentAmount"] : $feed["meta"]["recurringAmount"];$/;"	v
payment_method	includes/addon/class-gf-payment-addon.php	/^        $payment_method = rgpost("payment_method");$/;"	v
payment_method	includes/api.php	/^        $payment_method = isset($entry["payment_method"]) ? $entry["payment_method"] : '';$/;"	v
payment_method_filter	includes/addon/class-gf-payment-addon.php	/^            $payment_method_filter = $wpdb->prepare(" AND l.payment_method=%s", $payment_method);$/;"	v
payment_method_filter	includes/addon/class-gf-payment-addon.php	/^        $payment_method_filter = "";$/;"	v
payment_method_filter	includes/addon/class-gf-payment-addon.php	/^        $payment_method_filter = array("payment_method" => array("label" => __("Payment Method", "gravityforms"), "tooltip" => "", "markup" => $payment_method_markup));$/;"	v
payment_method_is_overridden	includes/addon/class-gf-payment-addon.php	/^    private function payment_method_is_overridden( $method_name, $base_class = 'GFPaymentAddOn' ){$/;"	f
payment_method_markup	includes/addon/class-gf-payment-addon.php	/^        $payment_method_markup = "$/;"	v
payment_methods	common.php	/^                $payment_methods = apply_filters("gform_payment_methods", array(), $field, $form_id);$/;"	v
payment_methods	includes/addon/class-gf-payment-addon.php	/^        $payment_methods = $this->get_payment_methods($form_id);$/;"	v
payment_methods	includes/addon/class-gf-payment-addon.php	/^        $payment_methods = $wpdb->get_col($wpdb->prepare("SELECT DISTINCT payment_method FROM {$wpdb->prefix}rg_lead WHERE form_id=%d", $form_id));$/;"	v
payment_name	includes/addon/class-gf-payment-addon.php	/^        $payment_name = rgempty( 'name', $payment ) ? __( 'Initial payment', 'gravityforms' ) : $payment['name'];$/;"	v
payment_options	common.php	/^                $payment_options = "";$/;"	v
payment_status	entry_detail.php	/^							$payment_status = apply_filters("gform_payment_status", $lead["payment_status"], $form, $lead);$/;"	v
payment_status	includes/api.php	/^        $payment_status = isset($entry["payment_status"]) ? sprintf("'%s'", esc_sql($entry["payment_status"])) : 'NULL';$/;"	v
paypal_feeds	includes/addon/class-gf-feed-addon.php	/^		$paypal_feeds = $this->get_feeds_by_slug( 'gravityformspaypal', $form['id'] );$/;"	v
paypal_fulfillment	includes/addon/class-gf-feed-addon.php	/^    public function paypal_fulfillment( $entry, $paypal_config, $transaction_id, $amount ) {$/;"	f
peer_ids	form_display.php	/^                $peer_ids = array();$/;"	v
peers	form_display.php	/^                $peers = $field["type"] == "section" ? GFCommon::get_section_fields($form, $field["id"]) : array($field);$/;"	v
pending_class	form_display.php	/^                        $pending_class = $step_number > $current_page ? " gf_step_pending" : "";$/;"	v
per_page	includes/addon/class-gf-payment-addon.php	/^		$per_page = $this->_pagination_args['per_page'];$/;"	v
percent	form_display.php	/^        $percent = !$progress_complete ? floor(( ($progressbar_page_count) \/ $page_count ) * 100) . "%" : "100%";$/;"	v
percent	includes/addon/class-gf-results.php	/^                            $percent = $max > 0 ? round($val \/ $max * 100, 0) : 0;$/;"	v
percent_number	form_display.php	/^        $percent_number = !$progress_complete ? floor(( ($progressbar_page_count) \/ $page_count ) * 100) . "" : "100";$/;"	v
performed_authorization	includes/addon/class-gf-payment-addon.php	/^			$performed_authorization = true;$/;"	v
performed_authorization	includes/addon/class-gf-payment-addon.php	/^		$performed_authorization = false;$/;"	v
period	form_display.php	/^            $period = rgar($form, "limitEntriesPeriod");$/;"	v
permalink_structure	includes/webapi/webapi.php	/^            $permalink_structure = get_option('permalink_structure');$/;"	v
permalinks_url	includes/webapi/webapi.php	/^            $permalinks_url = admin_url("options-permalink.php");$/;"	v
permission	forms_model.php	/^        $permission = apply_filters("gform_file_permission", 0644, $path);$/;"	v
perms	forms_model.php	/^        $perms = $stat['mode'] & 0000666;$/;"	v
phone	js/forms.js	/^    "phone" :           ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .size_setting, .rules_setting, .duplicate_setting, .visibility_setting, .default_value_setting, .description_setting, .phone_format_setting, .css_class_setting",$/;"	p	class:fieldSettings
pixelPerPoint	includes/phpqrcode/phpqrcode.php	/^        private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4)$/;"	v
placeholder	common.php	/^                $placeholder = rgar($field, "enableEnhancedUI") ? "data-placeholder='" . esc_attr(apply_filters("gform_multiselect_placeholder_{$form_id}", apply_filters("gform_multiselect_placeholder", __("Click to select...", "gravityforms"), $form_id), $form_id)) . "'" : "";$/;"	v
placeholder	forms_model.php	/^                    $placeholder = rgar($meta, "is_numeric") ? "%s" : "%s";$/;"	v
plugin	gravityforms.php	/^            $plugin = unserialize($raw_response["body"]);$/;"	v
plugin	settings.php	/^            $plugin = "gravityforms\/gravityforms.php";$/;"	v
plugin_data	includes/addon/class-gf-auto-upgrade.php	/^            $plugin_data                = get_plugin_data($this->_full_path);$/;"	v
plugin_data	includes/addon/class-gf-auto-upgrade.php	/^            $plugin_data         = get_plugin_data($this->_full_path);$/;"	v
plugin_file	gravityforms.php	/^                $plugin_file = "gravityforms\/gravityforms.php";$/;"	v
plugin_file	update.php	/^                $plugin_file = "gravityforms\/gravityforms.php";$/;"	v
plugin_list	common.php	/^        $plugin_list = get_plugins();$/;"	v
plugin_message	includes/addon/class-gf-addon.php	/^    public function plugin_message() {$/;"	f
plugin_name	gravityforms.php	/^            $plugin_name = "gravityforms\/gravityforms.php";$/;"	v
plugin_page	includes/addon/class-gf-addon.php	/^    protected function plugin_page(){$/;"	f
plugin_page_container	includes/addon/class-gf-addon.php	/^    public function plugin_page_container(){$/;"	f
plugin_page_icon	includes/addon/class-gf-addon.php	/^    protected function plugin_page_icon(){$/;"	f
plugin_page_init	includes/addon/class-gf-addon.php	/^    protected function plugin_page_init(){$/;"	f
plugin_page_title	includes/addon/class-gf-addon.php	/^    protected function plugin_page_title(){$/;"	f
plugin_path	common.php	/^        $plugin_path = "gravityforms\/gravityforms.php";$/;"	v
plugin_path	gravityforms.php	/^        $plugin_path = basename(dirname(__FILE__)) . "\/gravityforms.php";$/;"	v
plugin_row	gravityforms.php	/^    public static function plugin_row($plugin_name){$/;"	f
plugin_row	includes/addon/class-gf-addon.php	/^    public function plugin_row() {$/;"	f
plugin_settings	includes/addon/class-gf-addon.php	/^    protected function plugin_settings(){$/;"	f
plugin_settings_fields	includes/addon/class-gf-addon.php	/^    public function plugin_settings_fields(){$/;"	f
plugin_settings_fields	includes/webapi/webapi.php	/^        public function plugin_settings_fields() {$/;"	f
plugin_settings_icon	includes/addon/class-gf-addon.php	/^    protected function plugin_settings_icon(){$/;"	f
plugin_settings_init	includes/addon/class-gf-addon.php	/^    protected function plugin_settings_init() {$/;"	f
plugin_settings_init	includes/webapi/webapi.php	/^        protected function plugin_settings_init() {$/;"	f
plugin_settings_link	gravityforms.php	/^    public static function plugin_settings_link( $links, $file ) {$/;"	f
plugin_settings_link	includes/addon/class-gf-addon.php	/^    public function plugin_settings_link( $links, $file ) {$/;"	f
plugin_settings_page	includes/addon/class-gf-addon.php	/^    public function plugin_settings_page() {$/;"	f
plugin_settings_title	includes/addon/class-gf-addon.php	/^    public function plugin_settings_title(){$/;"	f
plugin_settings_title	includes/webapi/webapi.php	/^        public function plugin_settings_title() {$/;"	f
plugins	common.php	/^		$plugins = array();$/;"	v
plugins	common.php	/^        $plugins = json_encode($plugins);$/;"	v
plugins	gravityforms.php	/^        $plugins = get_plugins();$/;"	v
plupload_init	common.php	/^                        $plupload_init = array($/;"	v
plupload_init	common.php	/^                        $plupload_init = array();$/;"	v
plupload_init	common.php	/^                    $plupload_init = apply_filters("gform_plupload_settings_{$form_id}", apply_filters('gform_plupload_settings', $plupload_init, $form_id, $field), $form_id, $field);$/;"	v
plupload_init_json	common.php	/^                    $plupload_init_json = htmlspecialchars(json_encode($plupload_init), ENT_QUOTES, 'UTF-8');$/;"	v
pm_selected	common.php	/^                    $pm_selected = rgar($matches,3) == "pm" ? "selected='selected'" : "";$/;"	v
pm_selected	common.php	/^                    $pm_selected = rgar($value,2) == "pm" ? "selected='selected'" : "";$/;"	v
png	includes/phpqrcode/phpqrcode.php	/^        public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE)$/;"	f
png	includes/phpqrcode/phpqrcode.php	/^        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false)$/;"	f
port	recaptchalib.php	/^function _recaptcha_http_post($host, $path, $data, $port = 80) {$/;"	v
pos	common.php	/^        if($pos == 1 || $pos == 3)$/;"	v
pos_mod	includes/addon/class-gf-addon.php	/^        $pos_mod = $pos == 'before' ? 0 : 1;$/;"	v
position	common.php	/^        $position = substr($format, 0, 3);$/;"	v
position	entry_detail.php	/^        $position = rgget('pos') ? rgget('pos') : 0;$/;"	v
position	entry_list.php	/^                            $position = ($page_size * $page_index) + $position;$/;"	v
position	entry_list.php	/^                        foreach($leads as $position => $lead){$/;"	v
post	common.php	/^    	$post = array("of" => "gravityforms", "key" => self::get_key(), "v" => self::$version, "wp" => get_bloginfo("version"), "php" => phpversion(), "mysql" => $wpdb->db_version(), "version" => "2", "plugins" => $plugins, "tn" => $theme_name, "tu" => $theme_uri, "tv" => $theme_version, "ta" => $theme_author, "tau" => $theme_author_uri, "im" => $im, "fc" => $fc, "ec" => $entry_count, "emc" => self::get_emails_sent(), "api" => self::get_api_calls());$/;"	v
post	entry_detail.php	/^                                        $post = get_post($lead["post_id"]);$/;"	v
post	forms_model.php	/^            $post = get_post($post_id);$/;"	v
post	forms_model.php	/^            $post = is_object( $post ) ? $post : get_post( $post_id );$/;"	v
post	forms_model.php	/^        $post = false;$/;"	v
post	forms_model.php	/^        if ( $post = get_post($post_id) ) {$/;"	v
post	gravityforms.php	/^    public static function post($name){$/;"	f
post	includes/addon/class-gf-payment-addon.php	/^            $post = get_post( $post_id );$/;"	v
post_array	common.php	/^        $post_array = self::object_to_array($post);$/;"	v
post_callback	includes/addon/class-gf-payment-addon.php	/^    protected function post_callback($callback_action, $result) {}$/;"	f
post_category	js/forms.js	/^    "post_category" :   ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .admin_label_setting, .post_category_checkbox_setting, .post_category_initial_item_setting, .label_setting, .size_setting, .rules_setting, .visibility_setting, .duplicate_setting, .description_setting, .css_class_setting, .post_category_field_type_setting",$/;"	p	class:fieldSettings
post_content	forms_model.php	/^                $post_content = GFCommon::replace_variables($post_content, $form, $lead, false, false, false);$/;"	v
post_content	forms_model.php	/^                $post_content = GFCommon::replace_variables_post_image($form["postContentTemplate"], $post_images, $lead);$/;"	v
post_content	js/forms.js	/^    "post_content" :    ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .admin_label_setting, .maxlen_setting, .post_content_template_setting, .post_status_setting, .post_category_setting, .post_author_setting, .label_setting, .size_setting, .rules_setting, .visibility_setting, .default_value_textarea_setting, .description_setting, .css_class_setting, .post_format_setting",$/;"	p	class:fieldSettings
post_custom_field	js/forms.js	/^    "post_custom_field" : ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .post_custom_field_setting, .post_custom_field_type_setting, .label_setting, .size_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
post_data	forms_model.php	/^        $post_data = apply_filters("gform_post_data_{$form["id"]}", apply_filters("gform_post_data", $post_data , $form, $lead), $form, $lead);$/;"	v
post_data	forms_model.php	/^        $post_data = array();$/;"	v
post_data	forms_model.php	/^        $post_data = self::get_post_fields($form, $lead);$/;"	v
post_data	forms_model.php	/^    private static function media_handle_upload($url, $post_id, $post_data = array()) {$/;"	v
post_entries	includes/webapi/webapi.php	/^        public function post_entries($data, $form_id = null) {$/;"	f
post_excerpt	js/forms.js	/^    "post_excerpt" :    ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .admin_label_setting, .maxlen_setting, .post_status_setting, .post_category_setting, .post_author_setting, .label_setting, .size_setting, .rules_setting, .visibility_setting, .default_value_textarea_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
post_feeds	includes/webapi/webapi.php	/^        public function post_feeds($feeds, $form_id = null) {$/;"	f
post_fields	form_detail.php	/^                                    $post_fields = array($/;"	v
post_format	forms_model.php	/^            $post_format = rgar($form, 'postFormat');$/;"	v
post_formats	form_detail.php	/^                                    $post_formats = get_theme_support('post-formats');$/;"	v
post_formats_dropdown	form_detail.php	/^                                    $post_formats_dropdown = '<option value="0">Standard<\/option>';$/;"	v
post_forms	includes/webapi/webapi.php	/^        public function post_forms($data) {$/;"	f
post_id	common.php	/^            $post_id = $lead["post_id"];$/;"	v
post_id	common.php	/^            $post_id = RGFormsModel::create_post($form, $lead);$/;"	v
post_id	common.php	/^            $post_id = absint(rgpost("gform_embed_post"));$/;"	v
post_id	common.php	/^        $post_id = 0;$/;"	v
post_id	forms_model.php	/^        $post_id = wp_insert_post( $post_data );$/;"	v
post_id	includes/api.php	/^        $post_id        = isset($entry["post_id"]) ? intval($entry["post_id"]) : 'NULL';$/;"	v
post_image	js/forms.js	/^    "post_image" :      ".conditional_logic_field_setting, .error_message_setting, .admin_label_setting, .post_image_setting, .label_setting, .rules_setting, .description_setting, .css_class_setting, .post_image_featured_image",$/;"	p	class:fieldSettings
post_images	forms_model.php	/^        $post_images = array();$/;"	v
post_link	common.php	/^                $post_link = "You can <a href='post.php?action=edit&post=$post_id'>edit this post<\/a> from the post page.";$/;"	v
post_link	common.php	/^            $post_link = "";$/;"	v
post_matches	includes/addon/class-gf-addon.php	/^                $post_matches  = isset($condition["post"]) ? $this->_request_condition_matches($_POST, $condition["query"]) : true;$/;"	v
post_stati	form_detail.php	/^                                        <?php $post_stati = apply_filters('gform_post_status_options', array($/;"	v
post_status	forms_model.php	/^        $post_status = $post_data['post_status'];$/;"	v
post_tags	js/forms.js	/^    "post_tags" :       ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .admin_label_setting, .label_setting, .post_tag_type_setting, .size_setting, .rules_setting, .visibility_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
post_title	forms_model.php	/^                $post_title = GFCommon::replace_variables($post_title, $form, $lead, false, false, false);$/;"	v
post_title	forms_model.php	/^                $post_title = GFCommon::replace_variables_post_image($form["postTitleTemplate"], $post_images, $lead);$/;"	v
post_title	forms_model.php	/^                $post_title = do_shortcode($post_title);$/;"	v
post_title	js/forms.js	/^    "post_title" :      ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .admin_label_setting, .post_title_template_setting, .post_status_setting, .post_category_setting, .post_author_setting, .label_setting, .size_setting, .rules_setting, .visibility_setting, .default_value_setting, .description_setting, .css_class_setting, .post_format_setting",$/;"	p	class:fieldSettings
post_to_manager	common.php	/^    public static function post_to_manager($file, $query, $options){$/;"	f
post_url	common.php	/^        $post_url = get_bloginfo("wpurl") . "\/wp-admin\/post.php?action=edit&post=" . rgar($lead, "post_id");$/;"	v
posted_check_sum	includes/addon/class-gf-results.php	/^                    $posted_check_sum    = rgpost("checkSum");$/;"	v
posted_uid	forms_model.php	/^            $posted_uid = rgpost("gform_unique_id");$/;"	v
pre_init	includes/addon/class-gf-addon.php	/^    public function pre_init(){$/;"	f
pre_init	includes/addon/class-gf-payment-addon.php	/^    public function pre_init(){$/;"	f
predefined_choices	form_detail.php	/^                                            $predefined_choices = apply_filters("gform_predefined_choices_" . rgar($form, "id"), apply_filters("gform_predefined_choices", $predefined_choices));$/;"	v
predefined_choices	form_detail.php	/^                                            $predefined_choices = array($/;"	v
prefix	common.php	/^                        $prefix = GFCommon::get_input($field, $field["id"] + 0.2);$/;"	v
prefix	common.php	/^                    $prefix = esc_attr(RGForms::get($field["id"] . ".2", $value));$/;"	v
prefix	common.php	/^                    $prefix = trim(rgget($field["id"] . ".2", $value));$/;"	v
prefix	common.php	/^                $prefix = "";$/;"	v
prefix	common.php	/^        $prefix = mt_rand();$/;"	v
prefix	form_display.php	/^                                        $prefix = $_POST["input_captcha_prefix_{$field["id"]}"];$/;"	v
prefix	includes/addon/class-gf-addon.php	/^        $prefix = "{$field_name}_";$/;"	v
prefix	includes/addon/class-gf-addon.php	/^        $prefix = trim(rgar($entry,$field_id . ".2"));$/;"	v
prefix_tabindex	common.php	/^                        $prefix_tabindex = self::get_tabindex();$/;"	v
prefixes	common.php	/^        $prefixes = explode(',',$card['prefixes']);$/;"	v
prefixes	form_display.php	/^                                    $prefixes = explode(",", $_POST["input_captcha_prefix_{$field["id"]}"]);$/;"	v
prefixes	form_display.php	/^            $prefixes = explode(',', $card['prefixes']);$/;"	v
premium_update	gravityforms.php	/^    public static function premium_update( $premium_update ){$/;"	f
premium_update	includes/addon/class-gf-auto-upgrade.php	/^    public function premium_update($premium_update) {$/;"	f
premium_update_push	gravityforms.php	/^    public static function premium_update_push( $premium_update ){$/;"	f
premium_update_push	includes/addon/class-gf-auto-upgrade.php	/^    public function premium_update_push($premium_update) {$/;"	f
prepare_admin_notification	common.php	/^    private static function prepare_admin_notification($form, $lead, $override_options = false){$/;"	f
prepare_date	forms_model.php	/^    public static function prepare_date($date_format, $value){$/;"	f
prepare_items	form_settings.php	/^    function prepare_items() {$/;"	f
prepare_items	includes/addon/class-gf-feed-addon.php	/^    function prepare_items() {$/;"	f
prepare_items	includes/addon/class-gf-payment-addon.php	/^    function prepare_items() {$/;"	f
prepare_items	notification.php	/^    function prepare_items() {$/;"	f
prepare_post_category_value	common.php	/^    public static function prepare_post_category_value($value, $field, $mode = 'entry_detail') {$/;"	f
prepare_user_notification	common.php	/^    private static function prepare_user_notification($form, $lead, $override_options = false){$/;"	f
prepare_value	forms_model.php	/^    public static function prepare_value($form, $field, $value, $input_name, $lead_id, $lead = array()){$/;"	f
prepend_attribute	includes/addon/class-gf-addon.php	/^	protected function prepend_attribute( $name, $attribute, $current_attribute ){$/;"	f
prev	form_display.php	/^            $prev = $field;$/;"	v
prev	form_display.php	/^        $prev = null;$/;"	v
prev	includes/phpqrcode/phpqrcode.php	/^                $prev = $version;$/;"	v
prev	includes/phpqrcode/phpqrcode.php	/^            $prev = 0;$/;"	v
prev_field_has_description	form_display.php	/^    private static function prev_field_has_description($form, $field_id){$/;"	f
prev_lead_id	forms_model.php	/^                $prev_lead_id = $result->id;$/;"	v
prev_lead_id	forms_model.php	/^            $prev_lead_id=0;$/;"	v
prev_pos	entry_detail.php	/^        $prev_pos = !rgblank($position) && $position > 0 ? $position - 1 : false;$/;"	v
prev_text	common.php	/^            $prev_text = $text;$/;"	v
preview	common.php	/^                        $preview = $multiple_files ? sprintf("<div id='%s'><\/div>", $file_list_id) : "";$/;"	v
preview	common.php	/^                        $preview = sprintf("<div id='%s'>", $file_list_id);$/;"	v
preview	common.php	/^                    $preview = "<div id='upload_$id' {$upload_display}>$upload<\/div>";$/;"	v
preview	common.php	/^                    $preview = "<span class='ginput_preview'><strong>" . esc_html($file_info["uploaded_filename"]) . "<\/strong> | <a href='javascript:;' onclick='gformDeleteUploadedFile({$form_id}, {$id});'>" . __("delete", "gravityforms") . "<\/a><\/span>";$/;"	v
previewFiles	entry_detail.php	/^                var $previewFiles = jQuery(previewFileSelector);$/;"	v
preview_capabilities	gravityforms.php	/^		$preview_capabilities = array("gravityforms_edit_forms", "gravityforms_create_form", "gravityforms_preview_forms");$/;"	v
previous_button	form_display.php	/^                    $previous_button = apply_filters("gform_previous_button", $previous_button, $form);$/;"	v
previous_button	form_display.php	/^                    $previous_button = apply_filters("gform_previous_button_{$form["id"]}", $previous_button, $form);$/;"	v
previous_button	form_display.php	/^                $previous_button = $field["pageNumber"] == 2 ? "" : self::get_form_button($form["id"], "gform_previous_button_{$form["id"]}_{$field["id"]}", $field["previousButton"], __("Previous", "gravityforms"), "gform_previous_button", __("Previous Page", "gravityforms"), $field["pageNumber"]-2);$/;"	v
previous_button	form_display.php	/^                $previous_button = apply_filters("gform_previous_button", $previous_button, $form);$/;"	v
previous_button	form_display.php	/^                $previous_button = apply_filters("gform_previous_button_{$form["id"]}", $previous_button, $form);$/;"	v
previous_button	form_display.php	/^                $previous_button = self::get_form_button($form["id"], "gform_previous_button_{$form["id"]}", $form["lastPageButton"], __("Previous", "gravityforms"), "gform_previous_button", __("Previous Page", "gravityforms"), self::get_current_page($form_id) -1);$/;"	v
previous_class	form_display.php	/^                        $previous_class = $step_number + 1 == $current_page ? " gf_step_previous" : "";$/;"	v
previous_value	forms_model.php	/^                if($property_name == 'status' && $previous_value == 'spam' && $property_value == 'active' && !rgar($lead, 'post_id')) {$/;"	v
previous_value	forms_model.php	/^            $previous_value = rgar($lead, $property_name);$/;"	v
price	common.php	/^			$price = '';$/;"	v
price	common.php	/^			$price = count( $ary ) > 1 ? $ary[1] : '';$/;"	v
price	common.php	/^                                                                $price = self::to_number($product["price"]);$/;"	v
price	common.php	/^                                $price = $lead_value;$/;"	v
price	common.php	/^                        $price = self::to_number($product["price"]);$/;"	v
price	common.php	/^                    $price = 0;$/;"	v
price	common.php	/^                    $price = trim($value[$field["id"] . ".2"]);$/;"	v
price	common.php	/^                $price = !empty($value) ? $value : rgget("basePrice", $field);$/;"	v
price	common.php	/^                $price = !is_array($value) || empty($value[$field["id"] . ".2"]) ? rgget("basePrice", $field) : esc_attr($value[$field["id"] . ".2"]);$/;"	v
price	common.php	/^            $price = self::to_number($product["price"]);$/;"	v
price	entry_detail.php	/^                                                        $price = GFCommon::to_number($product["price"]);$/;"	v
price	form_display.php	/^                            $price = 0;$/;"	v
price	form_display.php	/^                        $price = !empty($value) ? $value : $field["basePrice"];$/;"	v
price	form_display.php	/^                        $price = !is_array($value) || empty($value[$field["id"] . ".2"]) ? $field["basePrice"] : $value[$field["id"] . ".2"];$/;"	v
price	form_display.php	/^                        $price = GFCommon::to_number($price);$/;"	v
price	forms_model.php	/^                                $price = count($ary) > 1 ? $ary[1] : "";$/;"	v
price	forms_model.php	/^            $price = count($ary) > 1 ? $ary[1] : "";$/;"	v
price	js/forms.js	/^    "price" :           ".rules_setting, .duplicate_setting, .error_message_setting, .conditional_logic_field_setting",$/;"	p	class:fieldSettings
price_fields	form_display.php	/^        $price_fields = GFCommon::get_fields_by_type($form, array("product", "donation"));$/;"	v
pricing_fields	form_detail.php	/^                                    $pricing_fields = array($/;"	v
pricing_group	common.php	/^                $pricing_group = array_merge($pricing_group, self::get_field_merge_tags($field, $option));$/;"	v
prim	includes/phpqrcode/phpqrcode.php	/^        public $prim;                \/\/ Primitive element, index form$/;"	v
print_card	common.php	/^                        $print_card = false;$/;"	v
print_card	common.php	/^                        $print_card = true;$/;"	v
print_form_scripts	form_display.php	/^    public static function print_form_scripts( $form, $ajax ) {$/;"	f
print_form_scripts	gravityforms.php	/^    public static function print_form_scripts($form, $ajax){$/;"	f
print_scripts	gravityforms.php	/^    public static function print_scripts(){$/;"	f
print_styles	includes/addon/class-gf-addon.php	/^            $print_styles = array();$/;"	v
print_tooltip_scripts	tooltips.php	/^function print_tooltip_scripts(){$/;"	f
printed_scripts	form_display.php	/^    private static $printed_scripts = array();$/;"	v
priorities	gravityforms.php	/^		$priorities = array();$/;"	v
private_key	gravityforms.php	/^        $private_key = defined("GF_RECAPTCHA_PRIVATE_KEY") && empty($gf_recaptcha_private_key) ? GF_RECAPTCHA_PRIVATE_KEY : $gf_recaptcha_private_key;$/;"	v
privatekey	common.php	/^                        $privatekey = get_option("rg_gforms_captcha_private_key");$/;"	v
privatekey	form_display.php	/^                                    $privatekey = get_option("rg_gforms_captcha_private_key");$/;"	v
privatekey	js.php	/^            $privatekey = get_option("rg_gforms_captcha_private_key");$/;"	v
privkey	recaptchalib.php	/^	if ($privkey == null || $privkey == '') {$/;"	v
process_bulk_action	includes/addon/class-gf-feed-addon.php	/^    protected function process_bulk_action($action){$/;"	f
process_callback_action	includes/addon/class-gf-payment-addon.php	/^    private function process_callback_action( $action ) {$/;"	f
process_capture	includes/addon/class-gf-payment-addon.php	/^    protected function process_capture($authorization, $feed, $submission_data, $form, $entry){$/;"	f
process_exterior_pages	gravityforms.php	/^    public static function process_exterior_pages(){$/;"	f
process_feed	includes/addon/class-gf-feed-addon.php	/^    public function process_feed( $feed, $entry, $form ) {$/;"	f
process_form	form_display.php	/^    public static function process_form($form_id){$/;"	f
process_single_action	includes/addon/class-gf-feed-addon.php	/^    protected function process_single_action($action){$/;"	f
process_subscription	includes/addon/class-gf-payment-addon.php	/^    protected function process_subscription($authorization, $feed, $submission_data, $form, $entry){$/;"	f
processed_feeds	includes/addon/class-gf-feed-addon.php	/^        $processed_feeds = array();$/;"	v
processed_feeds	includes/addon/class-gf-feed-addon.php	/^        $processed_feeds = gform_get_meta($entry_id, "processed_feeds");$/;"	v
product	common.php	/^                    $product = $product_name . ", " . __("Qty: ", "gravityforms") . $quantity . ", " . __("Price: ", "gravityforms") . $price;$/;"	v
product	js/forms.js	/^    "product"   :       ".product_field_type_setting, .prepopulate_field_setting, .label_setting, .admin_label_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
product_amount_choices	includes/addon/class-gf-payment-addon.php	/^    protected function product_amount_choices(){$/;"	f
product_choices	includes/addon/class-gf-payment-addon.php	/^        $product_choices = $this->get_payment_choices($form);$/;"	v
product_class	form_display.php	/^        $product_class = $field["type"] == "product" ? "gfield_price gfield_price_{$form["id"]}_{$field["id"]} gfield_product_{$form["id"]}_{$field["id"]}" : "";$/;"	v
product_field	includes/addon/class-gf-payment-addon.php	/^        $product_field = array($/;"	v
product_fields	form_display.php	/^        $product_fields = array();$/;"	v
product_id	common.php	/^                    foreach($products["products"] as $product_id => $product)$/;"	v
product_info	common.php	/^            $product_info = apply_filters("gform_product_info_{$form["id"]}", apply_filters("gform_product_info", $product_info, $form, $lead), $form, $lead);$/;"	v
product_info	common.php	/^            $product_info = array("products" => $products, "shipping" => array("id"=> $shipping_field_id, "name" => $shipping_name, "price" => $shipping_price));$/;"	v
product_info	common.php	/^            $product_info = gform_get_meta(rgar($lead,'id'), "gform_product_info_{$use_choice_text}_{$use_admin_label}");$/;"	v
product_info	common.php	/^        $product_info = null;$/;"	v
product_name	common.php	/^                        $product_name = $product["quantity"] . " " . $product["name"];$/;"	v
product_name	common.php	/^                    $product_name = trim($value[$field["id"] . ".1"]);$/;"	v
product_name	common.php	/^                $product_name = !is_array($value) || empty($value[$field["id"] . ".1"]) ? esc_attr($field["label"]) : esc_attr($value[$field["id"] . ".1"]);$/;"	v
product_name	form_display.php	/^                        $product_name = !is_array($value) || empty($value[$field["id"] . ".1"]) ? $field["label"] : $value[$field["id"] . ".1"];$/;"	v
product_name_field	common.php	/^                $product_name_field = "<input type='hidden' name='input_{$id}.1' value='{$product_name}' class='gform_hidden' \/>";$/;"	v
product_price	includes/addon/class-gf-feed-addon.php	/^			$product_price = GFCommon::to_number( $product['price'] );$/;"	v
product_price	includes/addon/class-gf-payment-addon.php	/^            $product_price = GFCommon::to_number($product['price']);$/;"	v
product_quantity	common.php	/^                            $product_quantity = sizeof($quantity_field) == 0 && !rgar($field,"disableQuantity") ? rgget($id . ".3", $lead_value) : $quantity;$/;"	v
product_suffix	form_display.php	/^        $product_suffix = "_{$form["id"]}_" . rgget("productField", $field);$/;"	v
products	common.php	/^                    $products = self::get_product_fields($form, $lead, false, false);$/;"	v
products	common.php	/^        $products = GFCommon::get_product_fields($form, $lead, $use_text, $use_admin_label);$/;"	v
products	common.php	/^        $products = array();$/;"	v
products	common.php	/^        $products = self::get_product_fields($form, $lead, false);$/;"	v
products	entry_detail.php	/^                    $products = GFCommon::get_product_fields($form, $lead);$/;"	v
products	entry_detail.php	/^                $products = array();$/;"	v
products	includes/addon/class-gf-feed-addon.php	/^		$products = GFCommon::get_product_fields( $form, $entry );$/;"	v
products	includes/addon/class-gf-payment-addon.php	/^        $products = GFCommon::get_product_fields($form, $entry);$/;"	v
progress	includes/addon/class-gf-results.php	/^                    $progress         = $data["entry_count"] > 0 ? round($data["offset"] \/ $data["entry_count"] * 100) : 0;$/;"	v
progress_bar	form_display.php	/^            $progress_bar = "<div class='{$wrapper_css_class}' id='gform_wrapper_$form_id' >";$/;"	v
progress_bar	form_display.php	/^        $progress_bar = "";$/;"	v
progress_complete	form_display.php	/^            $progress_complete = true;$/;"	v
progress_complete	form_display.php	/^        $progress_complete = false;$/;"	v
progress_confirmation	form_display.php	/^                    $progress_confirmation = "<!DOCTYPE html><html><head><meta charset='UTF-8' \/><\/head><body class='GF_AJAX_POSTBACK'>" . $progress_confirmation  . "<\/body><\/html>";$/;"	v
progress_confirmation	form_display.php	/^                    $progress_confirmation = $confirmation_message;$/;"	v
progress_confirmation	form_display.php	/^                    $progress_confirmation = apply_filters('gform_ajax_iframe_content', "<!DOCTYPE html><html><head><meta charset='UTF-8' \/><\/head><body class='GF_AJAX_POSTBACK'>" . $confirmation_message . "<\/body><\/html>");$/;"	v
progress_confirmation	form_display.php	/^                $progress_confirmation = self::get_progress_bar($form, $form_id,$confirmation_message);$/;"	v
progress_confirmation	form_display.php	/^            $progress_confirmation = "";$/;"	v
progressbar_page_count	form_display.php	/^        $progressbar_page_count = $start_at_zero ? $current_page - 1 : $current_page;$/;"	v
prop	includes/addon/class-gf-addon.php	/^		foreach( $choice as $prop => $val ) {$/;"	v
prop	includes/addon/class-gf-addon.php	/^        foreach( $props as $prop => $value ) {$/;"	v
prop_strings	includes/addon/class-gf-addon.php	/^        $prop_strings = array();$/;"	v
property	common.php	/^            $property = $match[1];$/;"	v
property	forms_model.php	/^            $property = $notification["type"] == "user" ? "autoResponder" : "notification";$/;"	v
property_key	includes/api.php	/^        $property_key = esc_sql($property_key);$/;"	v
property_name	forms_model.php	/^        if($update_akismet && GFCommon::akismet_enabled($lead["form_id"]) && $property_name == "status" && in_array($property_value, array("active", "spam"))){$/;"	v
property_value	forms_model.php	/^            else if($current_status == "active" && $property_value == "spam"){$/;"	v
property_value	forms_model.php	/^            if($current_status == "spam" && $property_value == "active"){$/;"	v
props	includes/addon/class-gf-addon.php	/^        $props = wp_parse_args( $field, $default_props );$/;"	v
protocol	includes/addon/class-gf-results.php	/^            $protocol = isset($_SERVER["HTTPS"]) ? 'https:\/\/' : 'http:\/\/';$/;"	v
pubkey	recaptchalib.php	/^	if ($pubkey == '' || $pubkey == null || $privkey == "" || $privkey == null) {$/;"	v
pubkey	recaptchalib.php	/^	if ($pubkey == null || $pubkey == '') {$/;"	v
public_key	gravityforms.php	/^        $public_key = defined("GF_RECAPTCHA_PUBLIC_KEY") && empty($gf_recaptcha_public_key) ? GF_RECAPTCHA_PUBLIC_KEY : $gf_recaptcha_public_key;$/;"	v
publickey	common.php	/^                        $publickey = get_option("rg_gforms_captcha_public_key");$/;"	v
publickey	js.php	/^            $publickey = get_option("rg_gforms_captcha_public_key");$/;"	v
putAlignmentMarker	includes/phpqrcode/phpqrcode.php	/^        public static function putAlignmentMarker(array &$frame, $ox, $oy)$/;"	f
putAlignmentPattern	includes/phpqrcode/phpqrcode.php	/^        public static function putAlignmentPattern($version, &$frame, $width)$/;"	f
putFinderPattern	includes/phpqrcode/phpqrcode.php	/^        public static function putFinderPattern(&$frame, $ox, $oy)$/;"	f
put_entries	includes/webapi/webapi.php	/^        public function put_entries($data, $entry_id = null) {$/;"	f
put_entry_properties	includes/webapi/webapi.php	/^        public function put_entry_properties($property_values, $entry_id){$/;"	f
put_feeds	includes/webapi/webapi.php	/^        public function put_feeds($feed_data, $feed_id = null) {$/;"	f
put_forms	includes/webapi/webapi.php	/^        public function put_forms($data, $form_id = null) {$/;"	f
put_forms_properties	includes/webapi/webapi.php	/^        public function put_forms_properties($property_values, $form_id){$/;"	f
q	includes/phpqrcode/phpqrcode.php	/^                    $q = $p;$/;"	v
qrTab	includes/phpqrcode/phpqrcode.php	/^            $qrTab = QRcode::text($code, false, $eccLevel);$/;"	v
qrstr	includes/phpqrcode/phpqrcode.php	/^	class qrstr {$/;"	c
qty_input_type	common.php	/^                $qty_input_type = GFFormsModel::is_html5_enabled() ? "number" : "text";$/;"	v
quantity	common.php	/^                        $quantity = 1;$/;"	v
quantity	common.php	/^                    $quantity = trim($value[$field["id"] . ".3"]);$/;"	v
quantity	common.php	/^                $quantity = is_array($value) ? esc_attr($value[$field["id"] . ".3"]) : "";$/;"	v
quantity	common.php	/^                $quantity = is_array($value) ? esc_attr($value[$field["id"] . ".3"]) : "1";$/;"	v
quantity	common.php	/^                $quantity = sizeof($quantity_field) > 0 && !RGFormsModel::is_field_hidden($form, $quantity_field[0], array(), $lead) ? RGFormsModel::get_lead_field_value($lead, $quantity_field[0]) : 1;$/;"	v
quantity	form_display.php	/^                            $quantity = rgget($quantity_id, $value);$/;"	v
quantity	includes/addon/class-gf-feed-addon.php	/^			$quantity      = $product['quantity'] ? $product['quantity'] : 1;$/;"	v
quantity	includes/addon/class-gf-payment-addon.php	/^            $quantity = $product["quantity"] ? $product["quantity"] : 1;$/;"	v
quantity	js/forms.js	/^    "quantity"  :       ".product_field_setting, .quantity_field_type_setting, .conditional_logic_field_setting, .prepopulate_field_setting, .label_setting, .admin_label_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
quantity_class	form_display.php	/^        $quantity_class = $field["type"] == "quantity" ? "gfield_price gfield_price{$product_suffix} gfield_quantity{$product_suffix}" : "";$/;"	v
quantity_field	common.php	/^                    $quantity_field  = " <span class='ginput_quantity_label' {$style}>" . apply_filters("gform_product_quantity_{$form_id}",apply_filters("gform_product_quantity",__("Quantity:", "gravityforms"), $form_id), $form_id) . "<\/span> <input type='{$qty_input_type}' name='input_{$id}.3' value='{$quantity}' id='ginput_quantity_{$form_id}_{$field["id"]}' class='ginput_quantity' size='10' \/>";$/;"	v
quantity_field	common.php	/^                $quantity_field = "";$/;"	v
quantity_field	common.php	/^                $quantity_field = $has_quantity_field ? "" : "<input type='hidden' name='input_{$id}.3' value='" . esc_attr($quantity) . "' id='ginput_quantity_{$form_id}_{$field["id"]}' class='gform_hidden' \/>";$/;"	v
quantity_field	common.php	/^                $quantity_field = self::get_product_fields_by_type($form, array("quantity"), $id);$/;"	v
quantity_id	form_display.php	/^                            $quantity_id = $field["id"] . ".3";$/;"	v
query	export.php	/^                            $query = array_merge($query, $tab["query"]);$/;"	v
query	export.php	/^                        $query = array("view" => $tab["name"]);$/;"	v
query	form_settings.php	/^                            $query = array_merge($query, $tab["query"]);$/;"	v
query	form_settings.php	/^                        $query = array("subview" => $tab["name"]);$/;"	v
query_matches	includes/addon/class-gf-addon.php	/^                $query_matches = isset($condition["query"]) ? $this->_request_condition_matches($_GET, $condition["query"]) : true;$/;"	v
query_string	entry_list.php	/^                                    $query_string = "gf_entries&view=entry&id={$form_id}&lid={$lead["id"]}{$search_qs}{$sort_qs}{$dir_qs}{$filter_qs}&paged=" . ($page_index + 1);$/;"	v
query_string	form_display.php	/^			$query_string  = rgar( $url_info, 'query' );$/;"	v
query_table_name	gravityforms.php	/^                $query_table_name = trim($matches[1], '`' );$/;"	v
query_vars	includes/webapi/webapi.php	/^        public function query_vars($query_vars) {$/;"	f
queue	gravityforms.php	/^        $queue = array();$/;"	v
r	common.php	/^        $r = hexdec($r); $g = hexdec($g); $b = hexdec($b);$/;"	v
r	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f
radio	js/forms.js	/^    "radio" :           ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .choices_setting, .rules_setting, .visibility_setting, .duplicate_setting, .description_setting, .css_class_setting, .other_choice_setting",$/;"	p	class:fieldSettings
radio_value	includes/addon/class-gf-addon.php	/^                $radio_value = isset($choice["value"]) ? $choice["value"] : $choice["label"];$/;"	v
range	form_display.php	/^            $range = self::get_limit_period_dates($period);$/;"	v
range_max	entry_list.php	/^			$range_max = '<span id="paging_range_max_' . $which . '">';$/;"	v
range_min	entry_list.php	/^			$range_min = '<span id="paging_range_min_' . $which . '">' . ($first_item_index + 1) . "<\/span>";$/;"	v
raw	includes/phpqrcode/phpqrcode.php	/^            $raw = new QRrawcode($input);$/;"	v
raw	includes/phpqrcode/phpqrcode.php	/^        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	f
raw_field_value	common.php	/^                    $raw_field_value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
raw_response	common.php	/^            $raw_response = null;$/;"	v
raw_response	common.php	/^            $raw_response = self::post_to_manager("version.php", $nocache, $options);$/;"	v
raw_response	common.php	/^            $raw_response = wp_remote_post($request_url, $options);$/;"	v
raw_response	common.php	/^        $raw_response = get_transient("gform_update_info");$/;"	v
raw_response	common.php	/^        $raw_response = self::post_to_manager("message.php", GFCommon::get_remote_request_params(), $options);$/;"	v
raw_response	common.php	/^        $raw_response = wp_remote_post($request_url, $options);$/;"	v
raw_response	common.php	/^       $raw_response = self::post_to_manager("api.php", "op=get_key&key={$key}", $options);$/;"	v
raw_response	gravityforms.php	/^			$raw_response = GFCommon::post_to_manager("api.php", "op=get_plugin&slug={$args->slug}", array());$/;"	v
raw_response	gravityforms.php	/^        $raw_response = GFCommon::post_to_manager("api.php", "op=get_plugins", array());$/;"	v
raw_response	gravityforms.php	/^        $raw_response = GFCommon::post_to_manager("api.php", "op=plugin_browser&{$_SERVER["QUERY_STRING"]}", $options);$/;"	v
raw_response	gravityforms.php	/^       $raw_response = GFCommon::post_to_manager("changelog.php", GFCommon::get_remote_request_params(), $options);$/;"	v
raw_response	includes/addon/class-gf-auto-upgrade.php	/^        $raw_response = GFCommon::post_to_manager("changelog.php", $this->get_remote_request_params($this->_slug, $key, $this->_version), $options);$/;"	v
raw_response	settings.php	/^        $raw_response = GFCommon::post_to_manager("api.php", "op=upgrade_message&key=" . GFCommon::get_key(), $options);$/;"	v
raw_value	common.php	/^                $raw_value = $value;$/;"	v
raw_value	form_display.php	/^                            $raw_value = $_POST["input_" . $field["id"]]; \/\/Raw value will be tested against the is_numeric() function to make sure it is in the right format.$/;"	v
read	entry_detail.php	/^        $read = $filter == "unread" ? 0 : null;$/;"	v
read	entry_list.php	/^        $read = $filter == "unread" ? 0 : null;$/;"	v
read	gravityforms.php	/^            $read = $filter == "unread" ? 0 : null;$/;"	v
read	print-entry.php	/^    $read = $filter == "unread" ? 0 : null;$/;"	v
read_only	common.php	/^                        $read_only = 'readonly="readonly"';$/;"	v
read_only	common.php	/^                $read_only = "";$/;"	v
read_qs	entry_list.php	/^        $read_qs = $read !== null ? "&read=$read" : "";$/;"	v
read_value_from_post	forms_model.php	/^			$read_value_from_post = $is_new_lead || ! isset( $lead[ 'date_created' ] );$/;"	v
recalculate_total	forms_model.php	/^        $recalculate_total = false;$/;"	v
recaptcha_check_answer	recaptchalib.php	/^function recaptcha_check_answer ($privkey, $remoteip, $challenge, $response, $extra_params = array())$/;"	f
recaptcha_get_html	recaptchalib.php	/^function recaptcha_get_html ($pubkey, $error = null, $use_ssl = false, $lang='en')$/;"	f
recaptcha_get_signup_url	recaptchalib.php	/^function recaptcha_get_signup_url ($domain = null, $appname = null) {$/;"	f
recaptcha_mailhide_html	recaptchalib.php	/^function recaptcha_mailhide_html($pubkey, $privkey, $email) {$/;"	f
recaptcha_mailhide_url	recaptchalib.php	/^function recaptcha_mailhide_url($pubkey, $privkey, $email) {$/;"	f
recaptcha_response	recaptchalib.php	/^		$recaptcha_response = new ReCaptchaResponse();$/;"	v
recaptcha_response	recaptchalib.php	/^	$recaptcha_response = new ReCaptchaResponse();$/;"	v
received	includes/locking/class-gf-locking.php	/^            $received                         = $data['gform-refresh-nonces'];$/;"	v
received	includes/locking/class-gf-locking.php	/^            $received = $data[$heartbeat_key];$/;"	v
recordFormState	includes/addon/js/gaddon_results.js	/^    recordFormState: function () {$/;"	m	class:gresults
recurring_amount_choices	includes/addon/class-gf-payment-addon.php	/^    protected function recurring_amount_choices(){$/;"	f
recurring_choices	includes/addon/class-gf-payment-addon.php	/^        $recurring_choices = $this->get_payment_choices($form);$/;"	v
recursive_add_index_file	common.php	/^    public static function recursive_add_index_file($dir) {$/;"	f
red	includes/addon/class-gf-results.php	/^                            $red     = (int)(($xr + (($percent * ($yr - $xr)) \/ ($n - 1))));$/;"	v
redirect_url	includes/addon/class-gf-addon-locking.php	/^        $redirect_url = isset($config["redirect_url"]) ? $config["redirect_url"] : "";$/;"	v
redirect_url	includes/addon/class-gf-payment-addon.php	/^			$this->redirect_url = $this->redirect_url( $feed, $this->current_submission_data, $form, $entry );$/;"	v
redirect_url	includes/addon/class-gf-payment-addon.php	/^	protected $redirect_url = '';$/;"	v
redirect_url	includes/addon/class-gf-payment-addon.php	/^    protected function redirect_url($feed, $submission_data, $form, $entry){$/;"	f
redirect_url	includes/locking/locking.php	/^        $redirect_url = admin_url("admin.php?page=gf_edit_forms");$/;"	v
redirect_url	includes/locking/locking.php	/^        $redirect_url = admin_url("admin.php?page=gf_entries");$/;"	v
reflector	includes/addon/class-gf-addon.php	/^        $reflector = new ReflectionMethod($this, $method_name);$/;"	v
refresh_lead_field_value	forms_model.php	/^    public static function refresh_lead_field_value($lead_id, $field_id){$/;"	f
refresh_product_cache	forms_model.php	/^    public static function refresh_product_cache($form, $lead, $use_choice_text = false, $use_admin_label = false) {$/;"	f
refund_payment	includes/addon/class-gf-payment-addon.php	/^    public function refund_payment( $entry, $action ) {$/;"	f
regex	form_display.php	/^                            $regex = '\/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$\/';$/;"	v
register	includes/addon/class-gf-addon.php	/^	public static function register( $class, $overrides = null ){$/;"	f
register_callback	includes/addon/class-gf-payment-addon.php	/^    protected function register_callback($callback_id, $entry_id){$/;"	f
register_form_init_scripts	form_display.php	/^    private static function register_form_init_scripts( $form, $field_values = array(), $is_ajax = false ) {$/;"	f
register_noconflict_scripts	includes/addon/class-gf-addon.php	/^    public function register_noconflict_scripts($scripts) {$/;"	f
register_noconflict_scripts	includes/locking/class-gf-locking.php	/^    public function register_noconflict_scripts($scripts) {$/;"	f
register_noconflict_styles	includes/addon/class-gf-addon.php	/^    public function register_noconflict_styles($styles) {$/;"	f
register_noconflict_styles	includes/locking/class-gf-locking.php	/^    public function register_noconflict_styles($styles) {$/;"	f
register_scripts	gravityforms.php	/^    public static function register_scripts() {$/;"	f
register_scripts	includes/locking/class-gf-locking.php	/^    public function register_scripts() {$/;"	f
registered	gravityforms.php	/^        $registered = array();$/;"	v
remPos	includes/phpqrcode/phpqrcode.php	/^                    $remPos = rand (0, count($checked_masks)-1);$/;"	v
remain	includes/phpqrcode/phpqrcode.php	/^                    $remain = $payload - $chunks * 10;$/;"	v
remain	includes/phpqrcode/phpqrcode.php	/^                    $remain = $payload - $chunks * 11;$/;"	v
remoteip	recaptchalib.php	/^	if ($remoteip == null || $remoteip == '') {$/;"	v
removeInputErrorIcons	form_list.php	/^            function removeInputErrorIcons( elem ) {$/;"	f
remove_currency_symbol	common.php	/^    public static function remove_currency_symbol($value, $currency = null){$/;"	f
remove_field	includes/addon/class-gf-addon.php	/^    protected function remove_field( $name, $settings ) {$/;"	f
renderStateData	includes/addon/js/gaddon_results.js	/^    renderStateData: function (state) {$/;"	m	class:gresults
render_settings	includes/addon/class-gf-addon.php	/^    protected function render_settings( $sections ) {$/;"	f
render_uninstall	includes/addon/class-gf-addon.php	/^    public function render_uninstall(){$/;"	f
render_uninstall	includes/webapi/webapi.php	/^        public function render_uninstall() {$/;"	f
replLen	includes/phpqrcode/phpqrcode.php	/^		public static function set(&$srctab, $x, $y, $repl, $replLen = false) {$/;"	v
replace_field	includes/addon/class-gf-addon.php	/^    protected function replace_field( $name, $fields, $settings ) {$/;"	f
replace_variables	common.php	/^    public static function replace_variables($text, $form, $lead, $url_encode = false, $esc_html=true, $nl2br = true, $format="html"){$/;"	f
replace_variables_post_image	common.php	/^    public static function replace_variables_post_image($text, $post_images, $lead){$/;"	f
replace_variables_prepopulate	common.php	/^    public static function replace_variables_prepopulate($text, $url_encode=false, $entry=false){$/;"	f
replyTo	common.php	/^        $replyTo = GFCommon::replace_variables(rgar($notification, "replyTo"), $form, $lead, false, false);$/;"	v
replyTo	common.php	/^        $replyTo = rgempty("replyToField", $form["notification"]) ? rgget("replyTo", $form["notification"]): rgget($form["notification"]["replyToField"], $lead);$/;"	v
reply_to	common.php	/^        $reply_to = GFCommon::replace_variables($replyTo, $form, $lead, false, false);$/;"	v
reply_to	common.php	/^        $reply_to = GFCommon::replace_variables(rgget("replyTo", $form["autoResponder"]), $form, $lead, false, false);$/;"	v
req	recaptchalib.php	/^	$req = "";$/;"	v
req	recaptchalib.php	/^	$req = _recaptcha_qsencode ($data);$/;"	v
req	recaptchalib.php	/^	$req=substr($req,0,strlen($req)-1);$/;"	v
request_lock	includes/locking/class-gf-locking.php	/^    protected function request_lock($object_id) {$/;"	f
request_url	common.php	/^            $request_url = GRAVITY_MANAGER_PROXY_URL . "\/proxy.php?f=" . $file . "&" . $query;$/;"	v
request_url	common.php	/^        $request_url = GRAVITY_MANAGER_URL . "\/" . $file . "?" . $query;$/;"	v
require_login_checked	form_settings.php	/^			$require_login_checked = 'checked="checked"';$/;"	v
require_login_checked	form_settings.php	/^        $require_login_checked = "";$/;"	v
require_login_style	form_settings.php	/^			$require_login_style = "display:none";$/;"	v
require_login_style	form_settings.php	/^        $require_login_style = "";$/;"	v
required	includes/addon/class-gf-addon.php	/^            $required = rgar( $child_field, 'required' ) ? $this->get_required_indicator( $child_field ) : '';$/;"	v
required_class	form_display.php	/^        $required_class = rgar($field, "isRequired") ? "gfield_contains_required" : "";$/;"	v
required_div	form_display.php	/^        $required_div = IS_ADMIN || rgar($field, "isRequired") ? sprintf("<span class='gfield_required'>%s<\/span>", rgar($field, "isRequired") ? "*" : "") : "";$/;"	v
required_fields	common.php	/^        $required_fields = $optional_fields = $pricing_fields = array();$/;"	v
required_group	common.php	/^                $required_group = array_merge($required_group, self::get_field_merge_tags($field, $option));$/;"	v
required_objects	gravityforms.php	/^        $required_objects = apply_filters("gform_noconflict_{$type}", $required_objects);$/;"	v
required_objects	gravityforms.php	/^        $required_objects = array_merge($wp_required_objects, $gf_required_objects["common"], $page_objects);$/;"	v
required_objects	gravityforms.php	/^        $required_objects = self::add_script_dependencies($wp_objects->registered, $required_objects);$/;"	v
requires_credit_card_message	includes/addon/class-gf-payment-addon.php	/^    public function requires_credit_card_message() {$/;"	f
requires_gf_vars	common.php	/^    private static function requires_gf_vars() {$/;"	f
requires_valid_number	form_display.php	/^                            $requires_valid_number = !rgblank($raw_value) && !GFCommon::has_field_calculation($field);$/;"	v
resend_notifications	gravityforms.php	/^    public static function resend_notifications(){$/;"	f
resetNewFormModal	form_list.php	/^            function resetNewFormModal() {$/;"	f
resetPrintUI	entry_list.php	/^            function resetPrintUI(){$/;"	f
resetResendNotificationsUI	entry_list.php	/^            function resetResendNotificationsUI(){$/;"	f
resp	form_display.php	/^                                    $resp = recaptcha_check_answer ($privatekey,$/;"	v
response	common.php	/^			$response = Akismet::http_post($fields, 'comment-check');$/;"	v
response	common.php	/^        	$response = akismet_http_post($fields, $akismet_api_host, '\/1.1\/comment-check', $akismet_api_port );$/;"	v
response	includes/addon/class-gf-results.php	/^            $response                   = array();$/;"	v
response	includes/locking/class-gf-locking.php	/^        $response  = $this->delete_lock_request_meta($object_id);$/;"	v
response	includes/locking/class-gf-locking.php	/^        $response  = $this->request_lock($object_id);$/;"	v
response	includes/webapi/webapi.php	/^                            $response = $this->filter_entry_object($response, $field_ids);$/;"	v
response	includes/webapi/webapi.php	/^                        $response = $result;$/;"	v
response	includes/webapi/webapi.php	/^                        $response = $this->get_error_response($result);$/;"	v
response	includes/webapi/webapi.php	/^                        $response = $this->mtd_transform_entries_data($response, $form_ids);$/;"	v
response	includes/webapi/webapi.php	/^                    $response = $this->get_error_response($result);$/;"	v
response	includes/webapi/webapi.php	/^                    $response = $this->mtd_transform_forms_data($response);$/;"	v
response	includes/webapi/webapi.php	/^                    $response = __("No property values were found in the request body", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                    $response = __("Property values should be sent as an array", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                    $response = __("Success", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                    $response = array("total_count" => $entry_count, "entries" => $result);$/;"	v
response	includes/webapi/webapi.php	/^                    $response = self::mtd_transform_entry_data($response);$/;"	v
response	includes/webapi/webapi.php	/^                $response = $feed_ids;$/;"	v
response	includes/webapi/webapi.php	/^                $response = $form_ids;$/;"	v
response	includes/webapi/webapi.php	/^                $response = $result;$/;"	v
response	includes/webapi/webapi.php	/^                $response = $this->get_error_response($form_ids);$/;"	v
response	includes/webapi/webapi.php	/^                $response = $this->get_error_response($result);$/;"	v
response	includes/webapi/webapi.php	/^                $response = __("Success", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                $response = empty($entry_id) ? __("Entries updated successfully", "gravityforms") : __("Entry updated successfully", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                $response = empty($form_id) ? __("Forms updated successfully", "gravityforms") : __("Form updated successfully", "gravityforms");$/;"	v
response	includes/webapi/webapi.php	/^                $response = sprintf(__("Entries deleted successfully: %d", "gravityforms"), $count);$/;"	v
response	includes/webapi/webapi.php	/^                $response = sprintf(__("Feeds deleted successfully: %d", "gravityforms"), $count);$/;"	v
response	includes/webapi/webapi.php	/^                $response = sprintf(__("Feeds updated: %d", "gravityforms"), $count);$/;"	v
response	includes/webapi/webapi.php	/^                $response = sprintf(__("Forms deleted successfully: %d", "gravityforms"), $count);$/;"	v
response	includes/webapi/webapi.php	/^            $response = array();$/;"	v
response	includes/webapi/webapi.php	/^            $response = false === empty($feed_ids) && false === is_array($feed_ids) && is_array($output) ? array_shift($output) : "";$/;"	v
response	recaptchalib.php	/^	$response = '';$/;"	v
response	recaptchalib.php	/^	$response = _recaptcha_http_post (RECAPTCHA_VERIFY_SERVER, "\/recaptcha\/api\/verify",$/;"	v
response	recaptchalib.php	/^	$response = explode("\\r\\n\\r\\n", $response, 2);$/;"	v
response	recaptchalib.php	/^	if ($challenge == null || strlen($challenge) == 0 || $response == null || strlen($response) == 0) {$/;"	v
restore_form	forms_model.php	/^    public static function restore_form($form_id){$/;"	f
restore_forms	forms_model.php	/^    public static function restore_forms($form_ids){$/;"	f
result	common.php	/^        $result = apply_filters( 'gform_calculation_result', $result, $formula, $field, $form, $lead );$/;"	v
result	common.php	/^        $result = preg_match( '\/^[0-9 -\\\/*\\(\\)]+$\/', $formula ) ? eval( "return {$formula};" ) : false;$/;"	v
result	entry_detail.php	/^                    $result = wp_mail( $email_to, $email_subject, $body, $headers );$/;"	v
result	form_detail.php	/^        $result = self::save_form_info($id, $form_json);$/;"	v
result	form_display.php	/^                                        $result = $first + $second;$/;"	v
result	form_display.php	/^                                        $result = $first - $second;$/;"	v
result	form_list.php	/^            $result = array( 'error' => __( 'Please enter a form title.', 'gravityforms' ) );$/;"	v
result	form_list.php	/^        $result = GFFormDetail::save_form_info( 0, $form_json );$/;"	v
result	form_settings.php	/^        $result = GFFormsModel::save_form_confirmations($form['id'], $form['confirmations']);$/;"	v
result	forms_model.php	/^                    $result = $wpdb->insert($lead_detail_long_table, array("lead_detail_id" => $lead_detail_id, "value" => $value), array("%d", "%s"));$/;"	v
result	forms_model.php	/^                    $result = $wpdb->query($sql);$/;"	v
result	forms_model.php	/^                    $result = $wpdb->update($lead_detail_long_table, array("value" => $value), array("lead_detail_id" => $lead_detail_id), array("%s"), array("%d"));$/;"	v
result	forms_model.php	/^                $result = $wpdb->insert($lead_detail_table, array("lead_id" => $lead_id, "form_id" => $form_id, "field_number" => $input_id, "value" => $truncated_value), array("%d", "%d", "%F", "%s"));$/;"	v
result	forms_model.php	/^                $result = $wpdb->update($lead_detail_table, array("value" => $truncated_value), array("id" => $lead_detail_id), array("%s"), array("%d"));$/;"	v
result	forms_model.php	/^            $result = $form;$/;"	v
result	forms_model.php	/^            $result = $wpdb->query( $wpdb->prepare("INSERT INTO $meta_table_name(form_id, $meta_name) VALUES(%d, %s)", $form_id, $form_meta ) );$/;"	v
result	forms_model.php	/^            $result = $wpdb->query( $wpdb->prepare("UPDATE $meta_table_name SET $meta_name=%s WHERE form_id=%d", $form_meta, $form_id) );$/;"	v
result	forms_model.php	/^            $result = $wpdb->query($sql);$/;"	v
result	forms_model.php	/^        $result = $wpdb->query($sql);$/;"	v
result	forms_model.php	/^        $result = $wpdb->update($lead_table, array($property_name => $property_value ), array("id" => $lead_id));$/;"	v
result	forms_model.php	/^        $result = GFFormsModel::update_form_meta($form_id, $form["confirmations"], "confirmations");$/;"	v
result	forms_model.php	/^        $result = GFFormsModel::update_form_meta($form_id, $form["notifications"], "notifications");$/;"	v
result	gravityforms.php	/^            $result = GFFormDisplay::get_form($form_id, $title, $description, false, $_POST["gform_field_values"], true, $tabindex);$/;"	v
result	gravityforms.php	/^        $result = $wpdb->query("UPDATE $lead_details_long_table SET value = TRIM(value)");$/;"	v
result	gravityforms.php	/^        $result = $wpdb->query("UPDATE $lead_details_table SET value = TRIM(value)");$/;"	v
result	includes/addon/class-gf-addon.php	/^                $result = $this->save_form_settings($form, $settings);$/;"	v
result	includes/addon/class-gf-addon.php	/^            $result = false;$/;"	v
result	includes/addon/class-gf-addon.php	/^        $result = GFFormsModel::update_form_meta($form["id"], $form);$/;"	v
result	includes/addon/class-gf-feed-addon.php	/^            $result = $feed_id;$/;"	v
result	includes/addon/class-gf-feed-addon.php	/^            $result = $this->insert_feed( $form_id, true, $settings );$/;"	v
result	includes/addon/class-gf-feed-addon.php	/^        $result = false;$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^	        $result = GFAPI::update_entry( $entry );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^                $result = call_user_func_array(array( $this, $action['callback']),array($entry, $action));$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->add_pending_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->add_subscription_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->cancel_subscription( $entry, $feed, $action["note"] );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->complete_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->expire_subscription( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->fail_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->fail_subscription_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->format_chart_h_axis($result);$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->process_callback_action( $callback_action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->refund_payment( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->start_subscription($entry, $action);$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = $this->void_authorization( $entry, $action );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = wp_delete_post( $post_id );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^            $result = wp_update_post( $post );$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^        $result = array("today"     => array("revenue" => GFCommon::to_money(0), "orders" => 0, "subscriptions" => 0),$/;"	v
result	includes/addon/class-gf-payment-addon.php	/^        $result = false;$/;"	v
result	includes/api.php	/^                        $result = GFFormsModel::update_lead_field_value($form, $entry, $field, $lead_detail_id, $input_id, $entry[$input_id]);$/;"	v
result	includes/api.php	/^                        $result = GFFormsModel::update_lead_field_value($form, $entry, $field, 0, $input_id, $entry[(string)$input_id]);$/;"	v
result	includes/api.php	/^                $result = GFFormsModel::update_lead_field_value($form, $entry, $field, $lead_detail_id, $field_id, $field_value);$/;"	v
result	includes/api.php	/^                $result = GFFormsModel::update_lead_field_value($form, $entry, $field, 0, $field_id, $field_value);$/;"	v
result	includes/api.php	/^            $result = GFFormsModel::update_lead_field_value($form, $entry, $field, $lead_detail_id, $k, "");$/;"	v
result	includes/api.php	/^            $result = self::add_entry($entry);$/;"	v
result	includes/api.php	/^            $result = self::add_form($form);$/;"	v
result	includes/api.php	/^            $result = self::update_entry($entry, $entry["id"]);$/;"	v
result	includes/api.php	/^            $result = self::update_form($form);$/;"	v
result	includes/api.php	/^        $result          = $wpdb->get_var($wpdb->prepare(" SELECT count(id) FROM {$form_table_name}$/;"	v
result	includes/api.php	/^        $result          = intval($result);$/;"	v
result	includes/api.php	/^        $result     = $wpdb->query($wpdb->prepare("$/;"	v
result	includes/api.php	/^        $result     = $wpdb->query($wpdb->prepare($/;"	v
result	includes/api.php	/^        $result    = $wpdb->query($wpdb->prepare("UPDATE $form_table_name SET title=%s, is_active=%s WHERE id=%d", $form_meta["title"], $is_active, $form_meta["id"]));$/;"	v
result	includes/api.php	/^        $result = GFFormsModel::update_form_meta($form_id, $form_meta);$/;"	v
result	includes/api.php	/^        $result = self::delete_forms(array($form_id));$/;"	v
result	includes/locking/class-gf-locking.php	/^        $result = array();$/;"	v
result	includes/webapi/webapi.php	/^                        $result = GFAPI::delete_feed($feed_id);$/;"	v
result	includes/webapi/webapi.php	/^                        $result = GFAPI::get_entry($entry_id);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::delete_entry($entry_id);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::delete_feed($feed["id"]);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::delete_feed($feed_ids);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::delete_form($form_id);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::get_entry($entry_ids);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::get_form($form_ids);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::update_entry_property($entry_id, $key, $property_value);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = GFAPI::update_feed($feed["id"], $feed["meta"], $feed["form_id"]);$/;"	v
result	includes/webapi/webapi.php	/^                    $result = new WP_Error("missing_form_id", __("Missing form id", "gravityforms"));$/;"	v
result	includes/webapi/webapi.php	/^                $result = $entry_count > 0 ? GFAPI::get_entries($form_ids, $search, $sorting, $paging) : array();$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::add_feed($f_id, $feed["meta"], $addon_slug);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::delete_entry($entry_ids);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::delete_form($form_ids);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::update_feed($feed_id, $feed_data["meta"], $feed_data["form_id"]);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::update_form($data, $form_id);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::update_form_property($form_id, $key, $property_value);$/;"	v
result	includes/webapi/webapi.php	/^                $result = GFAPI::update_forms($data);$/;"	v
result	includes/webapi/webapi.php	/^            $result   = array();$/;"	v
result	includes/webapi/webapi.php	/^            $result = $wpdb->get_var($sql);$/;"	v
result	includes/webapi/webapi.php	/^            $result = $wpdb->query($sql);$/;"	v
result	includes/webapi/webapi.php	/^            $result = GFAPI::add_entries($data, $form_id);$/;"	v
result	includes/webapi/webapi.php	/^            $result = add_option($key, $data, '', 'no');$/;"	v
result	includes/webapi/webapi.php	/^            $result = array();$/;"	v
result	includes/webapi/webapi.php	/^            $result = empty($entry_id) ? GFAPI::update_entries($data) : $result = GFAPI::update_entry($data, $entry_id);;$/;"	v
results	export.php	/^            $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	forms_model.php	/^         $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_col($sql);$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results(" SELECT display_meta, confirmations, notifications FROM {$form_table_name} f$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results("$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results($sql);$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results($wpdb->prepare("  SELECT l.*, field_number, value$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results($wpdb->prepare("SELECT * FROM $table_name WHERE id=%d {$trash_clause}", $form_id));$/;"	v
results	forms_model.php	/^        $results = $wpdb->get_results($wpdb->prepare("SELECT id FROM {$wpdb->prefix}rg_lead WHERE form_id=%d {$status_filter}", $form_id), ARRAY_A);$/;"	v
results	forms_model.php	/^    $results = $wpdb->get_results($sql_query);$/;"	v
results	forms_model.php	/^    $results = $wpdb->get_results($wpdb->prepare("SELECT meta_value FROM {$table_name} WHERE lead_id=%d AND meta_key=%s", $entry_id, $meta_key));$/;"	v
results	gravityforms.php	/^        $results = $wpdb->get_results("SELECT form_id, display_meta, confirmations, notifications FROM {$meta_table_name}", ARRAY_A);$/;"	v
results	gravityforms.php	/^        $results = $wpdb->get_results($sql);$/;"	v
results	includes/addon/class-gf-feed-addon.php	/^		$results = $wpdb->get_results( $sql, ARRAY_A );$/;"	v
results	includes/addon/class-gf-feed-addon.php	/^        $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	includes/addon/class-gf-payment-addon.php	/^        $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	includes/addon/class-gf-results.php	/^                    $results          = $field_data[$field["id"]];$/;"	v
results	includes/addon/class-gf-results.php	/^                    $results       = $field_data[$field["id"]];$/;"	v
results	includes/addon/class-gf-results.php	/^                    $results = $field_data[$field["id"]];$/;"	v
results	includes/api.php	/^        $results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
results	includes/api.php	/^        $results = $wpdb->query($sql);$/;"	v
results	includes/webapi/webapi.php	/^                            $results = $data;$/;"	v
results	includes/webapi/webapi.php	/^                        $results = $data;$/;"	v
results	includes/webapi/webapi.php	/^                        $results = $state;$/;"	v
results	includes/webapi/webapi.php	/^                    $results            = $gf_results->get_results_data($form, $fields, $search_criteria, $state, $max_execution_time);$/;"	v
results	includes/webapi/webapi.php	/^                $results    = $gf_results->get_results_data($form, $fields, $search_criteria, $state);$/;"	v
results	includes/webapi/webapi.php	/^                $results = $data;$/;"	v
results_cache_exists	includes/webapi/webapi.php	/^        public function results_cache_exists($form_id) {$/;"	f
results_capabilities	includes/addon/class-gf-addon.php	/^            $results_capabilities = rgar($results_page_config, "capabilities");$/;"	v
results_cron	includes/webapi/webapi.php	/^        public function results_cron($form, $fields, $search_criteria) {$/;"	f
results_cron_is_scheduled	includes/webapi/webapi.php	/^        public function results_cron_is_scheduled($form, $fields, $search_criteria) {$/;"	f
results_data	includes/addon/class-gf-payment-addon.php	/^    public function results_data($form, $fields, $search_criteria, $state_array) {$/;"	f
results_data_add_labels	includes/webapi/webapi.php	/^        public function results_data_add_labels($form, $fields) {$/;"	f
results_fields	includes/addon/class-gf-payment-addon.php	/^	public function results_fields($form) {$/;"	f
results_fields	includes/addon/class-gf-results.php	/^            $results_fields = $this->get_fields($form_meta);$/;"	v
results_filter_ui	includes/addon/class-gf-payment-addon.php	/^    public function results_filter_ui($filter_ui, $form_id, $page_title, $gf_page, $gf_view){$/;"	f
results_for_choice	includes/addon/class-gf-results.php	/^                                $results_for_choice = rgar($results_row, $choice_value);$/;"	v
results_markup	includes/addon/class-gf-payment-addon.php	/^    public function results_markup($html, $data, $form, $fields){$/;"	f
results_page	includes/addon/class-gf-results.php	/^        public function results_page($form_id, $page_title, $gf_page, $gf_view) {$/;"	f
results_page_config	includes/addon/class-gf-addon.php	/^            $results_page_config = $this->get_results_page_config();$/;"	v
results_page_init	includes/addon/class-gf-addon.php	/^    protected function results_page_init($results_page_config) {$/;"	f
results_row	includes/addon/class-gf-results.php	/^                                $results_row        = rgar($results, $row_value);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                        case QR_MODE_8:            $ret = $this->encodeMode8($version);    break;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                        case QR_MODE_AN:        $ret = $this->encodeModeAn($version);    break;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                        case QR_MODE_KANJI:        $ret = $this->encodeModeKanji($version);break;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                        case QR_MODE_NUM:        $ret = $this->encodeModeNum($version);    break;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                        case QR_MODE_STRUCTURE:    $ret = $this->encodeModeStructure();    break;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                    $ret = 0;$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                $ret = $bstream->append($item->bstream);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                $ret = $padding->appendBytes($padlen, $padbuf);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                $ret = $this->rsblocks[$row]->data[$col];$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^                $ret = $this->rsblocks[$row]->ecc[$col];$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $bstream->append($padding);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string));$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $padding->appendNum($words * 8 - $bits + 4, 0);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->append($b);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->appendPaddingBit($bstream);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->init($spec);$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr));$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr));$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr));$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr));$/;"	v
ret	includes/phpqrcode/phpqrcode.php	/^            $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive);$/;"	v
return	js/chosen.jquery.min.js	/^!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":\/[\\&\\<\\>\\"\\'\\`]\/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=\/&(?!\\w+;)|[\\<\\>\\"\\'\\`]\/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1\/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(\/[-[\\]{}()*+?.,\\\\^$|#\\s]\/g,"\\\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"<\/em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(\/\\[|\\]\/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:\/iP(od|hone)\/i.test(window.navigator.userAgent)?!1:\/Android\/i.test(window.navigator.userAgent)&&\/Mobile\/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(\/[^\\w]\/g,"_")+"_chosen"),this.container=a("<div \/>",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" \/><\/li><\/ul><div class="chosen-drop"><ul class="chosen-results"><\/ul><\/div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'<\/span><div><b><\/b><\/div><\/a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" \/><\/div><ul class="chosen-results"><\/ul><\/div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li \/>",{"class":"search-choice"}).html("<span>"+b.html+"<\/span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a \/>",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"><\/abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div\/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span><\/span>"<\/li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div \/>",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);/;"	c	class:SelectParser
return	js/chosen.jquery.min.js	/^!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":\/[\\&\\<\\>\\"\\'\\`]\/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=\/&(?!\\w+;)|[\\<\\>\\"\\'\\`]\/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1\/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(\/[-[\\]{}()*+?.,\\\\^$|#\\s]\/g,"\\\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"<\/em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(\/\\[|\\]\/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:\/iP(od|hone)\/i.test(window.navigator.userAgent)?!1:\/Android\/i.test(window.navigator.userAgent)&&\/Mobile\/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(\/[^\\w]\/g,"_")+"_chosen"),this.container=a("<div \/>",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" \/><\/li><\/ul><div class="chosen-drop"><ul class="chosen-results"><\/ul><\/div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'<\/span><div><b><\/b><\/div><\/a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" \/><\/div><ul class="chosen-results"><\/ul><\/div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li \/>",{"class":"search-choice"}).html("<span>"+b.html+"<\/span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a \/>",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"><\/abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div\/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span><\/span>"<\/li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div \/>",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);/;"	c
rewrite_rules	includes/webapi/webapi.php	/^        public function rewrite_rules($rules) {$/;"	f
rg_plugin_row	includes/addon/class-gf-auto-upgrade.php	/^    public function rg_plugin_row() {$/;"	f
rgar	gravityforms.php	/^function rgar($array, $name){$/;"	f
rgar	xml.php	/^function rgar($array, $name){$/;"	f
rgars	gravityforms.php	/^function rgars($array, $name){$/;"	f
rgblank	gravityforms.php	/^function rgblank($text){$/;"	f
rgempty	gravityforms.php	/^function rgempty( $name, $array = null ) {$/;"	f
rgexplode	gravityforms.php	/^function rgexplode($sep, $string, $count){$/;"	f
rgget	gravityforms.php	/^function rgget($name, $array=null){$/;"	f
rgobj	gravityforms.php	/^function rgobj($obj, $name){$/;"	f
rgpost	gravityforms.php	/^function rgpost($name, $do_stripslashes=true){$/;"	f
round_number	common.php	/^    public static function round_number($number, $rounding ){$/;"	f
route	includes/webapi/webapi.php	/^                $route = str_replace("." . $format, "", $route);$/;"	v
route	includes/webapi/webapi.php	/^            $route = get_query_var(GFWEBAPI_ROUTE_VAR);$/;"	v
route_parts	includes/webapi/webapi.php	/^            $route_parts = pathinfo($route);$/;"	v
routing	notification.php	/^                            $routing = $notification["routing"][$i];$/;"	v
routing	notification.php	/^        $routing = !empty($_POST["gform_routing_meta"]) ? GFCommon::json_decode(stripslashes($_POST["gform_routing_meta"]), true) : null;$/;"	v
routing_count	forms_model.php	/^            $routing_count = sizeof($form["notification"]["routing"]);$/;"	v
routing_fields	notification.php	/^                    $routing_fields = self::get_routing_fields($form,"0");$/;"	v
routing_list	notification.php	/^                        $routing_list = ",";$/;"	v
row	forms_model.php	/^                $row = array();$/;"	v
row	includes/addon/class-gf-feed-addon.php	/^        $row = $wpdb->get_row( $sql, ARRAY_A );$/;"	v
row	includes/phpqrcode/phpqrcode.php	/^                $row = $this->count % $this->blocks;$/;"	v
row	includes/phpqrcode/phpqrcode.php	/^                $row = ($this->count - $this->dataLength) % $this->blocks;$/;"	v
row_class	form_detail.php	/^        static $row_class = '';$/;"	v
row_class	form_settings.php	/^        $row_class = ( $row_class == '' ? ' class="alternate"' : '' );$/;"	v
row_class	form_settings.php	/^        static $row_class = '';$/;"	v
row_class	notification.php	/^        $row_class = ( $row_class == '' ? ' class="alternate"' : '' );$/;"	v
row_class	notification.php	/^        static $row_class = '';$/;"	v
row_count	forms_model.php	/^            $row_count = count($value)\/$col_count;$/;"	v
row_counts	export.php	/^        $row_counts = array();$/;"	v
row_str	export.php	/^                            $row_str = implode("|", $row_values);$/;"	v
row_text	includes/addon/class-gf-results.php	/^                        $row_text  = $row["text"];$/;"	v
row_text	includes/webapi/webapi.php	/^                            $row_text       = GFSurvey::get_likert_row_text($field, $i++);$/;"	v
row_value	includes/addon/class-gf-results.php	/^                        $row_value = $row["value"];$/;"	v
row_values	export.php	/^                            $row_values = array_values($row);$/;"	v
rownum	common.php	/^                $rownum = 1;$/;"	v
rows	common.php	/^                $rows                 = rgar($field, "gsurveyLikertRows");$/;"	v
rows	forms_model.php	/^            $rows = array();$/;"	v
rows	forms_model.php	/^            $rows = explode(",", $value);$/;"	v
rows	forms_model.php	/^        $rows =  $wpdb->get_results($sql);$/;"	v
rows_deleted	common.php	/^        $rows_deleted = $wpdb->query($sql);$/;"	v
rs	includes/phpqrcode/phpqrcode.php	/^                $rs = NULL;$/;"	v
rs	includes/phpqrcode/phpqrcode.php	/^            $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);$/;"	v
rs	includes/phpqrcode/phpqrcode.php	/^            $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);$/;"	v
rs	includes/phpqrcode/phpqrcode.php	/^            $rs = new QRrsItem();$/;"	v
rs	includes/phpqrcode/phpqrcode.php	/^            $rs = null;$/;"	v
rsBlockNum	includes/phpqrcode/phpqrcode.php	/^        public static function rsBlockNum($spec)     { return $spec[0] + $spec[3]; }$/;"	f
rsBlockNum1	includes/phpqrcode/phpqrcode.php	/^        public static function rsBlockNum1($spec)    { return $spec[0]; }$/;"	f
rsBlockNum2	includes/phpqrcode/phpqrcode.php	/^        public static function rsBlockNum2($spec)    { return $spec[3]; }$/;"	f
rsDataCodes1	includes/phpqrcode/phpqrcode.php	/^        public static function rsDataCodes1($spec)   { return $spec[1]; }$/;"	f
rsDataCodes2	includes/phpqrcode/phpqrcode.php	/^        public static function rsDataCodes2($spec)   { return $spec[4]; }$/;"	f
rsDataLength	includes/phpqrcode/phpqrcode.php	/^        public static function rsDataLength($spec)   { return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);    }$/;"	f
rsEccCodes1	includes/phpqrcode/phpqrcode.php	/^        public static function rsEccCodes1($spec)    { return $spec[2]; }$/;"	f
rsEccCodes2	includes/phpqrcode/phpqrcode.php	/^        public static function rsEccCodes2($spec)    { return $spec[2]; }$/;"	f
rsEccLength	includes/phpqrcode/phpqrcode.php	/^        public static function rsEccLength($spec)    { return ($spec[0] + $spec[3]) * $spec[2]; }$/;"	f
rsblocks	includes/phpqrcode/phpqrcode.php	/^        public $rsblocks = array(); \/\/of RSblock$/;"	v
rule_count	forms_model.php	/^                $rule_count = sizeof($field["conditionalLogic"]["rules"]);$/;"	v
rules	form_display.php	/^        $rules = array();$/;"	v
rules	includes/webapi/webapi.php	/^				$rules = $gfapi_rules;$/;"	v
rules	includes/webapi/webapi.php	/^            	$rules = $gfapi_rules + $rules;$/;"	v
run	includes/phpqrcode/phpqrcode.php	/^            $run = $p;$/;"	v
runLength	includes/phpqrcode/phpqrcode.php	/^		public $runLength = array();$/;"	v
runLength	includes/phpqrcode/phpqrcode.php	/^            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);$/;"	v
s	includes/webapi/webapi.php	/^            $s = rgget("s"); \/\/ search criteria$/;"	v
s	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:r
safe_strlen	common.php	/^    public static function safe_strlen($string){$/;"	f
safe_substr	common.php	/^    public static function safe_substr($string, $start, $length = null){$/;"	f
sales_table	includes/addon/class-gf-payment-addon.php	/^            $sales_table = new GFPaymentStatsTable($data["table"]["header"], $data["data"], $data["row_count"], $data["page_size"]);$/;"	v
sanitize_entry_value	forms_model.php	/^	public static function sanitize_entry_value( $field, $value, $input_type, $form_id ) {$/;"	f
sanitized_name	forms_model.php	/^            $sanitized_name = str_replace("[", "", str_replace("]","", $form->title));$/;"	v
sanitized_name	forms_model.php	/^            if($form->title == $form_title || $sanitized_name == $form_title)$/;"	v
saveNewForm	form_list.php	/^            function saveNewForm() {$/;"	f
save_button	form_detail.php	/^                                $save_button = '<input type="button" class="button button-large button-primary update-form" value="' . $button_text . '" onclick="SaveForm(' . $isNew . ');" \/>';$/;"	v
save_button	form_detail.php	/^                                $save_button = apply_filters("gform_save_form_button", $save_button);$/;"	v
save_button	includes/addon/class-gf-addon.php	/^        $save_button = $this->get_save_button($sections);$/;"	v
save_button	includes/addon/class-gf-feed-addon.php	/^        $save_button = $this->get_save_button($sections);$/;"	v
save_button	settings.php	/^                $save_button = '<input type="submit" name="submit" value="' . __("Save Settings", "gravityforms"). '" class="button-primary gfbutton"\/>';$/;"	v
save_confirmation	gravityforms.php	/^    public static function save_confirmation() {$/;"	f
save_custom_choice	form_detail.php	/^    public static function save_custom_choice(){$/;"	f
save_custom_choice	forms_model.php	/^    public static function save_custom_choice($previous_name, $new_name, $choices){$/;"	f
save_custom_choice	gravityforms.php	/^    public static function save_custom_choice(){$/;"	f
save_feed_settings	includes/addon/class-gf-feed-addon.php	/^    protected function save_feed_settings( $feed_id, $form_id, $settings ) {$/;"	f
save_form	form_detail.php	/^    public static function save_form(){$/;"	f
save_form	gravityforms.php	/^    public static function save_form(){$/;"	f
save_form_confirmations	forms_model.php	/^    public static function save_form_confirmations($form_id, $confirmations) {$/;"	f
save_form_info	form_detail.php	/^    public static function save_form_info($id, $form_json){$/;"	f
save_form_notifications	forms_model.php	/^    public static function save_form_notifications($form_id, $notifications) {$/;"	f
save_form_settings	includes/addon/class-gf-addon.php	/^    public function save_form_settings($form, $settings){$/;"	f
save_input	forms_model.php	/^    public static function save_input($form, $field, &$lead, $current_fields, $input_id){$/;"	f
save_key	forms_model.php	/^    public static function save_key($key){$/;"	f
save_lead	forms_model.php	/^    public static function save_lead($form, &$lead){$/;"	f
save_new_form	form_list.php	/^    public static function save_new_form() {$/;"	f
save_new_form	gravityforms.php	/^    public static function save_new_form() {$/;"	f
save_paypal_settings	includes/addon/class-gf-feed-addon.php	/^    public function save_paypal_settings( $feed ) {$/;"	f
saveandprint	includes/phpqrcode/phpqrcode.php	/^            return $enc->encodePNG($text, $outfile, $saveandprint=false);$/;"	v
schedule_form_checked	form_settings.php	/^			$schedule_form_checked = 'checked="checked"';$/;"	v
schedule_form_checked	form_settings.php	/^        $schedule_form_checked = "";$/;"	v
schedule_form_style	form_settings.php	/^			$schedule_form_style = "display:none";$/;"	v
schedule_form_style	form_settings.php	/^        $schedule_form_style = "";$/;"	v
schedule_results_cron	includes/webapi/webapi.php	/^        public function schedule_results_cron($form, $fields, $search_criteria, $delay_in_seconds = 10) {$/;"	f
schema	includes/webapi/webapi.php	/^            $schema    = strtolower((rgget("schema")));$/;"	v
schema	includes/webapi/webapi.php	/^        public function get_forms($form_ids = null, $schema = "") {$/;"	v
score	includes/addon/class-gf-results.php	/^                            $score  = count(rgar($field, "choices"));$/;"	v
screen	includes/addon/class-gf-addon.php	/^     * $screen = get_current_screen();$/;"	v
script	form_display.php	/^            $script = "jQuery('#input_{$form['id']}_{$field['id']}').mask('" . esc_js($mask). "').bind('keypress', function(e){if(e.which == 13){jQuery(this).blur();} } );";$/;"	v
script	form_display.php	/^        $script = "";$/;"	v
script	form_display.php	/^        $script = "if(!window['gf_cc_rules']){window['gf_cc_rules'] = new Array(); } window['gf_cc_rules'] = " . GFCommon::json_encode($card_rules) . "; $script";$/;"	v
script	form_display.php	/^        $script = self::get_number_formats_script( $form );$/;"	v
script_name	gravityforms.php	/^        foreach($wp_objects->registered as $script_name => $script_registration){$/;"	v
script_str	form_display.php	/^        $script_str = '';$/;"	v
script_string	form_display.php	/^            $script_string =$/;"	v
script_string	form_display.php	/^        $script_string = '';$/;"	v
scripts	form_display.php	/^        $scripts = array();$/;"	v
scripts	gravityforms.php	/^            $scripts = array($/;"	v
scripts	gravityforms.php	/^            $scripts = array('gform_gravityforms','plupload-all');$/;"	v
scripts	gravityforms.php	/^            $scripts = array('gform_json');$/;"	v
scripts	gravityforms.php	/^            $scripts = array('thickbox');$/;"	v
scripts	gravityforms.php	/^            $scripts = array_merge($scripts, $dependents);$/;"	v
scripts	gravityforms.php	/^        $scripts = array();$/;"	v
scripts	includes/addon/class-gf-addon.php	/^        $scripts = $this->scripts();$/;"	v
scripts	includes/addon/class-gf-addon.php	/^    * When overriding this function, be sure to call parent::scripts() to ensure the base class scripts are enqueued.$/;"	c
scripts	includes/addon/class-gf-addon.php	/^    * When overriding this function, be sure to call parent::styles() to ensure the base class scripts are enqueued.$/;"	c
scripts	includes/addon/class-gf-addon.php	/^    protected function scripts(){$/;"	f
scripts	includes/addon/class-gf-feed-addon.php	/^        $scripts = array($/;"	v
scripts	includes/addon/class-gf-feed-addon.php	/^    public function scripts() {$/;"	f
scripts	includes/addon/class-gf-payment-addon.php	/^        $scripts = array($/;"	v
scripts	includes/addon/class-gf-payment-addon.php	/^    public function scripts() {$/;"	f
scripts	includes/webapi/webapi.php	/^            $scripts = array($/;"	v
scripts	includes/webapi/webapi.php	/^        public function scripts() {$/;"	f
scroll_position	form_display.php	/^                $scroll_position = array('default' => '', 'confirmation' => '');$/;"	v
search	entry_list.php	/^        $search = rgget("s");$/;"	v
search	gravityforms.php	/^            $search = rgpost("search");$/;"	v
search	includes/webapi/webapi.php	/^                $search = isset($_GET["search"]) ? $_GET["search"] : array();$/;"	v
search	print-entry.php	/^    $search = rgget("search");$/;"	v
search_criteria	forms_model.php	/^    public static function count_search_leads($form_id, $search_criteria = array()) {$/;"	v
search_criteria	forms_model.php	/^    public static function search_lead_ids($form_id, $search_criteria = array()) {$/;"	v
search_criteria	forms_model.php	/^    public static function search_leads($form_id, $search_criteria = array(), $sorting = null, $paging = null) {$/;"	v
search_criteria	includes/addon/class-gf-results.php	/^                $search_criteria                  = array();$/;"	v
search_criteria	includes/addon/class-gf-results.php	/^                $search_criteria = array();$/;"	v
search_criteria	includes/addon/class-gf-results.php	/^            $search_criteria = rgpost("search_criteria");$/;"	v
search_criteria	includes/addon/class-gf-results.php	/^        public function get_results_data($form, $fields, $search_criteria = array(), $state_array = array(), $max_execution_time = 15 \/* seconds *\/) {$/;"	v
search_criteria	includes/api.php	/^    public static function count_entries($form_ids, $search_criteria = array()) {$/;"	v
search_criteria	includes/api.php	/^    public static function get_entries($form_ids, $search_criteria = array(), $sorting = null, $paging = null, &$total_count = null) {$/;"	v
search_criteria	includes/webapi/webapi.php	/^            $search_criteria = false === empty($s) && is_array($s) ? $s : array();$/;"	v
search_field_id	entry_detail.php	/^        $search_field_id = rgget("field_id");$/;"	v
search_field_id	entry_list.php	/^        $search_field_id = rgget("field_id");$/;"	v
search_field_id	gravityforms.php	/^            $search_field_id = rgpost("fieldId");$/;"	v
search_field_id	print-entry.php	/^    $search_field_id = rgget("field_id");$/;"	v
search_field_id_qs	entry_list.php	/^        $search_field_id_qs = ! isset($_GET["field_id"]) ? "" : "&field_id=$search_field_id";$/;"	v
search_lead_ids	forms_model.php	/^    public static function search_lead_ids($form_id, $search_criteria = array()) {$/;"	f
search_leads	forms_model.php	/^    public static function search_leads($form_id, $search_criteria = array(), $sorting = null, $paging = null) {$/;"	f
search_leads_time	includes/addon/class-gf-results.php	/^                $search_leads_time       = $search_leads_time_end - $search_leads_time_start;$/;"	v
search_leads_time_end	includes/addon/class-gf-results.php	/^                $search_leads_time_end   = microtime(true);$/;"	v
search_leads_time_start	includes/addon/class-gf-results.php	/^                $search_leads_time_start = microtime(true);$/;"	v
search_mode	forms_model.php	/^        $search_mode = isset($field_filters["mode"]) ? strtolower($field_filters["mode"]) : "all";$/;"	v
search_operator	entry_list.php	/^        $search_operator = rgget("operator");$/;"	v
search_operator	forms_model.php	/^        $search_operator = self::get_search_operator($search_criteria);$/;"	v
search_operator	print-entry.php	/^    $search_operator = rgget("operator");$/;"	v
search_operator_qs	entry_list.php	/^        $search_operator_qs = empty($search_operator_urlencoded) ? "" : "&operator=$search_operator_urlencoded";$/;"	v
search_operator_urlencoded	entry_list.php	/^        $search_operator_urlencoded = urlencode($search_operator);$/;"	v
search_qs	entry_list.php	/^        $search_qs = empty($search) ? "" : "&s=" . urlencode($search);$/;"	v
search_sql	forms_model.php	/^        $search_sql = self::get_leads_where_sql(compact('form_id', 'search', 'status', 'star', 'read', 'start_date', 'end_date', 'payment_status', 'is_default'));$/;"	v
search_term	forms_model.php	/^                    $search_term = "like" == $operator ? "%$val%" : $val;$/;"	v
search_term	forms_model.php	/^            $search_term   = "like" == $operator ? "%value%" : $value;$/;"	v
search_term	forms_model.php	/^            $search_term  = "like" == $operator ? "%$val%" : $val;$/;"	v
search_term_format	forms_model.php	/^                    $search_term_format = rgar( $search, 'is_numeric' ) || $is_number_field ? '%f' : '%s';$/;"	v
search_type	forms_model.php	/^                    $search_type = "field";$/;"	v
search_type	forms_model.php	/^                    $search_type = "global";$/;"	v
search_type	forms_model.php	/^                    $search_type = "meta";$/;"	v
search_type	forms_model.php	/^            $search_type = rgar($search, "type");$/;"	v
second	form_display.php	/^                                    $second = 0;$/;"	v
section	form_display.php	/^            $section = RGFormsModel::get_section($form, $field["id"]);$/;"	v
section	forms_model.php	/^        $section = self::get_section($form, $field["id"]);$/;"	v
section	includes/webapi/webapi.php	/^                $section               = array();$/;"	v
section	js/forms.js	/^    "section" :         ".conditional_logic_field_setting, .label_setting, .description_setting, .visibility_setting, .css_class_setting",$/;"	p	class:fieldSettings
section_class	form_display.php	/^        $section_class = $field["type"] == "section" ? "gsection" : "";$/;"	v
section_display	forms_model.php	/^        $section_display = self::get_field_display($form, $section, $field_values, $lead);$/;"	v
section_fields	form_display.php	/^                            $section_fields = GFCommon::get_section_fields($form, $field["id"]);$/;"	v
section_logic	form_display.php	/^            $section_logic = !empty($section) ? rgar($section,"conditionalLogic") : null;$/;"	v
sections	includes/addon/class-gf-addon.php	/^                    $sections = $this->form_settings_fields($form);$/;"	v
sections	includes/addon/class-gf-addon.php	/^            $sections = $this->add_default_save_button( $sections );$/;"	v
sections	includes/addon/class-gf-addon.php	/^            $sections = $this->app_settings_fields();$/;"	v
sections	includes/addon/class-gf-addon.php	/^            $sections = $this->form_settings_fields($form);$/;"	v
sections	includes/addon/class-gf-addon.php	/^            $sections = $this->plugin_settings_fields();$/;"	v
sections	includes/addon/class-gf-addon.php	/^        $sections = call_user_func(array($this, "{$settings_type}_settings_fields"));$/;"	v
sections	includes/addon/class-gf-feed-addon.php	/^        $sections = $this->get_feed_settings_fields();$/;"	v
security_code	common.php	/^                    $security_code = esc_attr(rgget($field["id"] . ".3",$value));$/;"	v
security_code	common.php	/^                $security_code = "";$/;"	v
security_code	form_display.php	/^                                $security_code = rgpost("input_" . $field["id"] . "_3");$/;"	v
security_code	form_display.php	/^                            $security_code = rgpost("input_" . $field["id"] . "_3");$/;"	v
security_field	common.php	/^                $security_field =        "<span class='ginput_cardinfo_right{$class_suffix}' id='{$field_id}_2_cardinfo_right'>".$/;"	v
select	includes/addon/class-gf-payment-addon.php	/^                $select = "concat(left(lead.week,4), ' - ', right(lead.week,2)) as week";$/;"	v
select	includes/addon/class-gf-payment-addon.php	/^                $select = "date_format(lead.month, '%%Y') as year, date_format(lead.month, '%%c') as month, '' as month_abbrev, '' as month_year";$/;"	v
select	includes/addon/class-gf-payment-addon.php	/^                $select = "lead.date, date_format(lead.date, '%%c') as month, day(lead.date) as day, dayname(lead.date) as day_of_week, '' as month_day";$/;"	v
select	js/forms.js	/^    "select" :          ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .enable_enhanced_ui_setting, .label_setting, .admin_label_setting, .size_setting, .choices_setting, .rules_setting,  .duplicate_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
selectAllEntriesOnAllPages	entry_list.php	/^            function selectAllEntriesOnAllPages (){$/;"	f
select_all	entry_list.php	/^                $select_all = rgpost("all_entries");$/;"	v
select_columns_page	select_columns.php	/^    public static function select_columns_page(){$/;"	f
select_export_form	gravityforms.php	/^    public static function select_export_form(){$/;"	f
select_inner1	includes/addon/class-gf-payment-addon.php	/^                $select_inner1 = "date(CONVERT_TZ(date_created, '+00:00', '" . $tz_offset . "')) as date";$/;"	v
select_inner1	includes/addon/class-gf-payment-addon.php	/^                $select_inner1 = "date_format(CONVERT_TZ(date_created, '+00:00', '" . $tz_offset . "'), '%%Y-%%m-01') month";$/;"	v
select_inner1	includes/addon/class-gf-payment-addon.php	/^                $select_inner1 = "yearweek(CONVERT_TZ(date_created, '+00:00', '" . $tz_offset . "')) week";$/;"	v
select_inner2	includes/addon/class-gf-payment-addon.php	/^                $select_inner2 = "date(CONVERT_TZ(t.date_created, '+00:00', '" . $tz_offset . "')) as date";$/;"	v
select_inner2	includes/addon/class-gf-payment-addon.php	/^                $select_inner2 = "date_format(CONVERT_TZ(t.date_created, '+00:00', '" . $tz_offset . "'), '%%Y-%%m-01') month";$/;"	v
select_inner2	includes/addon/class-gf-payment-addon.php	/^                $select_inner2 = "yearweek(CONVERT_TZ(t.date_created, '+00:00', '" . $tz_offset . "')) week";$/;"	v
select_meta_keys	forms_model.php	/^    $select_meta_keys = join(",", $meta_keys);$/;"	v
selectable_class	form_display.php	/^        $selectable_class = IS_ADMIN ? "selectable" : "";$/;"	v
selected	common.php	/^                        $selected = $is_match ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                        $selected = RGFormsModel::choice_value_match($field, $choice, $value) ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                        $selected = empty($value) ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                    $selected = $is_selected ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                    $selected = empty($value) ? $default_category : $value;$/;"	v
selected	common.php	/^                    $selected = rgar($choice,"isSelected") ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                $selected = $field["id"] == $selected_field_id ? "selected='selected'" : "";$/;"	v
selected	common.php	/^                $selected = $value == $category->term_id ||$/;"	v
selected	common.php	/^            $selected = $code == $selected_country ? "selected='selected'" : "";$/;"	v
selected	common.php	/^            $selected = $code == $selected_state ? "selected='selected'" : "";$/;"	v
selected	common.php	/^            $selected = $state == $selected_province ? "selected='selected'" : "";$/;"	v
selected	common.php	/^            $selected = intval($i) == intval($selected_value) ? "selected='selected'" : "";$/;"	v
selected	common.php	/^            $selected = intval($selected_month) == $i ? "selected='selected'" : "";$/;"	v
selected	common.php	/^            $selected = intval($selected_year) == $i ? "selected='selected'" : "";$/;"	v
selected	form_detail.php	/^        $selected = rgempty("selectedValue") ? 0 : rgpost("selectedValue");$/;"	v
selected	form_settings.php	/^	        $selected = rgar($form, 'scheduleStartMinute') == $value ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = $form['labelPlacement'] == $value ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = rgar( $form, 'descriptionPlacement' ) == $value ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = rgar($form, 'limitEntriesPeriod') == $value ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = rgar($form, 'scheduleEndHour') == $i ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = rgar($form, 'scheduleEndMinute') == $value ? 'selected="selected"' : '';$/;"	v
selected	form_settings.php	/^            $selected = rgar($form, 'scheduleStartHour') == $i ? 'selected="selected"' : '';$/;"	v
selected	js/gf_field_filter.js	/^    function selected(selected, current){$/;"	f
selected	notification.php	/^	                $selected = $is_selected ? "selected='selected'" : "";$/;"	v
selected	notification.php	/^                $selected = $field["id"] == $selected_field_id ? "selected='selected'" : "";$/;"	v
selected	notification.php	/^        $selected = rgempty("selectedValue") ? 0 : rgpost("selectedValue");$/;"	v
selected	widget.php	/^                            $selected = ' selected="selected"';$/;"	v
selected	widget.php	/^                        $selected = '';$/;"	v
selected_forms	export.php	/^            $selected_forms = rgpost("gf_form_id");$/;"	v
selected_state	common.php	/^    public static function get_state_dropdown($states, $selected_state=""){$/;"	v
selected_value	includes/addon/class-gf-addon.php	/^        $selected_value = $this->get_setting($field['name'], rgar($field, "default_value"));$/;"	v
selection_display	common.php	/^    public static function selection_display($value, $field, $currency="", $use_text=false){$/;"	f
self.addItem	includes/addon/js/repeater.js	/^    self.addItem = function( item, index ) {$/;"	f
self.addNewItem	includes/addon/js/repeater.js	/^    self.addNewItem = function( elem ) {$/;"	f
self.bindEvents	includes/addon/js/repeater.js	/^    self.bindEvents = function() {$/;"	f
self.getBaseObject	includes/addon/js/repeater.js	/^    self.getBaseObject = function() {$/;"	f
self.getBaseObjectKeys	includes/addon/js/repeater.js	/^    self.getBaseObjectKeys = function() {$/;"	f
self.getDefaultButtonsMarkup	includes/addon/js/repeater.js	/^    self.getDefaultButtonsMarkup = function( index ) {$/;"	f
self.getItemMarkup	includes/addon/js/repeater.js	/^    self.getItemMarkup = function( item, index ) {$/;"	f
self.getNamespacedEvents	includes/addon/js/repeater.js	/^    self.getNamespacedEvents = function( events ) {$/;"	f
self.getRepeaterButtonsMarkup	includes/addon/js/repeater.js	/^    self.getRepeaterButtonsMarkup = function( index ) {$/;"	f
self.getStashedTemplate	includes/addon/js/repeater.js	/^    self.getStashedTemplate = function() {$/;"	f
self.init	includes/addon/js/repeater.js	/^    self.init = function() {$/;"	f
self.populateSelects	includes/addon/js/repeater.js	/^    self.populateSelects = function( item, index ) {$/;"	f
self.refresh	includes/addon/js/repeater.js	/^    self.refresh = function() {$/;"	f
self.removeItem	includes/addon/js/repeater.js	/^    self.removeItem = function( elem ) {$/;"	f
self.save	includes/addon/js/repeater.js	/^    self.save = function() {$/;"	f
self.stashTemplate	includes/addon/js/repeater.js	/^    self.stashTemplate = function() {$/;"	f
send	includes/locking/class-gf-locking.php	/^                    $send = array('text' => sprintf(__($this->get_string("currently_editing")), $user->display_name));$/;"	v
send	includes/locking/class-gf-locking.php	/^            $send     = array();$/;"	v
sendRequest	includes/addon/js/gaddon_results.js	/^    sendRequest: function (gresultsData, serverStateObject, checkSum) {$/;"	m	class:gresults
send_admin_notification	common.php	/^    public static function send_admin_notification($form, $lead, $override_options = false){$/;"	f
send_email	common.php	/^    private static function send_email($from, $to, $bcc, $reply_to, $subject, $message, $from_name="", $message_format="html", $attachments=""){$/;"	f
send_emails	form_display.php	/^    public static function send_emails($form, $lead){$/;"	f
send_form_submission_notifications	common.php	/^    public static function send_form_submission_notifications($form, $lead){$/;"	f
send_notification	common.php	/^    public static function send_notification($notification, $form, $lead){$/;"	f
send_notifications	common.php	/^    public static function send_notifications($notification_ids, $form, $lead, $do_conditional_logic = true, $event = "form_submission"){$/;"	f
send_to_class	notification.php	/^        $send_to_class = $is_invalid_email_to ? "gfield_error" : "";$/;"	v
send_user_notification	common.php	/^    public static function send_user_notification($form, $lead, $override_options = false){$/;"	f
separator	common.php	/^                    $separator = $format == "html" ? "<br\/>" : "\\n";$/;"	v
separator	common.php	/^                $separator = "-";$/;"	v
separator	common.php	/^                $separator = ".";$/;"	v
separator	common.php	/^                $separator = "\/";$/;"	v
separator	export.php	/^        $separator = apply_filters('gform_export_separator_' . $form_id, apply_filters('gform_export_separator', ',', $form_id), $form_id);$/;"	v
serial	includes/phpqrcode/phpqrcode.php	/^        public static function serial($bitFrame)$/;"	f
serial	includes/phpqrcode/phpqrcode.php	/^        public static function serial($frame)$/;"	f
serialize	xml.php	/^    public function serialize($parent_node_name, $data, $path=""){$/;"	f
serializer	export.php	/^            $serializer = new RGXML($options);$/;"	v
server	recaptchalib.php	/^		$server = RECAPTCHA_API_SECURE_SERVER;$/;"	v
server	recaptchalib.php	/^		$server = RECAPTCHA_API_SERVER;$/;"	v
set	common.php	/^    public static function set($key, $data, $is_persistent = false, $expiration = 0) {$/;"	f
set	includes/phpqrcode/phpqrcode.php	/^		public static function set(&$srctab, $x, $y, $repl, $replLen = false) {$/;"	f
setCustomFilter	includes/addon/js/gaddon_results.js	/^    setCustomFilter: function(key, value){$/;"	m	class:gresults
setData	includes/phpqrcode/phpqrcode.php	/^                $setData = array_merge($setData, array_fill(0,$size-count($setData),0));$/;"	v
setData	includes/phpqrcode/phpqrcode.php	/^            $setData = array_slice($data, 0, $size);$/;"	v
setDisabledFields	js/gf_field_filter.js	/^    function setDisabledFields () {$/;"	f
setErrorCorrectionLevel	includes/phpqrcode/phpqrcode.php	/^        public function setErrorCorrectionLevel($level)$/;"	f
setFrameAt	includes/phpqrcode/phpqrcode.php	/^        public function setFrameAt($at, $val)$/;"	f
setPattern	includes/phpqrcode/phpqrcode.php	/^            $setPattern = str_repeat("\\x84", 9);$/;"	v
setPattern	includes/phpqrcode/phpqrcode.php	/^            $setPattern = str_repeat("\\xc0", 8);$/;"	v
setSelectAllText	entry_list.php	/^            function setSelectAllText(){$/;"	f
setUpFilters	js/gf_field_filter.js	/^    function setUpFilters(filters) {$/;"	f
setUploadedFiles	js/gravityforms.js	/^        function setUploadedFiles(fieldID, files){$/;"	f
setVersion	includes/phpqrcode/phpqrcode.php	/^        public function setVersion($version)$/;"	f
set_current_lead	forms_model.php	/^    public static function set_current_lead($lead) {$/;"	f
set_current_page	form_display.php	/^    public static function set_current_page($form_id, $page_number){$/;"	f
set_encrypted_fields	forms_model.php	/^    public static function set_encrypted_fields( $entry_id, $field_ids ) {$/;"	f
set_entry_meta	forms_model.php	/^    public static function set_entry_meta($lead, $form){$/;"	f
set_field_error	includes/addon/class-gf-addon.php	/^    protected function set_field_error( $field, $error_message = '' ) {$/;"	f
set_lock	includes/locking/class-gf-locking.php	/^    protected function set_lock($object_id) {$/;"	f
set_logging_supported	gravityforms.php	/^    public static function set_logging_supported($plugins){$/;"	f
set_logging_supported	includes/addon/class-gf-addon.php	/^    function set_logging_supported($plugins){$/;"	f
set_permissions	forms_model.php	/^    public static function set_permissions($path){$/;"	f
set_previous_settings	includes/addon/class-gf-addon.php	/^    protected function set_previous_settings( $settings ) {$/;"	f
set_property_as_key	export.php	/^    public static function set_property_as_key($array, $property) {$/;"	f
set_property_as_key	includes/api.php	/^    private static function set_property_as_key($array, $property) {$/;"	f
set_settings	includes/addon/class-gf-addon.php	/^    protected function set_settings( $settings ) {$/;"	f
set_submission_if_null	form_display.php	/^    private static function set_submission_if_null($form_id, $key, $val){$/;"	f
set_submitting	form_display.php	/^                $set_submitting = "if( !jQuery(\\"#gform_{$form_id}\\")[0].checkValidity || jQuery(\\"#gform_{$form_id}\\")[0].checkValidity()){window[\\"gf_submitting_{$form_id}\\"]=true;}";$/;"	v
set_submitting	form_display.php	/^                $set_submitting = "window[\\"gf_submitting_{$form_id}\\"]=true;";$/;"	v
set_transient	common.php	/^    private static function set_transient($key, $data, $expiration) {$/;"	f
set_trial_onchange	includes/addon/class-gf-payment-addon.php	/^    public function set_trial_onchange($field){$/;"	f
set_version_info	includes/addon/class-gf-auto-upgrade.php	/^    private function set_version_info($plugin_slug, $version_info){$/;"	f
setting	includes/addon/class-gf-addon.php	/^            $setting = $settings;$/;"	v
setting	includes/addon/class-gf-addon.php	/^            $setting = $settings[$setting_name];$/;"	v
setting_dependency_met	includes/addon/class-gf-addon.php	/^    protected function setting_dependency_met( $dependency ) {$/;"	f
setting_tabs	export.php	/^        $setting_tabs = apply_filters("gform_export_menu", $setting_tabs);$/;"	v
setting_tabs	export.php	/^        $setting_tabs = array();$/;"	v
setting_tabs	export.php	/^        $setting_tabs = self::get_tabs();$/;"	v
setting_tabs	form_settings.php	/^        $setting_tabs = GFFormSettings::get_tabs($form["id"]);$/;"	v
setting_tabs	form_settings.php	/^        $setting_tabs = apply_filters("gform_form_settings_menu", $setting_tabs, $form_id);$/;"	v
setting_tabs	form_settings.php	/^        $setting_tabs = array($/;"	v
setting_tabs	gravityforms.php	/^        $setting_tabs = GFFormSettings::get_tabs( $form_id );$/;"	v
setting_tabs	includes/addon/class-gf-addon.php	/^        $setting_tabs = apply_filters("gform_addon_app_settings_menu_" . $this->_slug, $setting_tabs);$/;"	v
setting_tabs	includes/addon/class-gf-addon.php	/^        $setting_tabs = array(array("name" => "settings", "label" => __("Settings", "gravityforms"), "callback" => array($this, "app_settings_tab")));$/;"	v
setting_tabs	settings.php	/^        $setting_tabs = apply_filters("gform_settings_menu", $setting_tabs);$/;"	v
setting_tabs	settings.php	/^        $setting_tabs = array("10" => array("name" => "settings", "label" => __("Settings", "gravityforms")));$/;"	v
setting_value	includes/addon/class-gf-addon.php	/^            $setting_value = rgar( $settings, $child_field['name'] );$/;"	v
settings	common.php	/^        $settings = array();$/;"	v
settings	includes/addon/class-gf-addon.php	/^                    $settings = $this->get_form_settings($form);$/;"	v
settings	includes/addon/class-gf-addon.php	/^                $settings = rgar($settings, $part);$/;"	v
settings	includes/addon/class-gf-addon.php	/^            $settings = $this->_saved_settings;$/;"	v
settings	includes/addon/class-gf-addon.php	/^            $settings = $this->get_app_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^            $settings = $this->get_current_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^            $settings = $this->get_plugin_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^            $settings = $this->get_posted_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^        $settings = $this->get_app_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^        $settings = $this->get_plugin_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^        $settings = $this->get_posted_settings();$/;"	v
settings	includes/addon/class-gf-addon.php	/^    protected function get_mapped_field_value( $setting_name, $form, $entry, $settings = false ){$/;"	v
settings	includes/addon/class-gf-addon.php	/^    protected function settings( $sections ){$/;"	f
settings	includes/addon/class-gf-feed-addon.php	/^        $settings = $this->get_posted_settings();$/;"	v
settings	includes/addon/class-gf-feed-addon.php	/^        $settings = $this->trim_conditional_logic_vales($settings, $form_id);$/;"	v
settings	includes/webapi/webapi.php	/^            $settings           = $this->get_plugin_settings();$/;"	v
settings	includes/webapi/webapi.php	/^            $settings = get_option("gravityformsaddon_gravityformswebapi_settings");$/;"	v
settings	includes/webapi/webapi.php	/^            $settings = get_option('gravityformsaddon_gravityformswebapi_settings');$/;"	v
settings_billing_cycle	includes/addon/class-gf-payment-addon.php	/^    public function settings_billing_cycle( $field, $echo = true ) {$/;"	f
settings_checkbox	includes/addon/class-gf-addon.php	/^	protected function settings_checkbox( $field, $echo = true ) {$/;"	f
settings_developer_tools	includes/webapi/webapi.php	/^        public function settings_developer_tools() {$/;"	f
settings_dynamic_field_map	includes/addon/class-gf-addon.php	/^    public function settings_dynamic_field_map( $field, $echo = true ) {$/;"	f
settings_feed_condition	includes/addon/class-gf-feed-addon.php	/^    protected function settings_feed_condition( $field, $echo = true ) {$/;"	f
settings_field_map	includes/addon/class-gf-addon.php	/^    public function settings_field_map( $field, $echo = true ) {$/;"	f
settings_field_map_select	includes/addon/class-gf-addon.php	/^    public function settings_field_map_select( $field, $form_id ) {$/;"	f
settings_field_select	includes/addon/class-gf-addon.php	/^    public function settings_field_select( $field, $echo = true ) {$/;"	f
settings_fields_only	includes/addon/class-gf-addon.php	/^    protected function settings_fields_only($settings_type = 'plugin') {$/;"	f
settings_hidden	includes/addon/class-gf-addon.php	/^    protected function settings_hidden($field, $echo = true) {$/;"	f
settings_page	gravityforms.php	/^    public static function settings_page(){$/;"	f
settings_page	settings.php	/^    public static function settings_page() {$/;"	f
settings_qrcode	includes/webapi/webapi.php	/^        public function settings_qrcode() {$/;"	f
settings_radio	includes/addon/class-gf-addon.php	/^    protected function settings_radio($field, $echo = true) {$/;"	f
settings_requirements_check	includes/webapi/webapi.php	/^        public function settings_requirements_check() {$/;"	f
settings_save	includes/addon/class-gf-addon.php	/^    protected function settings_save( $field, $echo = true ) {$/;"	f
settings_select	includes/addon/class-gf-addon.php	/^    protected function settings_select( $field, $echo = true ) {$/;"	f
settings_setup_fee	includes/addon/class-gf-payment-addon.php	/^    public function settings_setup_fee( $field, $echo = true ) {$/;"	f
settings_style	includes/addon/class-gf-feed-addon.php	/^        $settings_style = $this->has_feed( $form_id ) ? '' : 'display:none;';$/;"	v
settings_text	includes/addon/class-gf-addon.php	/^    protected function settings_text($field, $echo = true) {$/;"	f
settings_textarea	includes/addon/class-gf-addon.php	/^    protected function settings_textarea($field, $echo = true) {$/;"	f
settings_trial	includes/addon/class-gf-payment-addon.php	/^    public function settings_trial( $field, $echo = true ) {$/;"	f
settings_uninstall_page	settings.php	/^    public static function settings_uninstall_page(){$/;"	f
setup	gravityforms.php	/^    public static function setup($force_setup = false){$/;"	f
setup	includes/addon/class-gf-addon.php	/^    protected function setup() {$/;"	f
setup	includes/addon/class-gf-feed-addon.php	/^    protected function setup(){$/;"	f
setup	includes/addon/class-gf-payment-addon.php	/^    protected function setup(){$/;"	f
setup_cron	includes/addon/class-gf-payment-addon.php	/^    protected function setup_cron()$/;"	f
setup_database	gravityforms.php	/^    public static function setup_database()$/;"	f
setup_fee_field	includes/addon/class-gf-feed-addon.php	/^			} else if ( ! empty( $setup_fee_field ) && $setup_fee_field == $field_id ) {$/;"	v
setup_fee_field	includes/addon/class-gf-feed-addon.php	/^		$setup_fee_field = rgar( $feed['meta'], 'setupFee_enabled' ) ? $feed['meta']['setupFee_product'] : false;$/;"	v
setup_fee_field	includes/addon/class-gf-payment-addon.php	/^			} else if ( ! empty( $setup_fee_field ) && $setup_fee_field == $field_id ) {$/;"	v
setup_fee_field	includes/addon/class-gf-payment-addon.php	/^        $setup_fee_field = rgar($feed["meta"],"setupFee_enabled") ? $feed["meta"]["setupFee_product"] : false;$/;"	v
shipping	js/forms.js	/^    "shipping"   :      ".shipping_field_type_setting, .conditional_logic_field_setting, .prepopulate_field_setting, .label_setting, .admin_label_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
shipping_class	form_display.php	/^        $shipping_class = $field["type"] == "shipping" ? "gfield_price gfield_shipping gfield_shipping_{$form["id"]}" : "";$/;"	v
shipping_field	common.php	/^            $shipping_field = self::get_fields_by_type($form, array("shipping"));$/;"	v
shipping_field_id	common.php	/^                $shipping_field_id = $shipping_field[0]["id"];$/;"	v
shipping_field_id	common.php	/^            $shipping_field_id = "";$/;"	v
shipping_name	common.php	/^                    $shipping_name = $shipping_field[0]["label"] . " ($shipping_method)";$/;"	v
shipping_name	common.php	/^                $shipping_name = $shipping_field[0]["label"];$/;"	v
shipping_price	common.php	/^                $shipping_price = RGFormsModel::get_lead_field_value($lead, $shipping_field[0]);$/;"	v
shipping_price	common.php	/^            $shipping_price = $shipping_name = "";$/;"	v
shipping_price	common.php	/^            $shipping_price = self::to_number($shipping_price);$/;"	v
shortcode_string	gravityforms.php	/^                $shortcode_string = GFCommon::conditional_shortcode($attributes, $content);$/;"	v
shortcode_string	gravityforms.php	/^                $shortcode_string = self::get_form($id, $title, $description, false, $field_value_array, $ajax, $tabindex);$/;"	v
shortcode_string	gravityforms.php	/^        $shortcode_string = "";$/;"	v
shortcode_string	gravityforms.php	/^        $shortcode_string = apply_filters("gform_shortcode_{$action}", $shortcode_string, $attributes, $content);$/;"	v
sig	includes/webapi/webapi.php	/^            $sig  = base64_encode($hash);$/;"	v
signature	includes/webapi/webapi.php	/^            $signature = rgget("signature");$/;"	v
simple_condition	includes/addon/class-gf-addon.php	/^    protected function simple_condition($setting_name_root){$/;"	f
single_action	includes/addon/class-gf-feed-addon.php	/^        $single_action = rgpost("single_action");$/;"	v
single_file_name	form_display.php	/^                                $single_file_name = $_FILES[$input_name]["name"];$/;"	v
single_row	form_settings.php	/^    function single_row( $item ) {$/;"	f
single_row	notification.php	/^    function single_row( $item ) {$/;"	f
single_section	includes/addon/class-gf-addon.php	/^    protected function single_section( $section, $is_first = false) {$/;"	f
single_setting	includes/addon/class-gf-addon.php	/^    protected function single_setting( $field ) {$/;"	f
single_setting_label	includes/addon/class-gf-addon.php	/^    protected function single_setting_label( $field ) {$/;"	f
single_setting_row	includes/addon/class-gf-addon.php	/^    protected function single_setting_row( $field ) {$/;"	f
single_setting_row_save	includes/addon/class-gf-addon.php	/^    protected function single_setting_row_save( $field ) {$/;"	f
single_style	common.php	/^                    $single_style = rgget("emailConfirmEnabled", $field) ? "style='display:none;'" : "";$/;"	v
singleproduct	js/forms.js	/^    "singleproduct" :   ".base_price_setting, .disable_quantity_setting, .rules_setting, .duplicate_setting, .error_message_setting, .conditional_logic_field_setting",$/;"	p	class:fieldSettings
singleshipping	js/forms.js	/^    "singleshipping":   ".base_price_setting",$/;"	p	class:fieldSettings
singular	form_settings.php	/^        $singular = $this->_args['singular'];$/;"	v
singular	notification.php	/^        $singular = $this->_args['singular'];$/;"	v
site_matches	includes/addon/class-gf-addon.php	/^                $site_matches = ( isset($condition["admin_page"]) && is_admin() ) || ( !isset($condition["admin_page"]) && !is_admin() ) || ( isset($condition["query"]) || isset($condition["post"]) ) ;$/;"	v
site_url	common.php	/^		$site_url = get_bloginfo("url");$/;"	v
size	common.php	/^                        $size = empty($field["simpleCaptchaSize"]) ? "medium" : $field["simpleCaptchaSize"];$/;"	v
size	common.php	/^                        $size = rgempty("simpleCaptchaSize", $field) ? "medium" : $field["simpleCaptchaSize"];$/;"	v
size	common.php	/^                    $size = 7;$/;"	v
size	common.php	/^                $size = rgar($field, "multiSelectSize");$/;"	v
size	common.php	/^        $size = rgar($field, "size");$/;"	v
size	form_display.php	/^        $size = rgar($field,"size");$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^                    $size = $chunks * 2;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^                    $size = $chunks * 3;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^                    $size = (int)($payload \/ 8);$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^                    $size = (int)(($payload \/ 13) * 2);$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^                    $size = 0;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^            $size = $this->size();$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^            $size = count($qrTab);$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^            $this->size = $size;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^            if($size < 0) $size = 0;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^            if($size > $maxsize) $size = $maxsize;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^        public $size = 3;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^        public $size;$/;"	v
size	includes/phpqrcode/phpqrcode.php	/^        public function size()$/;"	f
size	includes/phpqrcode/phpqrcode.php	/^        public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	v
size_meta	common.php	/^                $size_meta = empty($match[3]) ? "full" : $match[3];$/;"	v
skipped_field_query	forms_model.php	/^                        $skipped_field_query = $wpdb->prepare($/;"	v
sort_by_column_query	forms_model.php	/^    private static function sort_by_column_query($form_id, $search_criteria, $sorting, $paging) {$/;"	f
sort_by_custom_field_query	forms_model.php	/^    private static function sort_by_custom_field_query($form_id, $sort_field_number=0, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $status='active', $payment_status = false){$/;"	f
sort_by_default_field_query	forms_model.php	/^    private static function sort_by_default_field_query($form_id, $sort_field, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $start_date=null, $end_date=null, $status='active', $payment_status = false){$/;"	f
sort_by_field_query	forms_model.php	/^    private static function sort_by_field_query($form_id, $search_criteria, $sorting, $paging) {$/;"	f
sort_column	form_list.php	/^        $sort_column = empty($_GET["sort"]) ? "title" : $_GET["sort"];$/;"	v
sort_column	forms_model.php	/^        $sort_column = ESC_SQL($sort_column);$/;"	v
sort_column	forms_model.php	/^    public static function get_forms($is_active = null, $sort_column = "title", $sort_dir = "ASC", $is_trash = false){$/;"	v
sort_dir	includes/webapi/webapi.php	/^                $sort_dir = isset($_GET["sorting"]["direction"]) && !empty($_GET["sorting"]["direction"]) ? $_GET["sorting"]["direction"] : "DESC";$/;"	v
sort_direction	entry_detail.php	/^        $sort_direction = rgget('dir') ? rgget('dir') : 'DESC';$/;"	v
sort_direction	entry_list.php	/^        $sort_direction = empty($_GET["dir"]) ? "DESC" : $_GET["dir"];$/;"	v
sort_direction	form_list.php	/^        $sort_direction = empty($_GET["dir"]) ? "ASC" : $_GET["dir"];$/;"	v
sort_direction	forms_model.php	/^        $sort_direction    = isset($sorting["direction"]) ? $sorting["direction"] : "DESC";$/;"	v
sort_direction	forms_model.php	/^        $sort_direction  = isset($sorting["direction"]) ? $sorting["direction"] : "DESC";$/;"	v
sort_direction	forms_model.php	/^    private static function sort_by_default_field_query($form_id, $sort_field, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $start_date=null, $end_date=null, $status='active', $payment_status = false){$/;"	v
sort_field	entry_detail.php	/^        $sort_field = empty($_GET["sort"]) ? 0 : $_GET["sort"];$/;"	v
sort_field	entry_list.php	/^        $sort_field = empty($_GET["sort"]) ? 0 : $_GET["sort"];$/;"	v
sort_field	forms_model.php	/^                $sort_field = "date_created";$/;"	v
sort_field	forms_model.php	/^            $sort_field = "date_created";$/;"	v
sort_field	forms_model.php	/^        $sort_field      = isset($sorting["key"]) ? $sorting["key"] : "date_created";$/;"	v
sort_field	forms_model.php	/^        $sort_field = isset($sorting["key"]) ? $sorting["key"] : "date_created"; \/\/ column, field or entry meta$/;"	v
sort_field_is_entry_meta	forms_model.php	/^            $sort_field_is_entry_meta = true;$/;"	v
sort_field_is_entry_meta	forms_model.php	/^        $sort_field_is_entry_meta = false;$/;"	v
sort_field_meta	entry_detail.php	/^        $sort_field_meta = RGFormsModel::get_field($form, $sort_field);$/;"	v
sort_field_meta	entry_list.php	/^        $sort_field_meta = RGFormsModel::get_field($form, $sort_field);$/;"	v
sort_field_number	forms_model.php	/^            $sort_field_number = "date_created";$/;"	v
sort_field_number	forms_model.php	/^        $sort_field_number = rgar($sorting, "key");$/;"	v
sort_field_number	forms_model.php	/^    private static function sort_by_custom_field_query($form_id, $sort_field_number=0, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $status='active', $payment_status = false){$/;"	v
sort_field_number	forms_model.php	/^    public static function get_leads($form_id, $sort_field_number=0, $sort_direction='DESC', $search='', $offset=0, $page_size=30, $star=null, $read=null, $is_numeric_sort = false, $start_date=null, $end_date=null, $status='active', $payment_status = false){$/;"	v
sort_key	includes/webapi/webapi.php	/^                $sort_key = isset($_GET["sorting"]["key"]) && !empty($_GET["sorting"]["key"]) ? $_GET["sorting"]["key"] : "id";$/;"	v
sort_keyword	forms_model.php	/^        $sort_keyword = $sort_dir == "ASC" ? "ASC" : "DESC";$/;"	v
sort_qs	entry_list.php	/^        $sort_qs = empty($sort_field) ? "" : "&sort=$sort_field";$/;"	v
sorted_addons	settings.php	/^            $sorted_addons = self::$addon_pages;$/;"	v
sorting	entry_detail.php	/^            $sorting = array('key' => $_GET["sort"], 'direction' => $sort_direction, 'is_numeric' => $is_numeric);$/;"	v
sorting	entry_detail.php	/^            $sorting = array();$/;"	v
sorting	entry_list.php	/^            $sorting = array('key' => $_GET["sort"], 'direction' => $sort_direction, 'is_numeric' => $is_numeric);$/;"	v
sorting	entry_list.php	/^            $sorting = array();$/;"	v
sorting	export.php	/^        $sorting = array('key' => "date_created", 'direction' => "DESC", "type"=>"info");$/;"	v
sorting	includes/addon/class-gf-results.php	/^            $sorting = array('key' => "date_created", 'direction' => "DESC");$/;"	v
sorting	includes/api.php	/^            $sorting = array('key' => 'id', 'direction' => "DESC", "is_numeric" => true);$/;"	v
sorting	includes/api.php	/^     *     $sorting = array('key' => $sort_field, 'direction' => "ASC" );$/;"	v
sorting	includes/webapi/webapi.php	/^                $sorting  = array('key' => $sort_key, 'direction' => $sort_dir);$/;"	v
source	forms_model.php	/^        $source = self::get_upload_path($form_id) . "\/tmp\/" . $tempfile_info["temp_filename"];$/;"	v
source_field	common.php	/^        	$source_field = RGFormsModel::get_field($form, $to_field);$/;"	v
source_field	common.php	/^                    $source_field = GFFormsModel::get_field($form, $rule["fieldId"]);$/;"	v
source_field	common.php	/^                $source_field = RGFormsModel::get_field($form, $routing["fieldId"]);$/;"	v
source_field	forms_model.php	/^            $source_field = RGFormsModel::get_field($form, $rule["fieldId"]);$/;"	v
source_field_id	form_detail.php	/^        $source_field_id = rgpost('source_field_id');$/;"	v
source_page_number	form_display.php	/^        $source_page_number = self::get_source_page($form_id);$/;"	v
source_url	forms_model.php	/^            $source_url = self::truncate(self::get_current_page_url(), 200);$/;"	v
source_url	forms_model.php	/^        $source_url = self::truncate(rgar($lead,"source_url"), 200);$/;"	v
source_url	includes/api.php	/^        $source_url     = isset($entry["source_url"]) ? $entry["source_url"] : GFFormsModel::get_current_page_url();$/;"	v
spam_count	entry_list.php	/^        $spam_count = $summary["spam"];$/;"	v
spam_enabled	common.php	/^		$spam_enabled = self::akismet_enabled( $form_id ) || has_filter( 'gform_entry_is_spam' ) || has_filter( "gform_entry_is_spam_{$form_id}" );$/;"	v
spam_enabled	common.php	/^	public static function spam_enabled( $form_id ) {$/;"	f
spec	includes/phpqrcode/phpqrcode.php	/^                $spec = array(0,0,0,0,0);$/;"	v
spec	includes/phpqrcode/phpqrcode.php	/^            $spec = array(0,0,0,0,0);$/;"	v
spinner_url	form_display.php	/^                $spinner_url = apply_filters("gform_ajax_spinner_url_{$form_id}", apply_filters("gform_ajax_spinner_url", GFCommon::get_base_url() . "\/images\/spinner.gif", $form), $form);$/;"	v
split	includes/phpqrcode/phpqrcode.php	/^            $split = new QRsplit($string, $input, $modeHint);$/;"	v
splitString	includes/phpqrcode/phpqrcode.php	/^        public function splitString()$/;"	f
splitStringToQRinput	includes/phpqrcode/phpqrcode.php	/^        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)$/;"	f
sql	common.php	/^            $sql = "$/;"	v
sql	export.php	/^            $sql = "SELECT d.field_number as field_id, ifnull(l.value, d.value) as value$/;"	v
sql	forms_model.php	/^		$sql = "$/;"	v
sql	forms_model.php	/^	    $sql = "SELECT count(id)$/;"	v
sql	forms_model.php	/^                    $sql = $wpdb->prepare("DELETE FROM $lead_detail_long_table WHERE lead_detail_id=%d", $lead_detail_id);$/;"	v
sql	forms_model.php	/^                $sql = $wpdb->prepare("SELECT count(0) FROM $lead_detail_long_table WHERE lead_detail_id=%d", $lead_detail_id);$/;"	v
sql	forms_model.php	/^            $sql = $wpdb->prepare("DELETE FROM $lead_detail_long_table$/;"	v
sql	forms_model.php	/^            $sql = $wpdb->prepare("DELETE FROM $lead_detail_table WHERE lead_id=%d AND field_number BETWEEN %s AND %s ", $lead_id, doubleval($input_id) - 0.001, doubleval($input_id) + 0.001);$/;"	v
sql	forms_model.php	/^            $sql = self::sort_by_column_query($form_id, $search_criteria, $sorting, $paging);$/;"	v
sql	forms_model.php	/^            $sql = self::sort_by_custom_field_query($form_id, $sort_field_number, $sort_direction, $search, $offset, $page_size, $star, $read, $is_numeric_sort, $status, $payment_status);$/;"	v
sql	forms_model.php	/^            $sql = self::sort_by_default_field_query($form_id, $sort_field_number, $sort_direction, $search, $offset, $page_size, $star, $read, $is_numeric_sort, $start_date, $end_date, $status, $payment_status);$/;"	v
sql	forms_model.php	/^            $sql = self::sort_by_field_query($form_id, $search_criteria, $sorting, $paging);$/;"	v
sql	forms_model.php	/^        $sql  = "$/;"	v
sql	forms_model.php	/^        $sql =  $wpdb->prepare( "   SELECT l.*, d.field_number, d.value$/;"	v
sql	forms_model.php	/^        $sql = "$/;"	v
sql	forms_model.php	/^        $sql = "SELECT count(distinct input) as match_count FROM ( ";$/;"	v
sql	forms_model.php	/^        $sql = "SELECT count(distinct l.id)$/;"	v
sql	forms_model.php	/^        $sql = "SELECT distinct l.id$/;"	v
sql	forms_model.php	/^        $sql = "SELECT f.id, f.title, f.date_created, f.is_active, 0 as lead_count, 0 view_count$/;"	v
sql	forms_model.php	/^        $sql = "SELECT form_id, count(id) as lead_count FROM $lead_table_name l WHERE status='active' GROUP BY form_id";$/;"	v
sql	forms_model.php	/^        $sql = "SELECT form_id, sum(count) as view_count FROM $view_table_name GROUP BY form_id";$/;"	v
sql	forms_model.php	/^        $sql = "SELECT id, title, '' as last_lead_date, 0 as unread_count$/;"	v
sql	forms_model.php	/^        $sql = "SELECT l.form_id, count(l.id) as unread_count$/;"	v
sql	forms_model.php	/^        $sql = "SELECT l.form_id, max(l.date_created) as last_lead_date, count(l.id) as total_leads$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" DELETE FROM $lead_detail_long_table$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" DELETE FROM $lead_detail_table$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" DELETE FROM $lead_meta_table$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" DELETE FROM $lead_notes_table$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" DELETE FROM $lead_table$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" SELECT id FROM $table_name$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" SELECT l.value FROM $detail_table_name d$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare(" SELECT sum(payment_amount) revenue, count(l.id) orders$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $form_meta_table WHERE form_id=%d", $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $form_table WHERE id=%d", $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $form_view_table WHERE form_id=%d", $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $lead_detail_table WHERE form_id=%d AND field_number >= %d AND field_number < %d", $form_id, $field_id, $field_id + 1);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $lead_detail_table WHERE lead_id=%d", $lead_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $lead_notes_table WHERE lead_id=%d", $lead_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $lead_table WHERE form_id=%d {$status_filter}", $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $lead_table WHERE id=%d", $lead_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("DELETE FROM $table_name WHERE id=%d", $note_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("INSERT INTO $table_name(lead_id, user_id, user_name, value, note_type, date_created) values(%d, %d, %s, %s, %s, utc_timestamp())", $lead_id, $user_id, $user_name, $note, $note_type);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("SELECT confirmations FROM $tablename WHERE form_id = %d", $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("SELECT id FROM $lead_detail_table WHERE lead_id=%d AND field_number BETWEEN %s AND %s", $entry_id, doubleval($field_id) - 0.001, doubleval($field_id) + 0.001);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("SELECT id from $table where is_active = %d and is_trash = %d", (bool) $active, (bool) $trash );$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("UPDATE $form_table SET is_active=%d WHERE id=%d", $is_active, $form_id);$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("UPDATE $form_table_name SET is_trash=0 WHERE id=%d", $form_id) ;$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("UPDATE $form_table_name SET is_trash=1 WHERE id=%d", $form_id) ;$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare("UPDATE $lead_table SET$/;"	v
sql	forms_model.php	/^        $sql = $wpdb->prepare($/;"	v
sql	forms_model.php	/^        $sql = empty($sql_array) ? "" : join(" " . $search_operator . " ", $sql_array);$/;"	v
sql	forms_model.php	/^        $sql = empty($where_array) ? "" : "(" . join(" AND ", $where_array) . ")";$/;"	v
sql	forms_model.php	/^        $sql = empty($where_array) ? "" : join(" $search_operator ", $where_array);$/;"	v
sql	gravityforms.php	/^            $sql = "ALTER TABLE {$wpdb->prefix}rg_test ADD COLUMN a" . uniqid() ." int";$/;"	v
sql	gravityforms.php	/^            $sql = "DROP TABLE {$wpdb->prefix}rg_test";$/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $form_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $form_view_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $lead_detail_long_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $lead_detail_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $lead_meta_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $lead_notes_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $lead_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE " . $meta_table_name . " ($/;"	v
sql	gravityforms.php	/^        $sql = "CREATE TABLE IF NOT EXISTS {$wpdb->prefix}rg_test ( col1 int )";$/;"	v
sql	gravityforms.php	/^        $sql = "UPDATE $lead_meta_table_name lm,$lead_table_name l SET lm.form_id = l.form_id$/;"	v
sql	gravityforms.php	/^        $sql = "select * from $table_name where value= '!'";$/;"	v
sql	includes/addon/class-gf-addon.php	/^                    $sql = $wpdb->prepare("DELETE from $lead_meta_table WHERE meta_key=%s", $meta_key);$/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^		$sql = $wpdb->prepare("SELECT * FROM {$wpdb->prefix}gf_addon_feed$/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^        $sql = "CREATE TABLE {$wpdb->prefix}gf_addon_feed ($/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^        $sql = $wpdb->prepare( "DELETE FROM {$wpdb->prefix}gf_addon_feed WHERE addon_slug=%s", $this->_slug);$/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^        $sql = $wpdb->prepare( "SELECT * FROM {$wpdb->prefix}gf_addon_feed WHERE id=%d", $id );$/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^        $sql = $wpdb->prepare("SELECT * FROM {$wpdb->prefix}gf_addon_feed$/;"	v
sql	includes/addon/class-gf-feed-addon.php	/^        $sql = $wpdb->prepare("SELECT id FROM {$wpdb->prefix}gf_addon_feed WHERE addon_slug=%s AND form_id = %d LIMIT 0,1", $this->_slug, $form_id);$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^		$sql = $wpdb->prepare( "DELETE FROM {$wpdb->prefix}gf_addon_payment_callback WHERE addon_slug=%s", $this->_slug);$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^		$sql = $wpdb->prepare("$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^            $sql = "CREATE TABLE {$wpdb->prefix}gf_addon_payment_callback ($/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = "CREATE TABLE {$wpdb->prefix}gf_addon_payment_transaction ($/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = $wpdb->prepare( "DELETE FROM {$wpdb->prefix}gf_addon_payment_transaction$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = $wpdb->prepare( "SELECT id FROM {$wpdb->prefix}rg_lead WHERE transaction_id = %s", $transaction_id );$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = $wpdb->prepare(" INSERT INTO {$wpdb->prefix}gf_addon_payment_transaction (lead_id, transaction_type, transaction_id, amount, is_recurring, date_created)$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = $wpdb->prepare(" SELECT SQL_CALC_FOUND_ROWS {$select}, lead.orders, lead.subscriptions, transaction.refunds, transaction.recurring_payments, transaction.revenue$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^        $sql = $wpdb->prepare("SELECT id FROM {$wpdb->prefix}gf_addon_payment_callback WHERE addon_slug=%s AND callback_id=%s", $this->_slug, $callback_id);$/;"	v
sql	includes/addon/class-gf-payment-addon.php	/^\/\/            $sql = $wpdb->prepare( "SELECT lead_id FROM {$wpdb->prefix}gf_addon_payment_transaction WHERE transaction_id = %s", $transaction_id );$/;"	v
sql	includes/api.php	/^            $sql = $wpdb->prepare("UPDATE {$table} SET form_id = %d, meta= %s WHERE id=%d", $form_id, $feed_meta_json, $feed_id);$/;"	v
sql	includes/api.php	/^            $sql = $wpdb->prepare("UPDATE {$table} SET meta= %s WHERE id=%d", $feed_meta_json, $feed_id);$/;"	v
sql	includes/api.php	/^        $sql            = $wpdb->prepare("INSERT INTO {$table} (form_id, meta, addon_slug) VALUES (%d, %s, %s)", $form_id, $feed_meta_json, $addon_slug);$/;"	v
sql	includes/api.php	/^        $sql = "SELECT id, form_id, addon_slug, meta FROM {$table} WHERE $where";$/;"	v
sql	includes/api.php	/^        $sql = $wpdb->prepare("DELETE FROM {$table} WHERE id=%d", $feed_id);$/;"	v
sql	includes/webapi/webapi.php	/^            $sql = $wpdb->prepare("DELETE FROM $wpdb->options WHERE option_name LIKE %s", $key);$/;"	v
sql	includes/webapi/webapi.php	/^            $sql = $wpdb->prepare("SELECT count(option_id) FROM $wpdb->options WHERE option_name LIKE %s", $key);$/;"	v
sql_array	forms_model.php	/^        $sql_array               = array();$/;"	v
sql_comparison	forms_model.php	/^                $sql_comparison = 'replace( replace( replace( replace( ld.value, ")", "" ), "(", "" ), "-", "" ), " ", "" ) = %s';$/;"	v
sql_comparison	forms_model.php	/^        $sql_comparison = $is_long ? '( ld.value = %s OR ldl.value = %s )' : 'ld.value = %s';$/;"	v
sql_query	forms_model.php	/^    $sql_query = "  SELECT$/;"	v
sr	includes/phpqrcode/phpqrcode.php	/^            $sr = 1;$/;"	v
src	includes/addon/class-gf-addon.php	/^                $src = isset($style["src"]) ? $style["src"] : false;$/;"	v
src	includes/addon/class-gf-addon.php	/^            $src = isset($script["src"]) ? $script["src"] : false;$/;"	v
src	includes/addon/class-gf-addon.php	/^            $src = isset($style["src"]) ? $style["src"] : false;$/;"	v
src	includes/addon/class-gf-feed-addon.php	/^        $src = GFCommon::get_base_url() . "\/images\/active{$is_active}.png";$/;"	v
st1	includes/phpqrcode/phpqrcode.php	/^                    $st1 = new QRinputItem($this->mode, $words, $this->data);$/;"	v
st2	includes/phpqrcode/phpqrcode.php	/^                    $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words));$/;"	v
standard_cols	includes/addon/class-gf-feed-addon.php	/^        $standard_cols = array($/;"	v
standard_fields	form_detail.php	/^                                    $standard_fields = array($/;"	v
star	entry_detail.php	/^        $star = $filter == "star" ? 1 : null;$/;"	v
star	entry_list.php	/^        $star = $filter == "star" ? 1 : null;$/;"	v
star	forms_model.php	/^    public static function get_lead_count($form_id, $search, $star=null, $read=null, $start_date=null, $end_date=null, $status=null, $payment_status = null){$/;"	v
star	forms_model.php	/^    public static function get_lead_ids($form_id, $search, $star=null, $read=null, $start_date=null, $end_date=null, $status=null, $payment_status = null){$/;"	v
star	gravityforms.php	/^            $star = $filter == "star" ? 1 : null;$/;"	v
star	print-entry.php	/^    $star = $filter == "star" ? 1 : null;$/;"	v
star_qs	entry_list.php	/^        $star_qs = $star !== null ? "&star=$star" : "";$/;"	v
starred_count	entry_list.php	/^        $starred_count = $summary["starred"];$/;"	v
start	form_detail.php	/^        $start = ($page - 1) * $per_page;$/;"	v
start	forms_model.php	/^                $start = strlen($val1) - strlen($val2);$/;"	v
startTime	includes/phpqrcode/phpqrcode.php	/^                    $startTime = $thisTime;$/;"	v
startTime	includes/phpqrcode/phpqrcode.php	/^            $startTime = 0;$/;"	v
start_am_selected	form_settings.php	/^	        $start_am_selected = 'selected="selected"';$/;"	v
start_am_selected	form_settings.php	/^        $start_am_selected = "";$/;"	v
start_at_zero	form_display.php	/^        	$start_at_zero = rgars($form, "pagination\/display_progressbar_on_confirmation");$/;"	v
start_at_zero	form_display.php	/^            $start_at_zero = apply_filters("gform_progressbar_start_at_zero", $start_at_zero, $form);$/;"	v
start_at_zero	form_display.php	/^        $start_at_zero = apply_filters("gform_progressbar_start_at_zero", $start_at_zero, $form);$/;"	v
start_at_zero	form_display.php	/^        $start_at_zero = rgars($form, "pagination\/display_progressbar_on_confirmation");$/;"	v
start_date	export.php	/^        $start_date = empty($_POST["export_date_start"]) ? "" : self::get_gmt_date($_POST["export_date_start"] . " 00:00:00");$/;"	v
start_date	includes/addon/class-gf-results.php	/^                $start_date = rgpost("start");$/;"	v
start_date	includes/addon/class-gf-results.php	/^            $start_date = rgget("start");$/;"	v
start_el	common.php	/^    function start_el( &$output, $object, $depth = 0, $args = array(), $current_object_id = 0) {$/;"	f
start_export	export.php	/^    public static function start_export($form){$/;"	f
start_export	gravityforms.php	/^    public static function start_export(){$/;"	f
start_hour_dd	form_settings.php	/^        $start_hour_dd = "";$/;"	v
start_minute_dd	form_settings.php	/^        $start_minute_dd = "";$/;"	v
start_pm_selected	form_settings.php	/^			$start_pm_selected = 'selected="selected"';$/;"	v
start_pm_selected	form_settings.php	/^        $start_pm_selected = "";$/;"	v
start_subscription	includes/addon/class-gf-payment-addon.php	/^    public function start_subscription( $entry, $subscription )  {$/;"	f
starts_with	js/form_admin.js	/^    supportedOperators = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:supportedOperators
starts_with	js/gf_field_filter.js	/^        operatorStrings = {"is":"is","isnot":"isNot", ">":"greaterThan", "<":"lessThan", "contains":"contains", "starts_with":"startsWith", "ends_with":"endsWith"};$/;"	p	class:operatorStrings
stat	forms_model.php	/^        $stat = stat( dirname( $new_file ));$/;"	v
state	common.php	/^                        $state = sprintf("<input type='hidden' class='gform_hidden' name='input_%d.4' id='%s_4' value='%s'\/>", $id, $field_id, $state_value);$/;"	v
state	common.php	/^                        $state = sprintf("<span class='ginput_{$state_location}$class_suffix' id='" . $field_id . "_4_container' $style>$state_field<label for='%s_4' id='" . $field_id . "_4_label'>" . apply_filters("gform_address_state_{$form_id}", apply_filters("gform_address_state", $state_label, $form_id), $form_id) . "<\/label><\/span>", $field_id);$/;"	v
state	form_display.php	/^                                $state = $_POST["input_" . $field["id"] . "_4"];$/;"	v
state	form_display.php	/^            $state = isset($_gf_state[$key]) ? $_gf_state[$key] : false;$/;"	v
state	form_display.php	/^            $state = json_decode(base64_decode($_POST["state_{$form_id}"]), true);$/;"	v
state	includes/addon/class-gf-results.php	/^                    $state                 = base64_encode(json_encode($data));$/;"	v
state	includes/addon/class-gf-results.php	/^                    $state               = $_POST["state"];$/;"	v
state	includes/webapi/webapi.php	/^                $state = get_option($key_tmp);$/;"	v
state	includes/webapi/webapi.php	/^            $state   = get_option($key_tmp, array());$/;"	v
state_age	includes/webapi/webapi.php	/^                    $state_age       = time() - $state_timestamp;$/;"	v
state_array	includes/addon/class-gf-results.php	/^                    $state_array         = json_decode(base64_decode($state), true);$/;"	v
state_array	includes/addon/class-gf-results.php	/^                $state_array               = null;$/;"	v
state_dropdown	common.php	/^        $state_dropdown = sprintf("<select name='input_%d.4' %s $tabindex %s $state_dropdown_class $state_style>%s<\/select>", $id, $state_field_id, $disabled_text, GFCommon::get_state_dropdown($states, $state_value));$/;"	v
state_dropdown_class	common.php	/^            $state_dropdown_class = "class='state_dropdown'";$/;"	v
state_dropdown_class	common.php	/^        $state_dropdown_class = $state_text_class = $state_style = $text_style = $state_field_id = "";$/;"	v
state_field	common.php	/^                        $state_field = self::get_state_field($field, $id, $field_id, $state_value, $disabled_text, $form_id);$/;"	v
state_field_id	common.php	/^            $state_field_id = "";$/;"	v
state_field_id	common.php	/^            $state_field_id = "id='" . $field_id . "_4'";$/;"	v
state_label	common.php	/^                $state_label = empty($address_type["state_label"]) ? __("State", "gravityforms") : $address_type["state_label"];$/;"	v
state_label	form_detail.php	/^                                        $state_label = isset($addressType["state_label"]) ? $addressType["state_label"] : __("State", "gravityforms") ;$/;"	v
state_location	common.php	/^                $state_location = $address_display_format == "zip_before_city" ? "left" : "right";$/;"	v
state_style	common.php	/^            $state_style = !$has_state_drop_down ? "style='display:none;'" : "";$/;"	v
state_text	common.php	/^        $state_text = sprintf("<input type='text' name='input_%d.4' %s value='%s' $tabindex %s $state_text_class $text_style\/>", $id, $state_field_id, $state_value, $disabled_text);$/;"	v
state_text_class	common.php	/^            $state_text_class = "class='state_text'";$/;"	v
state_timestamp	includes/webapi/webapi.php	/^                    $state_timestamp = rgar($state, "timestamp");$/;"	v
state_value	common.php	/^                    $state_value = esc_attr(rgget($field["id"] . ".4",$value));$/;"	v
state_value	common.php	/^                    $state_value = rgget("defaultState", $field);$/;"	v
state_value	common.php	/^                    $state_value = trim(rgget($field["id"] . ".4", $value));$/;"	v
state_value	common.php	/^                $state_value = $field["defaultProvince"];$/;"	v
state_value	common.php	/^                $state_value ="";$/;"	v
state_value	common.php	/^            $state_value = rgget("defaultState", $field);$/;"	v
state_value	includes/addon/class-gf-addon.php	/^        $state_value = str_replace("  ", " ", trim($entry[$field_id . ".4"]));$/;"	v
states	common.php	/^        $states = array($/;"	v
states	common.php	/^        $states = array_merge(array(''), self::get_canadian_provinces());$/;"	v
states	common.php	/^        $states = array_merge(array(''), self::get_us_states());$/;"	v
states	common.php	/^        $states = empty($address_types[$address_type]["states"]) ? array() : $address_types[$address_type]["states"];$/;"	v
status	entry_detail.php	/^        $status = in_array($filter, array("trash", "spam")) ? $filter : "active";$/;"	v
status	entry_list.php	/^        $status = in_array($filter, array("trash", "spam")) ? $filter : "active";$/;"	v
status	forms_model.php	/^        $status = !rgempty("status", $lead) ? $lead["status"] : "active";$/;"	v
status	forms_model.php	/^        if($read !== null && $status == 'active')$/;"	v
status	forms_model.php	/^        if($star !== null && $status == 'active')$/;"	v
status	forms_model.php	/^    public static function delete_files_by_form($form_id, $status=""){$/;"	v
status	forms_model.php	/^    public static function delete_leads_by_form($form_id, $status=""){$/;"	v
status	gravityforms.php	/^            $status = in_array($filter, array("trash", "spam")) ? $filter : "active";$/;"	v
status	gravityforms.php	/^        $status = rgpost("status");$/;"	v
status	includes/addon/class-gf-payment-addon.php	/^        $status = !rgempty("status_header", $data) ? $data["status_header"] : 200;$/;"	v
status	includes/api.php	/^        $status = isset($entry["status"]) ? $entry["status"] : "active";$/;"	v
status	includes/webapi/webapi.php	/^                        $status   = $this->get_error_status($result);$/;"	v
status	includes/webapi/webapi.php	/^                        $status = 200;$/;"	v
status	includes/webapi/webapi.php	/^                        $status = 202;$/;"	v
status	includes/webapi/webapi.php	/^                    $status   = $this->get_error_status($result);$/;"	v
status	includes/webapi/webapi.php	/^                    $status   = 200;$/;"	v
status	includes/webapi/webapi.php	/^                    $status = 202;$/;"	v
status	includes/webapi/webapi.php	/^                $status   = $this->get_error_status($form_ids);$/;"	v
status	includes/webapi/webapi.php	/^                $status   = $this->get_error_status($result);$/;"	v
status	includes/webapi/webapi.php	/^                $status   = 200;$/;"	v
status	includes/webapi/webapi.php	/^                $status   = 201;$/;"	v
status	includes/webapi/webapi.php	/^                $status   = 400;$/;"	v
status	includes/webapi/webapi.php	/^                $status  = 200;$/;"	v
status	includes/webapi/webapi.php	/^            $status   = 200;$/;"	v
status	print-entry.php	/^    $status = in_array($filter, array("trash", "spam")) ? $filter : "active";$/;"	v
status_filter	forms_model.php	/^        $status_filter = empty($status) ? "" : $wpdb->prepare("AND status=%s", $status);$/;"	v
status_where	forms_model.php	/^        $status_where = isset($search_criteria["status"]) ?  $wpdb->prepare("l.status = %s", $search_criteria["status"]) : "";$/;"	v
step_attr	common.php	/^                $step_attr = $is_html5 ? "step='any'" : "";$/;"	v
step_number	form_display.php	/^                        $step_number = $i+1;$/;"	v
str	common.php	/^        $str = "";$/;"	v
str	common.php	/^        $str = "<option value=''>" . __("Month", "gravityforms") . "<\/option>";$/;"	v
str	common.php	/^        $str = "<option value=''>" . __("Year", "gravityforms") . "<\/option>";$/;"	v
str	common.php	/^        $str = "<select name='{$name}' id='{$id}' {$tabindex} {$disabled_text} >";$/;"	v
str	form_display.php	/^        $str = "if(window['jQuery']){" .$/;"	v
str	forms_model.php	/^            $str = substr($str, 0, $length);$/;"	v
str	includes/addon/class-gf-addon.php	/^		$str = $this->settings_select(array($/;"	v
str	notification.php	/^			    $str = "<input type='text' placeholder='" . __("Enter value", "gravityforms") . "' class='gfield_routing_select' id='routing_value_" . $i . "' value='" . esc_attr($selected_value) . "' onchange='SetRouting(" . $i . ");' onkeyup='SetRouting(" . $i . ");'>";$/;"	v
str	notification.php	/^            $str = "";$/;"	v
str	notification.php	/^        $str = "";$/;"	v
street	form_display.php	/^                                $street = $_POST["input_" . $field["id"] . "_1"];$/;"	v
street2_value	common.php	/^                    $street2_value = esc_attr(rgget($field["id"] . ".2",$value));$/;"	v
street2_value	common.php	/^                    $street2_value = trim(rgget($field["id"] . ".2", $value));$/;"	v
street2_value	common.php	/^                $street2_value ="";$/;"	v
street2_value	includes/addon/class-gf-addon.php	/^        $street2_value = str_replace("  ", " ", trim($entry[$field_id . ".2"]));$/;"	v
street_address	common.php	/^                $street_address = sprintf("<span class='ginput_full$class_suffix' id='" . $field_id . "_1_container'><input type='text' name='input_%d.1' id='%s_1' value='%s' $tabindex %s\/><label for='%s_1' id='" . $field_id . "_1_label'>" . apply_filters("gform_address_street_{$form_id}", apply_filters("gform_address_street",__("Street Address", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $street_value, $disabled_text, $field_id);$/;"	v
street_address2	common.php	/^                    $street_address2 = sprintf("<span class='ginput_full$class_suffix' id='" . $field_id . "_2_container' $style><input type='text' name='input_%d.2' id='%s_2' value='%s' $tabindex %s\/><label for='%s_2' id='" . $field_id . "_2_label'>" . apply_filters("gform_address_street2_{$form_id}",apply_filters("gform_address_street2",__("Address Line 2", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $street2_value, $disabled_text, $field_id);$/;"	v
street_address2	common.php	/^                $street_address2 = "";$/;"	v
street_value	common.php	/^                    $street_value = esc_attr(rgget($field["id"] . ".1",$value));$/;"	v
street_value	common.php	/^                    $street_value = trim(rgget($field["id"] . ".1", $value));$/;"	v
street_value	common.php	/^                $street_value ="";$/;"	v
street_value	includes/addon/class-gf-addon.php	/^        $street_value = str_replace("  ", " ", trim($entry[$field_id . ".1"]));$/;"	v
strength	common.php	/^                $strength = rgar($field,"passwordStrengthEnabled") || IS_ADMIN ? "<div id='{$field_id}_strength_indicator' class='gfield_password_strength' {$strength_style}>" . __("Strength indicator", "gravityforms") . "<\/div><input type='hidden' class='gform_hidden' id='{$field_id}_strength' name='input_{$id}_strength' \/>" : "";$/;"	v
strength	form_display.php	/^                                $strength = $_POST["input_" . $field["id"] . "_strength"];$/;"	v
strength_style	common.php	/^                $strength_style = !rgar($field,"passwordStrengthEnabled") ? "style='display:none;'" : "";$/;"	v
string	forms_model.php	/^		$string = strip_tags( $string, $allowable_tags );$/;"	v
string	includes/phpqrcode/phpqrcode.php	/^            if(is_null($string) || $string == '\\0' || $string == '') {$/;"	v
stringLen	includes/phpqrcode/phpqrcode.php	/^            $stringLen = strlen($this->dataStr);$/;"	v
string_to_check	includes/webapi/webapi.php	/^            $string_to_check = sprintf("%s:%s:%s:%s", $api_key, $method, $path, $expires);$/;"	v
strings	includes/addon/class-gf-results.php	/^            $strings = array($/;"	v
strings	includes/locking/class-gf-locking.php	/^        $strings = $this->get_strings();$/;"	v
strings	includes/locking/class-gf-locking.php	/^        $strings = array($/;"	v
strings	includes/locking/locking.php	/^        $strings = array($/;"	v
strip_script_tag	forms_model.php	/^	public static function strip_script_tag( $string ){$/;"	f
strlen	form_display.php	/^                $strlen = strlen(trim($value));$/;"	v
strpos_row_key	common.php	/^                $strpos_row_key       = strpos($key, "|");$/;"	v
strpos_row_key	entry_detail.php	/^            $strpos_row_key       = strpos($search_field_id, "|");$/;"	v
strpos_row_key	entry_list.php	/^            $strpos_row_key       = strpos($search_field_id, "|");$/;"	v
strpos_row_key	gravityforms.php	/^                $strpos_row_key       = strpos($search_field_id, "|");$/;"	v
strpos_row_key	print-entry.php	/^        $strpos_row_key       = strpos($search_field_id, "|");$/;"	v
structured	includes/phpqrcode/phpqrcode.php	/^        public $structured = 0; \/\/ not supported yet$/;"	v
style	common.php	/^                        $style = "style='display:none;'";$/;"	v
style	common.php	/^                    $style = "";$/;"	v
style	common.php	/^                    $style = $hide_country ? "style='display:none;'" : "";$/;"	v
style	common.php	/^                    $style = (IS_ADMIN && rgget("hideState", $field)) ? "style='display:none;'" : "";$/;"	v
style	common.php	/^                    $style = rgget("disableQuantity", $field) ? "style='display:none;'" : "";$/;"	v
style	common.php	/^                $style = (IS_ADMIN && rgget("hideAddress2", $field)) ? "style='display:none;'" : "";$/;"	v
style	form_display.php	/^                $style = self::is_page_active($form["id"], $field["pageNumber"]) ? "" : "style='display:none;'";$/;"	v
style	form_display.php	/^                $style = self::is_page_active($form_id, 1) ? "" : "style='display:none;'";$/;"	v
style	form_display.php	/^            $style = self::has_conditional_logic($form) ? "style='display:none'" : "";$/;"	v
style	form_display.php	/^        $style = !empty($form) && !IS_ADMIN && RGFormsModel::is_field_hidden($form, $field, $field_values) ? "style='display:none;'" : "";$/;"	v
style	form_display.php	/^        $style = $form["pagination"]["style"];$/;"	v
style	form_settings.php	/^        $style = $form['labelPlacement'] != 'top_label' ? 'display:none;' : '';$/;"	v
style	includes/addon/class-gf-addon.php	/^        $style = $is_error ? 'style="background-color: #ffebe8;"' : "";$/;"	v
styles	includes/addon/class-gf-addon.php	/^        $styles =  $this->styles();$/;"	v
styles	includes/addon/class-gf-addon.php	/^    protected function styles(){$/;"	f
styles	includes/webapi/webapi.php	/^            $styles = array($/;"	v
styles	includes/webapi/webapi.php	/^        public function styles() {$/;"	f
styles	preview.php	/^            $styles = apply_filters("gform_preview_styles", array(), $form);$/;"	v
styles	print-entry.php	/^		$styles = apply_filters("gform_print_styles", false, $form);$/;"	v
sub_filter	common.php	/^                    $sub_filter                    = array();$/;"	v
sub_filters	common.php	/^                $sub_filters          = array();$/;"	v
sub_menu_items	gravityforms.php	/^		$sub_menu_items = array();$/;"	v
sub_menu_items	gravityforms.php	/^		$sub_menu_items = self::get_form_settings_sub_menu_items($form_id);$/;"	v
sub_menu_items	gravityforms.php	/^                        $sub_menu_items = array_values($sub_menu_items); \/\/reset numeric keys$/;"	v
sub_menu_items	gravityforms.php	/^                    $sub_menu_items = rgar($menu_item, "sub_menu_items");$/;"	v
sub_menu_items	includes/addon/class-gf-results.php	/^                $sub_menu_items   = array();$/;"	v
sub_menu_items_string	gravityforms.php	/^			$sub_menu_items_string = '<div class="gf_submenu"><ul>' . $sub_menu_items_string . '<\/ul><\/div>';$/;"	v
sub_menu_items_string	gravityforms.php	/^		$sub_menu_items_string = "";$/;"	v
sub_menu_str	gravityforms.php	/^                        $sub_menu_str = self::toolbar_sub_menu_items($sub_menu_items, $compact);$/;"	v
sub_menu_str	gravityforms.php	/^                    $sub_menu_str = "";$/;"	v
subject	common.php	/^        $subject = GFCommon::replace_variables(rgar($notification, "subject"), $form, $lead, false, false, true, 'text');$/;"	v
subject	common.php	/^        $subject = GFCommon::replace_variables(rgget("subject", $form["autoResponder"]), $form, $lead, false, false);$/;"	v
subject	common.php	/^        $subject = GFCommon::replace_variables(rgget("subject", $form["notification"]), $form, $lead, false, false);$/;"	v
subject	entry_detail.php	/^                                        $subject = '';$/;"	v
subject_class	notification.php	/^        $subject_class = $is_invalid_subject ? "class='gfield_error'" : "";$/;"	v
submission	form_display.php	/^    public static $submission = array();$/;"	v
submission_data	includes/addon/class-gf-payment-addon.php	/^		$submission_data = $this->get_submission_data( $feed, $form, $entry );$/;"	v
submission_feed	includes/addon/class-gf-payment-addon.php	/^                        $submission_feed = $feed;$/;"	v
submission_feed	includes/addon/class-gf-payment-addon.php	/^                $submission_feed = empty($feeds) ? false : $this->get_feed( $feeds[0] );$/;"	v
submission_feed	includes/addon/class-gf-payment-addon.php	/^            $submission_feed = false;$/;"	v
submission_info	form_display.php	/^        $submission_info = isset(self::$submission[$form_id]) ? self::$submission[$form_id] : false;$/;"	v
subrow_count	export.php	/^            $subrow_count = isset($field_rows[$field_id]) ? intval($field_rows[$field_id]) : 0;$/;"	v
subscribe	includes/addon/class-gf-payment-addon.php	/^    protected function subscribe($feed, $submission_data, $form, $entry){$/;"	f
subscription	includes/addon/class-gf-payment-addon.php	/^			$subscription = $this->subscribe( $feed, $submission_data, $form, $entry );$/;"	v
subscription	includes/addon/class-gf-payment-addon.php	/^        $subscription = rgar( $authorization, 'subscription' );$/;"	v
subsetting_close	form_settings.php	/^        $subsetting_close = '$/;"	v
subsetting_close	notification.php	/^        $subsetting_close = '$/;"	v
subsetting_open	form_settings.php	/^        $subsetting_open = '$/;"	v
subsetting_open	notification.php	/^        $subsetting_open = '$/;"	v
subtotal	common.php	/^                                                                $subtotal = floatval($product["quantity"]) * $price;$/;"	v
subtotal	common.php	/^                        $subtotal = floatval($product["quantity"]) * $price;$/;"	v
subtotal	common.php	/^            $subtotal = floatval($product["quantity"]) * $price;$/;"	v
subtotal	entry_detail.php	/^                                                        $subtotal = floatval($product["quantity"]) * $price;$/;"	v
subview	form_settings.php	/^        $subview = rgget('subview') ? rgget('subview') : 'settings';$/;"	v
subview	gravityforms.php	/^        $subview = rgget( 'subview' );$/;"	v
subview	includes/addon/class-gf-addon.php	/^        $subview = rgget("subview");$/;"	v
subview	includes/addon/class-gf-addon.php	/^        if (rgget("page") == "gf_settings" && $subview == $this->_slug && $this->current_user_can_any($this->_capabilities_settings_page)) {$/;"	v
subview	includes/locking/locking.php	/^            $subview = "settings";$/;"	v
subview	includes/locking/locking.php	/^        $subview = rgget("subview");$/;"	v
subview	includes/webapi/webapi.php	/^            $subview = rgget("subview");$/;"	v
subview	includes/webapi/webapi.php	/^            if (rgget("page") == "gf_settings" && $subview == $this->get_short_title() && $this->current_user_can_any($this->_capabilities_settings_page)) {$/;"	v
subview	settings.php	/^            $subview = 'settings';$/;"	v
subview	settings.php	/^        $subview = rgget( 'subview' ) ? rgget( 'subview' ) : rgget( 'addon' );$/;"	v
subview	settings.php	/^        $subview = self::get_subview();$/;"	v
success	common.php	/^                $success = self::delete_transient($key);$/;"	v
success	common.php	/^            $success = delete_site_transient($key);$/;"	v
success	common.php	/^            $success = delete_transient($key);$/;"	v
success	common.php	/^            $success = self::delete_transient($key);$/;"	v
success	common.php	/^            $success = self::set_transient($key, $data, $expiration);$/;"	v
success	common.php	/^            $success = set_site_transient($key, $data, $expiration);$/;"	v
success	common.php	/^            $success = set_transient($key, $data, $expiration);$/;"	v
success	common.php	/^        $success = $rows_deleted !== false ? true : false;$/;"	v
success	common.php	/^        $success = true;$/;"	v
success	forms_model.php	/^        $success = $result == false;$/;"	v
suffix	common.php	/^                        $suffix = GFCommon::get_input($field, $field["id"] + 0.8);$/;"	v
suffix	common.php	/^                    $suffix = esc_attr(RGForms::get($field["id"] . ".8", $value));$/;"	v
suffix	common.php	/^                    $suffix = trim(rgget($field["id"] . ".8", $value));$/;"	v
suffix	common.php	/^                $suffix = "";$/;"	v
suffix	includes/addon/class-gf-addon.php	/^        $suffix = trim(rgar($entry,$field_id . ".8"));$/;"	v
suffix_tabindex	common.php	/^                        $suffix_tabindex = self::get_tabindex();$/;"	v
sum	includes/addon/class-gf-results.php	/^                        $sum           = $results["sum_of_scores"];$/;"	v
summary	entry_list.php	/^        $summary = RGFormsModel::get_form_counts($form_id);$/;"	v
summary	includes/addon/class-gf-payment-addon.php	/^        $summary = $this->get_sales_summary($form["id"]);$/;"	v
summary	includes/addon/class-gf-payment-addon.php	/^        $summary = $wpdb->get_results($sql, ARRAY_A);$/;"	v
supported_billing_intervals	includes/addon/class-gf-payment-addon.php	/^    protected function supported_billing_intervals(){$/;"	f
supported_cards	common.php	/^        $supported_cards = rgar($field, 'creditCards');$/;"	v
supported_currencies	includes/addon/class-gf-payment-addon.php	/^    public function supported_currencies($currencies){$/;"	f
supported_fields	notification.php	/^	private static $supported_fields = array("checkbox", "radio", "select", "text", "website", "textarea", "email", "hidden", "number", "phone", "multiselect", "post_title",$/;"	v
supported_input_types	common.php	/^        $supported_input_types = array('text', 'select', 'number', 'checkbox', 'radio', 'hidden', 'singleproduct', 'price', 'hiddenproduct', 'calculation', 'singleshipping');$/;"	v
symbol_left	currency.php	/^           $symbol_left = html_entity_decode($symbol_left);$/;"	v
symbol_left	currency.php	/^        $symbol_left = !empty($this->currency["symbol_left"]) ? $this->currency["symbol_left"] . $this->currency["symbol_padding"] : "";$/;"	v
symbol_right	currency.php	/^           $symbol_right = html_entity_decode($symbol_right);$/;"	v
symbol_right	currency.php	/^        $symbol_right = !empty($this->currency["symbol_right"]) ? $this->currency["symbol_padding"] . $this->currency["symbol_right"] : "";$/;"	v
tab	includes/phpqrcode/phpqrcode.php	/^                $tab = $this->encode($intext);$/;"	v
tab_index	common.php	/^    public static $tab_index = 1;$/;"	v
tab_label	settings.php	/^            $tab_label = $name;$/;"	v
tabindex	common.php	/^                                $tabindex = self::get_tabindex();$/;"	v
tabindex	common.php	/^                        $tabindex = self::get_tabindex();$/;"	v
tabindex	common.php	/^                    $tabindex = self::get_tabindex();$/;"	v
tabindex	common.php	/^                $tabindex = self::get_tabindex();$/;"	v
tabindex	common.php	/^        $tabindex = GFCommon::get_tabindex();$/;"	v
tabindex	common.php	/^        $tabindex = self::get_tabindex();$/;"	v
tabindex	form_display.php	/^        $tabindex = GFCommon::get_tabindex();$/;"	v
tabindex	form_display.php	/^    private static function gform_footer($form, $class, $ajax, $field_values, $previous_button, $display_title, $display_description, $tabindex = 1){$/;"	v
tabindex	gravityforms.php	/^            $tabindex = isset($tabindex) ? absint($tabindex) : 1;$/;"	v
table	forms_model.php	/^        $table = self::get_form_table_name();$/;"	v
table	gravityforms.php	/^        foreach ($cqueries as $table => $qry) {$/;"	v
table	includes/api.php	/^        $table          = $wpdb->prefix . "gf_addon_feed";$/;"	v
table	includes/api.php	/^        $table       = $wpdb->prefix . "gf_addon_feed";$/;"	v
table	includes/api.php	/^        $table = $wpdb->prefix . "gf_addon_feed";$/;"	v
table	includes/api.php	/^        $table = GFFormsModel::get_form_table_name();$/;"	v
table_exists	includes/addon/class-gf-addon.php	/^    public function table_exists($table_name){$/;"	f
table_name	forms_model.php	/^        $table_name =  self::get_form_table_name();$/;"	v
table_name	forms_model.php	/^        $table_name =  self::get_meta_table_name();$/;"	v
table_name	forms_model.php	/^        $table_name = self::get_form_view_table_name();$/;"	v
table_name	forms_model.php	/^        $table_name = self::get_lead_notes_table_name();$/;"	v
table_name	forms_model.php	/^        $table_name = self::get_meta_table_name();$/;"	v
table_name	forms_model.php	/^    $table_name = RGFormsModel::get_lead_meta_table_name();$/;"	v
table_name	gravityforms.php	/^                    $table_name = $query_table_name;$/;"	v
table_name	gravityforms.php	/^            $table_name = $table;$/;"	v
table_name	gravityforms.php	/^        $table_name = RGFormsModel::get_lead_details_table_name();$/;"	v
tablename	forms_model.php	/^        $tablename = GFFormsModel::get_meta_table_name();$/;"	v
tabs	gravityforms.php	/^		$tabs = GFFormSettings::get_tabs($form_id);$/;"	v
tabs	includes/addon/class-gf-addon.php	/^            $tabs = $current_menu_item["tabs"];$/;"	v
tabs	includes/addon/class-gf-addon.php	/^            $tabs = $this->get_app_settings_tabs();$/;"	v
tabs	includes/addon/class-gf-addon.php	/^            $tabs = array($tabs);$/;"	v
tag	xml.php	/^        $tag = isset($nodes[0]["tag"]) ? $nodes[0]["tag"] : false;$/;"	v
tag_args	common.php	/^        $tag_args = RGFormsModel::get_input_type($field) == "list" ? ":{$args}" : ""; \/\/args currently only supported by list field$/;"	v
tag_args	common.php	/^        $tag_args = RGFormsModel::get_input_type($field) == "list" ? ":{$option}" : ""; \/\/args currently only supported by list field$/;"	v
tags	common.php	/^                $tags = rgar($group_tags, 'tags');$/;"	v
tags	forms_model.php	/^                    $tags = explode(",", $value);$/;"	v
tail	forms_model.php	/^                $tail = substr($val1, $start);$/;"	v
target	form_display.php	/^            $target = $ajax ? "target='gform_ajax_frame_{$form_id}'" : "";$/;"	v
target	forms_model.php	/^        $target = self::get_file_upload_path($form_id, $file["name"]);$/;"	v
target	forms_model.php	/^        $target = self::get_file_upload_path($form_id, $tempfile_info["uploaded_filename"]);$/;"	v
target	gravityforms.php	/^				$target = rgar($menu_item, "target");$/;"	v
target	gravityforms.php	/^                    $target 	= rgar($menu_item, "target");$/;"	v
target_dir	includes/upload.php	/^        $target_dir = GFFormsModel::get_upload_path($form_id) . DIRECTORY_SEPARATOR . "tmp" . DIRECTORY_SEPARATOR;$/;"	v
target_image	includes/phpqrcode/phpqrcode.php	/^            $target_image =ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint);$/;"	v
target_input_id	form_display.php	/^                	$target_input_id = sprintf( 'input_%s_%s_shim', $form_id, $field['id'] );$/;"	v
target_input_id	form_display.php	/^                        $target_input_id = $field_id . "_2";$/;"	v
target_input_id	form_display.php	/^                        $target_input_id = $field_id . "_3";$/;"	v
target_input_id	form_display.php	/^                        $target_input_id = $field_id;$/;"	v
target_input_id	form_display.php	/^                    $target_input_id = $field_id . "_1";$/;"	v
target_input_id	form_display.php	/^                    $target_input_id = $field_id;$/;"	v
target_input_id	form_display.php	/^        $target_input_id = "";$/;"	v
target_page	form_display.php	/^        $target_page = self::get_target_page( $form, $page_number, $field_values );$/;"	v
target_page	form_display.php	/^        $target_page = self::get_target_page($form, $page_number, $field_values);$/;"	v
target_path	form_display.php	/^        $target_path = RGFormsModel::get_upload_path($form["id"]) . "\/tmp\/";$/;"	v
target_path	forms_model.php	/^            $target_path = $target_root . $file_name . "$counter" . $extension;$/;"	v
target_path	forms_model.php	/^        $target_path = $target_root . $file_name . $extension;$/;"	v
target_path	forms_model.php	/^        $target_path = trim($target_path, '.');$/;"	v
target_root	forms_model.php	/^        $target_root = $upload_root_info["path"];$/;"	v
target_root	forms_model.php	/^        $target_root = self::get_upload_path($form_id) . "\/$y\/$m\/";$/;"	v
target_root_url	forms_model.php	/^        $target_root_url = $upload_root_info["url"];$/;"	v
target_root_url	forms_model.php	/^        $target_root_url = self::get_upload_url($form_id) . "\/$y\/$m\/";$/;"	v
target_url	forms_model.php	/^        $target_url = str_replace($target_root, $target_root_url, $target_path);$/;"	v
target_value	forms_model.php	/^        $target_value = GFFormsModel::maybe_trim_input($target_value, rgar($source_field, "formId"),$source_field);$/;"	v
tb_click	js/thickbox.js	/^function tb_click(){$/;"	c
tb_detectMacXFF	js/thickbox.js	/^function tb_detectMacXFF() {$/;"	f
tb_getPageSize	js/thickbox.js	/^function tb_getPageSize(){$/;"	f
tb_init	js/thickbox.js	/^function tb_init(domChunk){$/;"	f
tb_parseQuery	js/thickbox.js	/^function tb_parseQuery ( query ) {$/;"	f
tb_position	js/thickbox.js	/^function tb_position() {$/;"	f
tb_remove	js/thickbox.js	/^function tb_remove() {$/;"	f
tb_show	js/thickbox.js	/^function tb_show(caption, url, imageGroup) {\/\/function called when the user clicks on a thickbox link$/;"	f
tb_showIframe	js/thickbox.js	/^function tb_showIframe(){$/;"	f
tcpdfBarcodeArray	includes/phpqrcode/phpqrcode.php	/^        public static function tcpdfBarcodeArray($code, $mode = 'QR,L', $tcPdfVersion = '4.5.037')$/;"	f
td_id	entry_detail.php	/^                                $td_id = "field_" . $form_id . "_" . $field_id;$/;"	v
temp_filepath	forms_model.php	/^                            $temp_filepath = self::get_upload_path($form_id) . "\/tmp\/" . $file_info["temp_filename"];$/;"	v
temp_filepath	forms_model.php	/^            $temp_filepath = self::get_upload_path($form_id) . "\/tmp\/" . $file_info["temp_filename"];$/;"	v
terms	common.php	/^        $terms = get_terms('category', $args);$/;"	v
terms	form_detail.php	/^        $terms = get_terms($taxonomy, 'get=all');$/;"	v
terms_copy	common.php	/^        $terms_copy = unserialize(serialize($terms)); \/\/ deep copy the terms to avoid repeating GFCategoryWalker on previously cached terms.$/;"	v
test_mode	includes/webapi/webapi.php	/^            $test_mode = rgget("test");$/;"	v
text	common.php	/^                $text = str_replace($match[0], $value , $text);$/;"	v
text	common.php	/^                $text = str_replace($match[0], self::get_submitted_fields($form, $lead, $display_empty, !$use_value, $format, $use_admin_label, "all_fields", rgar($match,2)), $text);$/;"	v
text	common.php	/^            $text = 'checked="checked"';$/;"	v
text	common.php	/^            $text = 'selected="selected"';$/;"	v
text	common.php	/^            $text = str_replace("  ", " ", $text);$/;"	v
text	common.php	/^            $text = str_replace("{all_fields_display_empty}", self::get_submitted_fields($form, $lead, true, true, $format, false, "all_fields_display_empty"), $text);$/;"	v
text	common.php	/^            $text = str_replace("{pricing_fields}", '<table width="99%" border="0" cellpadding="1" cellspacing="0" bgcolor="#EAEAEA">$/;"	v
text	common.php	/^            $text = str_replace($full_tag, $url_encode ? urlencode($custom_field_value) : $custom_field_value, $text);$/;"	v
text	common.php	/^            $text = str_replace($full_tag, $url_encode ? urlencode($post_array[$property]) : $post_array[$property], $text);$/;"	v
text	common.php	/^            $text = str_replace($full_tag, $value, $text);$/;"	v
text	common.php	/^        $text = $nl2br ? nl2br($text) : $text;$/;"	v
text	common.php	/^        $text = apply_filters('gform_replace_merge_tags', $text, $form, $lead, $url_encode, $esc_html, $nl2br, $format);$/;"	v
text	common.php	/^        $text = self::decode_merge_tag($text);$/;"	v
text	common.php	/^        $text = self::replace_variables_prepopulate($text, $url_encode, $lead);$/;"	v
text	common.php	/^        $text = str_replace( '{ip}', $url_encode ? urlencode( $ip ) : $ip, $text );$/;"	v
text	common.php	/^        $text = str_replace("{admin_email}", $url_encode ? urlencode($wp_email) : $wp_email, $text);$/;"	v
text	common.php	/^        $text = str_replace("{date_dmy}", $url_encode ? urlencode($local_date_dmy) : $local_date_dmy, $text);$/;"	v
text	common.php	/^        $text = str_replace("{date_mdy}", $url_encode ? urlencode($local_date_mdy) : $local_date_mdy, $text);$/;"	v
text	common.php	/^        $text = str_replace("{embed_url}", $url_encode ? urlencode(RGFormsModel::get_current_page_url()) : RGFormsModel::get_current_page_url(), $text);$/;"	v
text	common.php	/^        $text = str_replace("{entry_id}", $url_encode ? urlencode(rgar($lead, "id")) : rgar($lead, "id"), $text);$/;"	v
text	common.php	/^        $text = str_replace("{entry_url}", $url_encode ? urlencode($entry_url) : $entry_url, $text);$/;"	v
text	common.php	/^        $text = str_replace("{form_id}", $url_encode ? urlencode($form["id"]) : $form["id"], $text);$/;"	v
text	common.php	/^        $text = str_replace("{form_title}", $url_encode ? urlencode($form["title"]) : $form["title"], $text);$/;"	v
text	common.php	/^        $text = str_replace("{post_edit_url}", $url_encode ? urlencode($post_url) : $post_url, $text);$/;"	v
text	common.php	/^        $text = str_replace("{post_id}", $url_encode ? urlencode(rgar($lead, "post_id")) : rgar($lead, "post_id"), $text);$/;"	v
text	common.php	/^        $text = str_replace("{referer}", $url_encode ? urlencode(RGForms::get("HTTP_REFERER", $_SERVER)) : RGForms::get("HTTP_REFERER", $_SERVER), $text);$/;"	v
text	common.php	/^        $text = str_replace("{user_agent}", $url_encode ? urlencode(RGForms::get("HTTP_USER_AGENT", $_SERVER)) : RGForms::get("HTTP_USER_AGENT", $_SERVER), $text);$/;"	v
text	common.php	/^        $text = trim($text);$/;"	v
text	currency.php	/^        $text = preg_replace("\/&.*?;\/", "", $text);$/;"	v
text	currency.php	/^        $text = str_replace($this->currency["symbol_left"], "", $text);$/;"	v
text	currency.php	/^        $text = str_replace($this->currency["symbol_right"], "", $text);$/;"	v
text	currency.php	/^        $text = strval($text);$/;"	v
text	includes/addon/class-gf-results.php	/^                        $text          = $choice["text"];$/;"	v
text	includes/phpqrcode/phpqrcode.php	/^        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)$/;"	f
text	includes/webapi/webapi.php	/^                                $text                     = GFSurvey::get_likert_column_text($field, $choice_value . ":" . $col_val);$/;"	v
text	includes/webapi/webapi.php	/^                            $text                             = GFFormsModel::get_choice_text($field, $choice_value);$/;"	v
text	js/forms.js	/^    "text" :            ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .size_setting, .input_mask_setting, .maxlen_setting, .password_field_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
text_button_checked	form_settings.php	/^			$text_button_checked = 'checked="checked"';$/;"	v
text_button_checked	form_settings.php	/^        $text_button_checked = "";$/;"	v
text_style	common.php	/^            $text_style = $has_state_drop_down  ? "style='display:none;'" : "";$/;"	v
text_style_display	form_settings.php	/^            $text_style_display = "display:none;";$/;"	v
text_style_display	form_settings.php	/^        $text_style_display = "";$/;"	v
textarea	js/forms.js	/^    "textarea" :        ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .maxlen_setting, .size_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_textarea_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
theme	common.php	/^                        $theme = empty($field["captchaTheme"]) ? "red" : esc_attr($field["captchaTheme"]);$/;"	v
theme	common.php	/^        $theme = wp_get_theme();$/;"	v
theme	gravityforms.php	/^            $theme = get_template();$/;"	v
theme_author	common.php	/^    	$theme_author = $theme->get("Author");$/;"	v
theme_author_uri	common.php	/^    	$theme_author_uri = $theme->get("AuthorURI");$/;"	v
theme_name	common.php	/^        $theme_name = $theme->get("Name");$/;"	v
theme_uri	common.php	/^    	$theme_uri = $theme->get("ThemeURI");$/;"	v
theme_version	common.php	/^    	$theme_version = $theme->get("Version");$/;"	v
themes	gravityforms.php	/^                $themes = array();$/;"	v
themes	gravityforms.php	/^            $themes = get_option("gf_imported_theme_file");$/;"	v
thickbox	gravityforms.php	/^            $thickbox = !GFCommon::is_wp_version("3.3") ? 'gf_thickbox' : 'thickbox';$/;"	v
thumb	entry_list.php	/^                                                $thumb = self::get_icon_url($file_path);$/;"	v
thumb	entry_list.php	/^                                                $thumb = self::get_icon_url($url);$/;"	v
time	forms_model.php	/^                $time = $post->post_date;$/;"	v
time	forms_model.php	/^        $time = current_time( 'mysql' );$/;"	v
time	forms_model.php	/^        $time = current_time('mysql');$/;"	v
time	includes/phpqrcode/phpqrcode.php	/^            $time = ((float)$usec + (float)$sec);$/;"	v
time	js/forms.js	/^    "time" :            ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .time_format_setting, .rules_setting, .duplicate_setting, .visibility_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
timeBenchmark	includes/phpqrcode/phpqrcode.php	/^        public static function timeBenchmark()$/;"	f
time_diff	common.php	/^            $time_diff = time() - $lead_gmt_time;$/;"	v
time_end	includes/addon/class-gf-results.php	/^                $time_end       = microtime(true);$/;"	v
time_start	includes/addon/class-gf-results.php	/^            $time_start = microtime(true);$/;"	v
timestamp	common.php	/^            $timestamp = time();$/;"	v
timestamp_end	form_display.php	/^            $timestamp_end = strtotime($local_time_end . ' +0000');$/;"	v
timestamp_start	form_display.php	/^            $timestamp_start = strtotime($local_time_start . ' +0000');$/;"	v
title	common.php	/^                $title = count($ary) > 1 ? $ary[1] : "";$/;"	v
title	common.php	/^                $title = esc_attr(rgget($field["id"] . ".1", $value));$/;"	v
title	export.php	/^                    $title = $tab['name'];$/;"	v
title	export.php	/^                $title = $form["title"] . "($count)";$/;"	v
title	export.php	/^            $title = $form["title"];$/;"	v
title	form_settings.php	/^                    $title = $tab['label'];$/;"	v
title	forms_model.php	/^                    $title = count($ary) > 1 ? $ary[1] : "";$/;"	v
title	forms_model.php	/^                $title = $image_meta['title'];$/;"	v
title	forms_model.php	/^            $title = "Untitled_$count";$/;"	v
title	forms_model.php	/^            $title = $form->title . " - Copy $count";$/;"	v
title	forms_model.php	/^        $title = "Untitled";$/;"	v
title	forms_model.php	/^        $title = $form->title . " - Copy 1";$/;"	v
title	forms_model.php	/^        $title = $name;$/;"	v
title	gravityforms.php	/^                    $title 		= rgar($menu_item, "title");$/;"	v
title	gravityforms.php	/^                $title = strtolower($title) == "false" ? false : true;$/;"	v
title	includes/addon/class-gf-addon.php	/^                $title = isset($tab["label"]) ? $tab['label'] : $tab['name'];$/;"	v
title	includes/addon/class-gf-auto-upgrade.php	/^                $title       = $this->_title;$/;"	v
title	includes/addon/class-gf-feed-addon.php	/^            $title = $this->form_settings_title();$/;"	v
title	includes/addon/class-gf-feed-addon.php	/^        $title = $is_active ? __("Active", "gravityforms") : __("Inactive", "gravityforms");$/;"	v
title	includes/api.php	/^            $title = $form_meta["title"] . "($count)";$/;"	v
title	includes/api.php	/^        $title = $form_meta["title"];$/;"	v
title	settings.php	/^                    $title = $tab['label'];$/;"	v
title	widget.php	/^        $title = apply_filters('widget_title', $instance['title'] );$/;"	v
title_field	common.php	/^                $title_field = rgget("displayTitle", $field) || IS_ADMIN ? sprintf("<span class='ginput_full$class_suffix ginput_post_image_title' $title_style><input type='text' name='input_%d.1' id='%s_1' value='%s' $tabindex %s\/><label for='%s_1'>" . apply_filters("gform_postimage_title_{$form_id}",apply_filters("gform_postimage_title",__("Title", "gravityforms"), $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $title, $disabled_text, $field_id) : "";$/;"	v
title_style	common.php	/^                $title_style = !rgget("displayTitle", $field) && IS_ADMIN ? $hidden_style : "";$/;"	v
titles	forms_model.php	/^        $titles = $wpdb->get_col("SELECT post_title FROM $wpdb->posts WHERE post_title like '%Untitled%'");$/;"	v
titles	forms_model.php	/^        $titles = array_values($titles);$/;"	v
tmp_file_name	includes/upload.php	/^        $tmp_file_name = $form_unique_id . "_input_" . $field_id . "_" . $file_name;$/;"	v
tmp_file_path	includes/upload.php	/^                    $tmp_file_path = $target_dir . $file;$/;"	v
to	common.php	/^        $to    = str_replace( " ", "", $to );$/;"	v
to	common.php	/^        $to = GFCommon::replace_variables($email_to, $form, $lead, false, false);$/;"	v
to	common.php	/^        $to = GFCommon::replace_variables($to, $form, $lead, false, false);$/;"	v
to	common.php	/^        $to = apply_filters("gform_autoresponder_email_{$form_id}", apply_filters("gform_autoresponder_email", $to_field, $form), $form);$/;"	v
to	common.php	/^        $to = apply_filters("gform_notification_email_{$form_id}" , apply_filters("gform_notification_email", $email_to, $lead), $lead);$/;"	v
to	form_display.php	/^		\/\/run the function to populate the legacy confirmation format to be safe$/;"	f
to	form_display.php	/^                            $raw_value = $_POST["input_" . $field["id"]]; \/\/Raw value will be tested against the is_numeric() function to make sure it is in the right format.$/;"	f
to	form_display.php	/^    * Use add_init_script() function to enqueue scripts.$/;"	f
to	includes/addon/class-gf-addon.php	/^	 * @param $horizontal_class - CSS class to style checkbox items horizontally$/;"	c
to	includes/addon/class-gf-addon.php	/^	 * @param string $overrides - Specify the class to replace\/override$/;"	c
to	includes/addon/class-gf-addon.php	/^     * Gets executed before all init functions. Override this function to perform initialization tasks that must be done prior to init$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to add a custom app settings page.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to add a custom settings page.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to add the tab conditionally.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to add to add database update scripts or any other code to be executed when the Add-On version changes$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to create a custom plugin page$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to create a top level app menu.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to customize the form settings icon$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to customize the markup for the uninstall section on the plugin settings page$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to customize the plugin page icon$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to customize the plugin page title$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to display a custom title on the Form Settings Page.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to implement a complete custom form settings page.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to load custom screen options.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to specific a custom app settings icon$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to specific a custom app settings title$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to specify a custom icon for the top level app menu.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Override this function to specify the settings fields to be rendered on the plugin settings page$/;"	f
to	includes/addon/class-gf-addon.php	/^     * Use this function to override that behavior and add a custom page title.$/;"	f
to	includes/addon/class-gf-addon.php	/^     * When implementing a custom validation callback function, use this function to specify the error message to be displayed.$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Calls the appropriate field function to handle rendering of each specific field type$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to add AJAX hooks or to add initialization code when an AJAX request is being performed$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to add initialization code (i.e. hooks) for the admin site (WP dashboard)$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to add initialization code (i.e. hooks) for the public (customer facing) site$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to provide a list of scripts to be enqueued.$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to provide a list of styles to be enqueued.$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to specify the settings fields to be rendered on the form settings page$/;"	f
to	includes/addon/class-gf-addon.php	/^    * Override this function to specify the settings fields to be rendered on the plugin settings page$/;"	f
to	includes/addon/class-gf-feed-addon.php	/^     * Override this function to change the message that is displayed when the feed list is empty$/;"	f
to	includes/addon/class-gf-feed-addon.php	/^     * Override this function to force a message to be displayed in the feed list (instead of data). Useful to alert users when main plugin settings haven't been completed.$/;"	f
to	includes/addon/class-gf-feed-addon.php	/^    * Override this function to add custom bulk actions$/;"	f
to	includes/addon/class-gf-feed-addon.php	/^    * Override this function to process custom bulk actions added via the get_bulk_actions() function$/;"	f
to	includes/addon/class-gf-payment-addon.php	/^     * Override this function to add or remove currencies from the list of supported currencies$/;"	f
to	includes/addon/class-gf-payment-addon.php	/^     * Override this function to specify a URL to the third party payment processor. Useful when developing a payment gateway that processes the payment outsite of the website (i.e. PayPal Standard).$/;"	f
to	includes/addon/class-gf-payment-addon.php	/^     * Override this function to specify a custom avatar (i.e. the payment gateway logo) for entry notes created by the Add-On$/;"	f
to	recaptchalib.php	/^ * Calls an HTTP POST function to verify if the user's guess was correct$/;"	f
toByte	includes/phpqrcode/phpqrcode.php	/^        public function toByte()$/;"	f
toJSON	js/jquery.json-1.3.js	/^    Date.prototype.toJSON = function(date)$/;"	m	class:Date
toMoney	js/gravityforms.js	/^    this.toMoney = function(number){$/;"	m	class:Currency
toNumber	js/gravityforms.js	/^    this.toNumber = function(text){$/;"	m	class:Currency
toUpper	includes/phpqrcode/phpqrcode.php	/^        public function toUpper()$/;"	f
to_email	notification.php	/^                $to_email = rgget("toType", $notification) == "email" ? rgget("to", $notification) : "";$/;"	v
to_field	common.php	/^        	$to_field = rgar($notification, "toField");$/;"	v
to_field	common.php	/^                $to_field = rgar($notification, "to");$/;"	v
to_field	common.php	/^        $to_field = "";$/;"	v
to_field	common.php	/^        $to_field = isset($form["autoResponder"]["toField"]) ? rgget($form["autoResponder"]["toField"], $lead) : "";$/;"	v
to_field	forms_model.php	/^            $to_field = rgar($user_notification, "toField");$/;"	v
to_field	notification.php	/^                        $to_field = rgget("toType", $notification) == "field" ? rgget("to", $notification) : "";$/;"	v
to_money	common.php	/^    public static function to_money($number, $currency_code=""){$/;"	f
to_money	currency.php	/^    public function to_money($number, $do_encode=false){$/;"	f
to_number	common.php	/^    public static function to_number($text, $currency_code=""){$/;"	f
to_number	currency.php	/^    public function to_number($text){$/;"	f
to_singular	xml.php	/^    private function to_singular($str){$/;"	f
today	includes/addon/class-gf-payment-addon.php	/^        $today = gmdate("Y-m-d", $local_time);$/;"	v
toggleNotificationOverride	entry_detail.php	/^            function toggleNotificationOverride(isInit) {$/;"	f
toggleNotificationOverride	entry_list.php	/^            function toggleNotificationOverride(isInit) {$/;"	f
toggleSelectAll	entry_list.php	/^            function toggleSelectAll(visible){$/;"	f
toolbar_class	gravityforms.php	/^	private static function toolbar_class($item){$/;"	f
toolbar_sub_menu_items	gravityforms.php	/^	public static function toolbar_sub_menu_items($menu_items, $compact = false){$/;"	f
tooltip	includes/addon/class-gf-addon.php	/^				$tooltip           = isset( $choice['tooltip'] ) ? gform_tooltip( $choice['tooltip'], rgar( $choice, 'tooltip_class' ), true ) : '';$/;"	v
tooltip	includes/addon/class-gf-addon.php	/^                $tooltip =  isset( $choice['tooltip'] ) ? gform_tooltip( $choice['tooltip'], rgar( $choice, 'tooltip_class'), true ) : "";$/;"	v
tooltip	includes/addon/class-gf-addon.php	/^        $tooltip =  isset( $choice['tooltip'] ) ? gform_tooltip( $choice['tooltip'], rgar( $choice, 'tooltip_class'), true ) : "";$/;"	v
tooltip	tooltips.php	/^    $tooltip = "<a href='#' onclick='return false;' class='gf_tooltip " . esc_attr($css_class) . " {$tooltip_class}' title='" . esc_attr($tooltip_text) . "'><i class='fa fa-question-circle'><\/i><\/a>";$/;"	v
tooltip_class	form_detail.php	/^                                        $tooltip_class = empty($group["tooltip_class"]) ? "tooltip_left" : $group["tooltip_class"];$/;"	v
tooltip_class	tooltips.php	/^    $tooltip_class = isset($__gf_tooltips[$name]) ? "tooltip_{$name}" : "";$/;"	v
tooltip_text	tooltips.php	/^    $tooltip_text = $parameter_is_key ? rgar($__gf_tooltips, $name) : $name;$/;"	v
top_toolbar	gravityforms.php	/^    public static function top_toolbar(){$/;"	f
total	common.php	/^            $total = sizeof($field["choices"]);$/;"	v
total	common.php	/^        $total = 0;$/;"	v
total	entry_detail.php	/^                                        $total = 0;$/;"	v
total	includes/phpqrcode/phpqrcode.php	/^            $total = 0;$/;"	v
total	js/forms.js	/^    "total"     :       ".conditional_logic_field_setting, .label_setting, .admin_label_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
total_count	entry_detail.php	/^        $total_count = 0;$/;"	v
total_count	entry_list.php	/^        $total_count = 0;$/;"	v
total_count	includes/api.php	/^            $total_count = self::count_entries($form_ids, $search_criteria);$/;"	v
total_entries	includes/addon/class-gf-results.php	/^            $total_entries             = GFAPI::count_entries($form_id, $search_criteria);$/;"	v
total_fields	forms_model.php	/^		$total_fields = array();$/;"	v
total_fields	forms_model.php	/^        $total_fields = array();$/;"	v
total_items	includes/addon/class-gf-payment-addon.php	/^		$total_items = $this->_pagination_args['total_items'];$/;"	v
total_pages	includes/addon/class-gf-payment-addon.php	/^		$total_pages = $this->_pagination_args['total_pages'];$/;"	v
total_revenue	includes/addon/class-gf-payment-addon.php	/^        $total_revenue = $wpdb->get_var($/;"	v
total_summary	includes/addon/class-gf-payment-addon.php	/^        $total_summary = $wpdb->get_results($/;"	v
totals	forms_model.php	/^        $totals = $wpdb->get_row($sql, ARRAY_A);$/;"	v
totals	includes/addon/class-gf-results.php	/^            $totals = RGFormsModel::get_form_counts($form["id"]);$/;"	v
totals	includes/webapi/webapi.php	/^                    $totals             = GFFormsModel::get_form_counts($form_id);$/;"	v
tr_css_class_name	form_settings.php	/^       	$tr_css_class_name = '$/;"	v
tr_enable_animation	form_settings.php	/^        $tr_enable_animation = '$/;"	v
tr_form_button	form_settings.php	/^       	$tr_form_button = '$/;"	v
tr_form_button_conditional	form_settings.php	/^        $tr_form_button_conditional = '$/;"	v
tr_form_button_image_path	form_settings.php	/^        $tr_form_button_image_path = '$/;"	v
tr_form_button_text	form_settings.php	/^        $tr_form_button_text = $subsetting_open . '$/;"	v
tr_form_description	form_settings.php	/^        $tr_form_description = '$/;"	v
tr_form_description_placement	form_settings.php	/^        $tr_form_description_placement = '$/;"	v
tr_form_label_placement	form_settings.php	/^        $tr_form_label_placement = '$/;"	v
tr_form_title	form_settings.php	/^        $tr_form_title = '$/;"	v
tr_honey_pot	form_settings.php	/^        $tr_honey_pot = '$/;"	v
tr_limit_entries	form_settings.php	/^        $tr_limit_entries = '$/;"	v
tr_limit_entries_count	form_settings.php	/^        $tr_limit_entries_count = '$/;"	v
tr_limit_entries_message	form_settings.php	/^        $tr_limit_entries_message = '$/;"	v
tr_requires_login	form_settings.php	/^        $tr_requires_login = '$/;"	v
tr_requires_login_message	form_settings.php	/^        $tr_requires_login_message = '$/;"	v
tr_schedule_end	form_settings.php	/^        $tr_schedule_end = '$/;"	v
tr_schedule_form	form_settings.php	/^        $tr_schedule_form = '$/;"	v
tr_schedule_message	form_settings.php	/^        $tr_schedule_message = '$/;"	v
tr_schedule_pending_message	form_settings.php	/^        $tr_schedule_pending_message = '$/;"	v
tr_schedule_start	form_settings.php	/^        $tr_schedule_start = '$/;"	v
transaction_date_filter	includes/addon/class-gf-payment-addon.php	/^            $transaction_date_filter = $wpdb->prepare(" AND timestampdiff(SECOND, %s, CONVERT_TZ(t.date_created, '+00:00', '" . $tz_offset . "')) >= 0", $search["start_date"]);$/;"	v
transaction_date_filter	includes/addon/class-gf-payment-addon.php	/^        $transaction_date_filter = "";$/;"	v
transaction_id	entry_detail.php	/^							$transaction_id = apply_filters( 'gform_payment_transaction_id', $lead["transaction_id"], $form, $lead );$/;"	v
transaction_id	includes/addon/class-gf-payment-addon.php	/^        $transaction_id = !empty($action['transaction_id']) ? $action['transaction_id'] : $action['subscription_id'];$/;"	v
transaction_id	includes/api.php	/^        $transaction_id = isset($entry["transaction_id"]) ? sprintf("'%s'", esc_sql($entry["transaction_id"])) : 'NULL';$/;"	v
transaction_type	forms_model.php	/^        $transaction_type = !rgempty("transaction_type", $lead) ? intval($lead["transaction_type"]) : "NULL";$/;"	v
transaction_type	includes/api.php	/^        $transaction_type = isset($entry["transaction_type"]) ? intval($entry["transaction_type"]) : 'NULL';$/;"	v
trash	form_list.php	/^        $trash = RGForms::get("trash") == "" ? false : RGForms::get("trash");$/;"	v
trash	form_list.php	/^        $trash = esc_attr($trash);$/;"	v
trash	forms_model.php	/^    public static function get_form_ids($active = true, $trash = false){$/;"	v
trash_clause	forms_model.php	/^        $trash_clause = $allow_trash ? "" : "AND is_trash = 0";$/;"	v
trash_count	entry_list.php	/^        $trash_count = $summary["trash"];$/;"	v
trash_form	forms_model.php	/^    public static function trash_form($form_id){$/;"	f
trash_forms	forms_model.php	/^    public static function trash_forms($form_ids){$/;"	f
trash_link	form_detail.php	/^                                    $trash_link = '<a class="submitdelete" title="' . __("Move this form to the trash", "gravityforms") . '" onclick="if(confirm(\\'' . __("Would you like to move this form to the trash? \\'Cancel\\' to stop. \\'OK\\' to continue", "gravityforms") . '\\')){ gf_vars.isFormTrash = true; jQuery(\\'#form_trash\\')[0].submit();} else{return false;}">' . __("Move to Trash", "gravityforms") . '<\/a>';$/;"	v
trash_link	form_detail.php	/^                                    $trash_link = apply_filters("gform_form_delete_link", $trash_link); \/\/ deprecated$/;"	v
tree_type	common.php	/^    var $tree_type = 'category';$/;"	v
trial_amount	includes/addon/class-gf-feed-addon.php	/^				$trial_amount = $product_price * $quantity;$/;"	v
trial_amount	includes/addon/class-gf-feed-addon.php	/^		$trial_amount = 0;$/;"	v
trial_amount	includes/addon/class-gf-payment-addon.php	/^				$trial_amount = $product_price * $quantity;$/;"	v
trial_amount	includes/addon/class-gf-payment-addon.php	/^			$trial_amount = rgar($feed["meta"], "trial_amount") ? GFCommon::to_number(rgar($feed["meta"], "trial_amount")) : 0;$/;"	v
trial_amount	includes/addon/class-gf-payment-addon.php	/^        $trial_amount = 0;$/;"	v
trial_field	includes/addon/class-gf-feed-addon.php	/^			if ( ! empty( $trial_field ) && $trial_field == $field_id ) {$/;"	v
trial_field	includes/addon/class-gf-feed-addon.php	/^		$trial_field     = rgar( $feed['meta'], 'trial_enabled' ) ? rgars( $feed, 'meta\/trial_product' ) : false;$/;"	v
trial_field	includes/addon/class-gf-payment-addon.php	/^			if ( ! empty( $trial_field ) && $trial_field == $field_id ) {$/;"	v
trial_field	includes/addon/class-gf-payment-addon.php	/^        $trial_field = rgar($feed["meta"], "trial_enabled") ? rgars( $feed, 'meta\/trial_product' ) : false;$/;"	v
trim_all	common.php	/^    public static function trim_all($text){$/;"	f
trim_conditional_logic_vales	includes/addon/class-gf-feed-addon.php	/^    protected function trim_conditional_logic_vales($settings, $form_id){$/;"	f
trim_conditional_logic_values	forms_model.php	/^    public static function trim_conditional_logic_values($meta_array, $form, &$updated = false){$/;"	f
trim_conditional_logic_values_from_element	forms_model.php	/^    public static function trim_conditional_logic_values_from_element($element, $form = array(), &$updated = false){$/;"	f
trim_form_meta_values	forms_model.php	/^    public static function trim_form_meta_values($form, &$form_updated = false){$/;"	f
trim_value	forms_model.php	/^                    $trim_value = apply_filters("gform_trim_input_value", true, rgar($form, "id"), $field);$/;"	v
trim_value	forms_model.php	/^                $trim_value = apply_filters("gform_trim_input_value", true, $form_id, $field);$/;"	v
trim_value	forms_model.php	/^        $trim_value = apply_filters("gform_trim_input_value", true, $form_id, $field);$/;"	v
truncate	forms_model.php	/^    private static function truncate($str, $length){$/;"	f
truncate_middle	common.php	/^    public static function truncate_middle($text, $max_length){$/;"	f
truncate_url	common.php	/^    public static function truncate_url($url){$/;"	f
truncated_url	common.php	/^            $truncated_url = dirname($url);$/;"	v
truncated_url	common.php	/^        $truncated_url = basename($url);$/;"	v
truncated_value	forms_model.php	/^            $truncated_value = GFCommon::safe_substr($value, 0, GFORMS_MAX_FIELD_LENGTH);$/;"	v
try_convert_float	forms_model.php	/^    private static function try_convert_float($text){$/;"	f
txn_id	includes/addon/class-gf-payment-addon.php	/^        $txn_id = $wpdb->insert_id;$/;"	v
type	entry_detail.php	/^                $type = rgget("field_id") == "0" ? "global" : "field";$/;"	v
type	entry_detail.php	/^            $type = rgget("type");$/;"	v
type	form_detail.php	/^        $type = $field["inputType"];$/;"	v
type	form_display.php	/^        $type = $field["type"];$/;"	v
type	form_settings.php	/^            $type = __('Page', 'gravityforms');$/;"	v
type	form_settings.php	/^            $type = __('Redirect', 'gravityforms');$/;"	v
type	form_settings.php	/^            $type = __('Text', 'gravityforms');$/;"	v
type	forms_model.php	/^                    $type = self::get_input_type($field);$/;"	v
type	forms_model.php	/^        $type = $file['type'];$/;"	v
type	forms_model.php	/^        $type = self::get_input_type($field) ;$/;"	v
type	forms_model.php	/^        $type = wp_check_filetype($new_file);$/;"	v
type	forms_model.php	/^        if(RG_CURRENT_VIEW == "entry" && $type == "fileupload" && ((!$multiple_files && empty($_FILES[$input_name]["name"])) || ($multiple_files && !isset($uploaded_files[$form_id][$input_name]))))$/;"	v
type	gravityforms.php	/^    private static function no_conflict_mode(&$wp_objects, $wp_required_objects, $gf_required_objects, $type="scripts"){$/;"	v
type	includes/api.php	/^            $type = GFFormsModel::get_input_type($field);$/;"	v
type	includes/webapi/webapi.php	/^                $type  = GFFormsModel::get_input_type($field);$/;"	v
tz_offset	includes/addon/class-gf-payment-addon.php	/^            $tz_offset = "+" . $tz_offset;$/;"	v
tz_offset	includes/addon/class-gf-payment-addon.php	/^        $tz_offset = $this->get_mysql_tz_offset();$/;"	v
tz_offset	includes/addon/class-gf-payment-addon.php	/^        $tz_offset = get_option("gmt_offset");$/;"	v
u	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f	function:n
ui_settings	form_settings.php	/^        $ui_settings = apply_filters("gform_confirmation_ui_settings_{$form_id}", apply_filters('gform_confirmation_ui_settings', $ui_settings, $confirmation, $form), $confirmation, $form );$/;"	v
ui_settings	form_settings.php	/^        $ui_settings = array();$/;"	v
ui_settings	notification.php	/^        $ui_settings = apply_filters("gform_notification_ui_settings_{$form_id}", apply_filters('gform_notification_ui_settings', $ui_settings, $notification, $form), $notification, $form );$/;"	v
ui_settings	notification.php	/^        $ui_settings = array();$/;"	v
ungrouped	common.php	/^        $ungrouped = $required_group = $optional_group = $pricing_group = $other_group = array();$/;"	v
uninstall	includes/addon/class-gf-addon.php	/^    protected function uninstall() {$/;"	f
uninstall	includes/addon/class-gf-feed-addon.php	/^    protected function uninstall(){$/;"	f
uninstall	includes/addon/class-gf-payment-addon.php	/^    protected function uninstall(){$/;"	f
uninstall_addon	includes/addon/class-gf-addon.php	/^    public function uninstall_addon() {$/;"	f
uninstall_button	includes/addon/class-gf-addon.php	/^                        $uninstall_button = '<input type="submit" name="uninstall" value="' . sprintf(__("Uninstall %", "gravityforms"), $this->_title) . '" class="button" onclick="return confirm(\\'' . __("Warning! ALL settings will be deleted. This cannot be undone. \\'OK\\' to delete, \\'Cancel\\' to stop", "gravityforms") . '\\');"\/>';$/;"	v
uninstall_button	includes/addon/class-gf-addon.php	/^                    $uninstall_button = '<input type="submit" name="uninstall" value="' . __("Uninstall  Add-On", "gravityforms") . '" class="button" onclick="return confirm(\\'' . __("Warning! ALL settings will be deleted. This cannot be undone. \\'OK\\' to delete, \\'Cancel\\' to stop", "gravityforms") . '\\');"\/>';$/;"	v
uninstall_button	settings.php	/^                    $uninstall_button = '<input type="submit" name="uninstall" value="' . __("Uninstall Gravity Forms", "gravityforms") . '" class="button" onclick="return confirm(\\'' . __("Warning! ALL Gravity Forms data, including form entries will be deleted. This cannot be undone. \\'OK\\' to delete, \\'Cancel\\' to stop", "gravityforms") . '\\');"\/>';$/;"	v
union	forms_model.php	/^                $union = empty($inner_sql) ? "" : " UNION ALL ";$/;"	v
unique_form_id	form_display.php	/^        $unique_form_id = rgpost("gform_unique_id");$/;"	v
unique_id	forms_model.php	/^                $unique_id =  uniqid();$/;"	v
unique_id	forms_model.php	/^                $unique_id = $posted_uid;$/;"	v
unique_id	forms_model.php	/^                $unique_id = self::$unique_ids[$form_id];$/;"	v
unique_id	forms_model.php	/^        $unique_id = "";$/;"	v
unique_ids	forms_model.php	/^    public static $unique_ids = array();$/;"	v
unit	includes/addon/class-gf-payment-addon.php	/^        foreach($intervals as $unit => $interval){$/;"	v
unit_field	includes/addon/class-gf-payment-addon.php	/^        $unit_field = array($/;"	v
unless	form_display.php	/^        \/\/ this is here mostly to avoid the semi-costly GFFormsModel::create_lead() function unless we really need it$/;"	f
unread_count	entry_list.php	/^        $unread_count = $summary["unread"];$/;"	v
unread_results	forms_model.php	/^        $unread_results = $wpdb->get_results($sql, ARRAY_A);$/;"	v
unserial	includes/phpqrcode/phpqrcode.php	/^        public static function unserial($code)$/;"	f
unserialize	forms_model.php	/^    public static function unserialize($string){$/;"	f
unserialize	xml.php	/^    public function unserialize($xml_string){$/;"	f
unserialize_as_array	xml.php	/^            $unserialize_as_array = $is_identical_tags$/;"	v
unserialize_node	xml.php	/^    private function unserialize_node($values, $index){$/;"	f
unsupported_field_types	common.php	/^        $unsupported_field_types = array('category');$/;"	v
update	gravityforms.php	/^        $update = GFCommon::get_version_info();$/;"	v
update	includes/addon/class-gf-auto-upgrade.php	/^        $update = $this->get_version_info($this->_slug);$/;"	v
update	widget.php	/^    function update( $new_instance, $old_instance ) {$/;"	f
update_akismet	forms_model.php	/^    public static function update_lead_property($lead_id, $property_name, $property_value, $update_akismet=true, $disable_hook=false){$/;"	v
update_app_settings	includes/addon/class-gf-addon.php	/^    protected function update_app_settings($settings){$/;"	f
update_button	entry_detail.php	/^                                                $update_button = '<input class="button button-large button-primary" type="submit" tabindex="4" value="' . $button_text . '" name="save" onclick="' . $button_click . '"\/>';$/;"	v
update_confirmation	form_display.php	/^    public static function update_confirmation($form, $lead=null) {$/;"	f
update_confirmation_active	forms_model.php	/^    public static function update_confirmation_active($form_id, $confirmation_id, $is_active){$/;"	f
update_confirmation_active	gravityforms.php	/^    public static function update_confirmation_active(){$/;"	f
update_entries	includes/api.php	/^    public static function update_entries($entries) {$/;"	f
update_entry	includes/api.php	/^    public static function update_entry($entry, $entry_id = null) {$/;"	f
update_entry_property	includes/api.php	/^    public static function update_entry_property( $entry_id, $property, $value ) {$/;"	f
update_entry_status	includes/webapi/webapi.php	/^        public function update_entry_status($lead_id) {$/;"	f
update_feed	includes/api.php	/^    public static function update_feed($feed_id, $feed_meta, $form_id = null) {$/;"	f
update_feed_active	includes/addon/class-gf-feed-addon.php	/^    public function update_feed_active($id, $is_active){$/;"	f
update_feed_meta	includes/addon/class-gf-feed-addon.php	/^    public function update_feed_meta($id, $meta){$/;"	f
update_form	includes/api.php	/^    public static function update_form($form_meta, $form_id = null) {$/;"	f
update_form_active	forms_model.php	/^    public static function update_form_active($form_id, $is_active){$/;"	f
update_form_active	gravityforms.php	/^    public static function update_form_active(){$/;"	f
update_form_meta	forms_model.php	/^    public static function update_form_meta( $form_id, $form_meta, $meta_name = 'display_meta' ) {$/;"	f
update_form_property	includes/api.php	/^    public static function update_form_property($form_id, $property_key, $value){$/;"	f
update_form_settings	includes/addon/class-gf-feed-addon.php	/^    protected function update_form_settings($form, $new_form_settings) {$/;"	f
update_forms	includes/api.php	/^    public static function update_forms($forms) {$/;"	f
update_forms_active	forms_model.php	/^    public static function update_forms_active($forms, $is_active){$/;"	f
update_forms_property	includes/api.php	/^    public static function update_forms_property($form_ids, $property_key, $value){$/;"	f
update_grid_column_meta	forms_model.php	/^    public static function update_grid_column_meta($form_id, $columns){$/;"	f
update_icon	gravityforms.php	/^        $update_icon = GFCommon::has_update() && current_user_can("install_plugins") ? "<span title='" . esc_attr(__("Update Available", "gravityforms")) . "' class='update-plugins count-1'><span class='update-count'>1<\/span><\/span>" : "";$/;"	v
update_lead	forms_model.php	/^    public static function update_lead($lead){$/;"	f
update_lead_field_value	forms_model.php	/^    public static function update_lead_field_value($form, $lead, $field, $lead_detail_id, $input_id, $value){$/;"	f
update_lead_property	forms_model.php	/^    public static function update_lead_property($lead_id, $property_name, $property_value, $update_akismet=true, $disable_hook=false){$/;"	f
update_lead_property	gravityforms.php	/^    public static function update_lead_property(){$/;"	f
update_lead_status	gravityforms.php	/^    public static function update_lead_status(){$/;"	f
update_leads_property	forms_model.php	/^    public static function update_leads_property($leads, $property_name, $property_value){$/;"	f
update_lock_meta	includes/locking/class-gf-locking.php	/^    protected function update_lock_meta($object_id, $lock_value) {$/;"	f
update_lock_request_meta	includes/locking/class-gf-locking.php	/^    protected function update_lock_request_meta($object_id, $lock_request_value) {$/;"	f
update_message	entry_list.php	/^                            $update_message = __("You don't have adequate permissions to delete entries.", "gravityforms");$/;"	v
update_message	entry_list.php	/^                            $update_message = sprintf(__("%s deleted.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s marked as read.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s marked as spam.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s marked as unread.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s moved to Trash.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s restored from the Trash.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s restored from the spam.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s starred.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                        $update_message = sprintf(__("%s unstarred.", "gravityforms"), $entry_count);$/;"	v
update_message	entry_list.php	/^                    $update_message = __("Entry deleted.", "gravityforms");$/;"	v
update_message	entry_list.php	/^                    $update_message = __("You don't have adequate permissions to delete entries.", "gravityforms");$/;"	v
update_message	entry_list.php	/^        $update_message = "";$/;"	v
update_message	entry_list.php	/^    private static function update_message(){$/;"	f
update_notification_active	forms_model.php	/^    public static function update_notification_active($form_id, $notification_id, $is_active){$/;"	f
update_notification_active	gravityforms.php	/^    public static function update_notification_active(){$/;"	f
update_page	gravityforms.php	/^    public static function update_page(){$/;"	f
update_page	update.php	/^    public static function update_page(){$/;"	f
update_plugin_settings	includes/addon/class-gf-addon.php	/^    protected function update_plugin_settings($settings){$/;"	f
update_result	form_detail.php	/^            $update_result = self::save_form_info($form_id, rgpost("gform_meta", false));$/;"	v
update_result	form_detail.php	/^        $update_result = "";$/;"	v
update_result	form_settings.php	/^            $update_result = GFFormDetail::save_form_info($form_id, addslashes(json_encode($updated_form)));$/;"	v
update_result	form_settings.php	/^        $update_result = array();$/;"	v
update_results_cache	includes/webapi/webapi.php	/^        public function update_results_cache($key, $data) {$/;"	f
update_results_cache_meta	includes/webapi/webapi.php	/^        public function update_results_cache_meta($form_id, $fields, $expiry = null) {$/;"	f
updated	forms_model.php	/^                        $updated = true;$/;"	v
updated_form	form_settings.php	/^            $updated_form = apply_filters('gform_pre_form_settings_save', $updated_form);$/;"	v
updated_form	form_settings.php	/^            $updated_form = json_decode(rgpost('gform_meta'), true);$/;"	v
upgrade	includes/addon/class-gf-addon.php	/^    protected function upgrade($previous_version) {$/;"	f
upgrade_base	includes/addon/class-gf-feed-addon.php	/^    private function upgrade_base($previous_version) {$/;"	f
upgrade_license	gravityforms.php	/^    public static function upgrade_license(){$/;"	f
upgrade_license	settings.php	/^    public static function upgrade_license(){$/;"	f
upgrade_message	includes/addon/class-gf-auto-upgrade.php	/^        $upgrade_message = $message .' <a class="thickbox" title="'. $plugin_title .'" href="plugin-install.php?tab=plugin-information&plugin=' . $plugin_name . '&TB_iframe=true&width=640&height=808">'. sprintf(__('View version %s Details', $localization_namespace), $version) . '<\/a>. ';$/;"	v
upgrade_payment	includes/addon/class-gf-payment-addon.php	/^    private function upgrade_payment($previous_versions) {$/;"	f
upgrade_url	gravityforms.php	/^                $upgrade_url = wp_nonce_url('update.php?action=upgrade-plugin&amp;plugin=' . urlencode($plugin_file), 'upgrade-plugin_' . $plugin_file);$/;"	v
upgrade_url	update.php	/^                $upgrade_url = wp_nonce_url('update.php?action=upgrade-plugin&amp;plugin=' . urlencode($plugin_file), 'upgrade-plugin_' . $plugin_file);$/;"	v
upload	common.php	/^		                $upload = sprintf( "<input type='hidden' name='MAX_FILE_SIZE' value='%d' \/>", $max_upload_size );$/;"	v
upload	common.php	/^	                $upload = '';$/;"	v
upload	common.php	/^                            $upload = str_replace(" class='", " class='gform_hidden ", $upload);$/;"	v
upload	common.php	/^                    $upload = sprintf("<div id='%s' data-settings='%s' class='gform_fileupload_multifile'><div id='%s' class='gform_drop_area'><span class='gform_drop_instructions'>%s <\/span><input id='%s' type='button' value='%s' class='button gform_button_select_files'\/><\/div><\/div>",$container_id, $plupload_init_json, $drag_drop_id, __("Drop files here or" ,"gravityforms"), $browse_button_id, __("Select files", "gravityforms") ) ;$/;"	v
upload	common.php	/^                $upload = sprintf("<span class='ginput_full$class_suffix'>{$preview}<input name='input_%d' id='%s' type='file' value='%s' class='%s' $tabindex %s\/>$file_label<\/span>", $id, $field_id, esc_attr($value), esc_attr($class . $hidden_class), $disabled_text);$/;"	v
upload	includes/upload.php	/^    public static function upload() {$/;"	f
upload_action_url	common.php	/^                    $upload_action_url = trailingslashit(site_url()) . "?gf_page=upload";$/;"	v
upload_display	common.php	/^                    $upload_display = $multiple_files ? "" : "style='display:none'";$/;"	v
upload_file	forms_model.php	/^    public static function upload_file($form_id, $file){$/;"	f
upload_files	form_display.php	/^    private static function upload_files($form, $files){$/;"	f
upload_root_info	forms_model.php	/^        $upload_root_info = apply_filters("gform_upload_path_{$form_id}", apply_filters("gform_upload_path", $upload_root_info, $form_id), $form_id);$/;"	v
upload_root_info	forms_model.php	/^        $upload_root_info = array("path" => $target_root, "url" => $target_root_url);$/;"	v
uploaddir	forms_model.php	/^        $uploaddir = wp_upload_dir();$/;"	v
uploaded_file_name	form_display.php	/^                                    $uploaded_file_name = isset(GFFormsModel::$uploaded_files[$form["id"]][$input_name]) ? GFFormsModel::$uploaded_files[$form["id"]][$input_name] : "";$/;"	v
uploaded_filename	forms_model.php	/^            $uploaded_filename = rgget($input_name, self::$uploaded_files[$form_id]);$/;"	v
uploaded_filename	forms_model.php	/^        $uploaded_filename = !empty($_FILES[$input_name]["name"]) && $_FILES[$input_name]["error"] === 0 ? $_FILES[$input_name]["name"] : "";$/;"	v
uploaded_filename	includes/upload.php	/^		$uploaded_filename = $_FILES["file"]["name"];$/;"	v
uploaded_files	common.php	/^                    $uploaded_files = isset(GFFormsModel::$uploaded_files[$form_id][$input_name]) ? GFFormsModel::$uploaded_files[$form_id][$input_name] : array();$/;"	v
uploaded_files	form_display.php	/^                    $uploaded_files = GFFormsModel::$uploaded_files[$form_id];$/;"	v
uploaded_files	forms_model.php	/^                        $uploaded_files = array();$/;"	v
uploaded_files	forms_model.php	/^        $uploaded_files = GFFormsModel::$uploaded_files;$/;"	v
uploaded_files	forms_model.php	/^    public static $uploaded_files = array();$/;"	v
uploaded_files_arr	entry_list.php	/^                                                $uploaded_files_arr = empty($value) ? array() : json_decode($value, true);$/;"	v
uploaded_temp_files	forms_model.php	/^                        $uploaded_temp_files = GFFormsModel::$uploaded_files[$form_id][$input_name];$/;"	v
uploads	forms_model.php	/^        if ( ! ( ( $uploads = wp_upload_dir($time) ) && false === $uploads['error'] ) )$/;"	v
upper_field_number_limit	forms_model.php	/^                    $upper_field_number_limit = (string) (int) $key === $key ? (float) $key + 0.9999 : (float) $key + 0.0001;$/;"	v
url	common.php	/^		$url = trim( $url );$/;"	v
url	common.php	/^                    $url = str_replace(" ", "%20", $url);$/;"	v
url	common.php	/^                $url = count($ary) > 0 ? $ary[0] : "";$/;"	v
url	common.php	/^            $url = rgar($version_info, "url");$/;"	v
url	common.php	/^            $url = str_replace("http:", "https:", $url);$/;"	v
url	common.php	/^        $url = RGFormsModel::get_upload_url("captcha") . "\/" . $filename;$/;"	v
url	form_display.php	/^				$url = GFCommon::replace_variables( trim( $form['confirmation']['url'] ), $form, $lead, false, true, true, 'text' );$/;"	v
url	form_display.php	/^				$url = get_permalink( $form['confirmation']['pageId'] );$/;"	v
url	form_display.php	/^			$url = $url_info['scheme'] . ':\/\/' . rgar( $url_info, 'host' );$/;"	v
url	form_settings.php	/^            $url = rgar($item, 'queryString') ? "{$item['url']}{$url_connector}{$item['queryString']}" : $item['url'];$/;"	v
url	forms_model.php	/^                    $url = count($ary) > 0 ? $ary[0] : "";$/;"	v
url	forms_model.php	/^                $url = self::get_fileupload_value($form_id, $input_name);$/;"	v
url	forms_model.php	/^            $url = $file_path['url'];$/;"	v
url	forms_model.php	/^        $url = $file['url'];$/;"	v
url	forms_model.php	/^        $url = $uploads['url'] . "\/$filename";$/;"	v
url	forms_model.php	/^        $url = rgar($ary,0);$/;"	v
url	gravityforms.php	/^				$url = rgar($menu_item, "url");$/;"	v
url	gravityforms.php	/^                    $url 		= rgar($menu_item, "url");$/;"	v
url	includes/addon/class-gf-feed-addon.php	/^        $url = add_query_arg(array("fid" => "0"));$/;"	v
url	recaptchalib.php	/^	$url = recaptcha_mailhide_url ($pubkey, $privkey, $email);$/;"	v
url_active	form_list.php	/^                            $url_active = admin_url("admin.php?page=gf_edit_forms&sort=is_active&dir=$dir&trash=$trash");$/;"	v
url_connector	form_settings.php	/^            $url_connector = rgar($url_pieces, 'query') ? '&' : '?';$/;"	v
url_encode	common.php	/^    public static function replace_variables($text, $form, $lead, $url_encode = false, $esc_html=true, $nl2br = true, $format="html"){$/;"	v
url_encode	common.php	/^    public static function replace_variables_prepopulate($text, $url_encode=false, $entry=false){$/;"	v
url_id	form_list.php	/^                                $url_id = admin_url("admin.php?page=gf_edit_forms&sort=id&dir=$dir&trash=$trash");$/;"	v
url_info	common.php	/^        $url_info = parse_url(RGFormsModel::get_current_page_url());$/;"	v
url_info	form_display.php	/^			$url_info = parse_url( $url );$/;"	v
url_pieces	form_settings.php	/^            $url_pieces = parse_url($item['url']);$/;"	v
url_title	form_list.php	/^                                $url_title = admin_url("admin.php?page=gf_edit_forms&sort=title&dir=$dir&trash=$trash");$/;"	v
use_admin_label	common.php	/^            $use_admin_label = in_array("admin", $options);$/;"	v
use_anchor	form_display.php	/^            $use_anchor = apply_filters("gform_confirmation_anchor_{$form["id"]}", apply_filters("gform_confirmation_anchor", $default_anchor));$/;"	v
use_cache	includes/addon/class-gf-auto-upgrade.php	/^    private function get_version_info($offering, $use_cache=true){$/;"	v
use_choice_text	common.php	/^    public static function get_product_fields($form, $lead, $use_choice_text=false, $use_admin_label=false){$/;"	v
use_choice_text	forms_model.php	/^    public static function refresh_product_cache($form, $lead, $use_choice_text = false, $use_admin_label = false) {$/;"	v
use_id	common.php	/^                                $use_id = strtolower(rgar($match,4)) == "id";$/;"	v
use_id	common.php	/^                            $use_id = strtolower(rgar($match,4)) == "id";$/;"	v
use_id	common.php	/^                        $use_id = strtolower(rgar($match,4)) == "id";$/;"	v
use_long_values	forms_model.php	/^    public static function build_lead_array($results, $use_long_values = true){$/;"	v
use_mcrypt	common.php	/^		$use_mcrypt = apply_filters('gform_use_mcrypt', function_exists( 'mcrypt_decrypt' ) );$/;"	v
use_mcrypt	common.php	/^		$use_mcrypt = apply_filters('gform_use_mcrypt', function_exists( 'mcrypt_encrypt' ) );$/;"	v
use_price	common.php	/^                        $use_price = in_array(rgar($match,4), array("price", "currency"));$/;"	v
use_text	common.php	/^    public static function get_submitted_pricing_fields($form, $lead, $format, $use_text=true, $use_admin_label=false){$/;"	v
use_value	common.php	/^                        $use_value = rgar($match,4) == "value";$/;"	v
use_value	common.php	/^            $use_value = in_array("value", $options);$/;"	v
user	includes/locking/class-gf-locking.php	/^            $user = get_userdata($lock_holder_user_id);$/;"	v
user	includes/locking/class-gf-locking.php	/^        $user = get_userdata($user_id);$/;"	v
user	includes/locking/class-gf-locking.php	/^        if ($user_id && $user = get_userdata($user_id)) {$/;"	v
user_agent	forms_model.php	/^            $user_agent = self::truncate($_SERVER["HTTP_USER_AGENT"], 250);$/;"	v
user_agent	forms_model.php	/^        $user_agent = self::truncate(rgar($lead,"user_agent"), 250);$/;"	v
user_agent	includes/api.php	/^        $user_agent     = isset($entry["user_agent"]) ? $entry["user_agent"] : "API";$/;"	v
user_array	common.php	/^        $user_array = self::object_to_array($userdata);$/;"	v
user_data	entry_detail.php	/^                $user_data = get_userdata($current_user->ID);$/;"	v
user_has_cap	gravityforms.php	/^    public static function user_has_cap($all_caps, $cap, $args){$/;"	f
user_id	forms_model.php	/^            $user_id = $current_user && $current_user->ID ? $current_user->ID : 'NULL';$/;"	v
user_id	includes/addon/class-gf-payment-addon.php	/^        $user_id = 0;$/;"	v
user_id	includes/api.php	/^            $user_id = $current_user && $current_user->ID ? $current_user->ID : 'NULL';$/;"	v
user_id	includes/api.php	/^        $user_id = isset($entry["created_by"]) ? esc_sql($entry["created_by"]) : "";$/;"	v
user_id	includes/locking/class-gf-locking.php	/^        $user_id = $this->check_lock($object_id);$/;"	v
user_name	includes/addon/class-gf-payment-addon.php	/^        $user_name = $this->_short_title;$/;"	v
user_notification	forms_model.php	/^            $user_notification = $form["autoResponder"];$/;"	v
userdata	entry_list.php	/^                                                $userdata = get_userdata($value);$/;"	v
usermeta	entry_detail.php	/^                                    if(!empty($lead["created_by"]) && $usermeta = get_userdata($lead["created_by"])){$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                        $v = $v >> 1;$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                    $v = $v << 1;$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                    $v = 0x84;$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                    $v = 0x85;$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                $v = $vinf;$/;"	v
v	includes/phpqrcode/phpqrcode.php	/^                $v = 0;$/;"	v
v	js/jquery.placeholders.2.1.1.min.js	/^(function(t){"use strict";function e(t,e,r){return t.addEventListener?t.addEventListener(e,r,!1):t.attachEvent?t.attachEvent("on"+e,r):void 0}function r(t,e){var r,n;for(r=0,n=t.length;n>r;r++)if(t[r]===e)return!0;return!1}function n(t,e){var r;t.createTextRange?(r=t.createTextRange(),r.move("character",e),r.select()):t.selectionStart&&(t.focus(),t.setSelectionRange(e,e))}function a(t,e){try{return t.type=e,!0}catch(r){return!1}}t.Placeholders={Utils:{addEventListener:e,inArray:r,moveCaret:n,changeType:a}}})(this),function(t){"use strict";function e(){}function r(t,e){var r,n,a=!!e&&t.value!==e,u=t.value===t.getAttribute(V);return(a||u)&&"true"===t.getAttribute(D)?(t.setAttribute(D,"false"),t.value=t.value.replace(t.getAttribute(V),""),t.className=t.className.replace(R,""),n=t.getAttribute(z),n&&(t.setAttribute("maxLength",n),t.removeAttribute(z)),r=t.getAttribute(I),r&&(t.type=r),!0):!1}function n(t){var e,r,n=t.getAttribute(V);return""===t.value&&n?(t.setAttribute(D,"true"),t.value=n,t.className+=" "+k,r=t.getAttribute(z),r||(t.setAttribute(z,t.maxLength),t.removeAttribute("maxLength")),e=t.getAttribute(I),e?t.type="text":"password"===t.type&&K.changeType(t,"text")&&t.setAttribute(I,"password"),!0):!1}function a(t,e){var r,n,a,u,i;if(t&&t.getAttribute(V))e(t);else for(r=t?t.getElementsByTagName("input"):p,n=t?t.getElementsByTagName("textarea"):h,i=0,u=r.length+n.length;u>i;i++)a=r.length>i?r[i]:n[i-r.length],e(a)}function u(t){a(t,r)}function i(t){a(t,n)}function l(t){return function(){b&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)?K.moveCaret(t,0):r(t)}}function o(t){return function(){n(t)}}function c(t){return function(e){return m=t.value,"true"===t.getAttribute(D)&&m===t.getAttribute(V)&&K.inArray(C,e.keyCode)?(e.preventDefault&&e.preventDefault(),!1):void 0}}function s(t){return function(){r(t,m),""===t.value&&(t.blur(),K.moveCaret(t,0))}}function d(t){return function(){t===document.activeElement&&t.value===t.getAttribute(V)&&"true"===t.getAttribute(D)&&K.moveCaret(t,0)}}function g(t){return function(){u(t)}}function v(t){t.form&&(L=t.form,L.getAttribute(P)||(K.addEventListener(L,"submit",g(L)),L.setAttribute(P,"true"))),K.addEventListener(t,"focus",l(t)),K.addEventListener(t,"blur",o(t)),b&&(K.addEventListener(t,"keydown",c(t)),K.addEventListener(t,"keyup",s(t)),K.addEventListener(t,"click",d(t))),t.setAttribute(U,"true"),t.setAttribute(V,E),n(t)}var p,h,b,f,m,A,y,E,x,L,T,N,S,w=["text","search","url","tel","email","password","number","textarea"],C=[27,33,34,35,36,37,38,39,40,8,46],B="#ccc",k="placeholdersjs",R=RegExp("(?:^|\\\\s)"+k+"(?!\\\\S)"),V="data-placeholder-value",D="data-placeholder-active",I="data-placeholder-type",P="data-placeholder-submit",U="data-placeholder-bound",j="data-placeholder-focus",q="data-placeholder-live",z="data-placeholder-maxlength",F=document.createElement("input"),G=document.getElementsByTagName("head")[0],H=document.documentElement,J=t.Placeholders,K=J.Utils;if(J.nativeSupport=void 0!==F.placeholder,!J.nativeSupport){for(p=document.getElementsByTagName("input"),h=document.getElementsByTagName("textarea"),b="false"===H.getAttribute(j),f="false"!==H.getAttribute(q),A=document.createElement("style"),A.type="text\/css",y=document.createTextNode("."+k+" { color:"+B+"; }"),A.styleSheet?A.styleSheet.cssText=y.nodeValue:A.appendChild(y),G.insertBefore(A,G.firstChild),S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&v(T));x=setInterval(function(){for(S=0,N=p.length+h.length;N>S;S++)T=p.length>S?p[S]:h[S-p.length],E=T.attributes.placeholder,E&&(E=E.nodeValue,E&&K.inArray(w,T.type)&&(T.getAttribute(U)||v(T),(E!==T.getAttribute(V)||"password"===T.type&&!T.getAttribute(I))&&("password"===T.type&&!T.getAttribute(I)&&K.changeType(T,"text")&&T.setAttribute(I,"password"),T.value===T.getAttribute(V)&&(T.value=E),T.setAttribute(V,E))));f||clearInterval(x)},100)}J.disable=J.nativeSupport?e:u,J.enable=J.nativeSupport?e:i}(this);/;"	f
vAxis_column	includes/addon/class-gf-payment-addon.php	/^        $vAxis_column = $data["chart"]["vAxis"]["column"];$/;"	v
val	common.php	/^			$val   = $ary[0];$/;"	v
val	common.php	/^			$val = $value;$/;"	v
val	common.php	/^                                        $val = rgar($item, $column);$/;"	v
val	common.php	/^                                    $val = GFCommon::to_money($val, rgar($lead, "currency"));$/;"	v
val	common.php	/^                                 $val = rgar($vals, 0);$/;"	v
val	common.php	/^                                $val = RGFormsModel::is_field_hidden($form, $field, array(), $lead) ? "" : $item_value;$/;"	v
val	common.php	/^                                $val = RGFormsModel::is_field_hidden($form, $field, array(), $lead) ? "" : RGFormsModel::get_choice_text($field, $raw_value, $input_id);$/;"	v
val	common.php	/^                                $val = rgar($item, $column["text"]);$/;"	v
val	common.php	/^                            $val = $colnum == 1 ? $item : "";$/;"	v
val	common.php	/^                    $val       = $key_array[1] . ":" . $val;$/;"	v
val	common.php	/^                $val                  = $filter_values[$i];$/;"	v
val	common.php	/^            $val = RGFormsModel::get_choice_text($field, $val);$/;"	v
val	common.php	/^            $val = array($val);$/;"	v
val	common.php	/^        $val = $ary[0];$/;"	v
val	entry_detail.php	/^                $val       = $key_array[1] . ":" . $val;$/;"	v
val	entry_detail.php	/^            $val = rgget("s");$/;"	v
val	entry_list.php	/^                $val       = $key_array[1] . ":" . $val;$/;"	v
val	entry_list.php	/^            $val = rgget("s");$/;"	v
val	form_display.php	/^                        $val = $is_pricing_field && $field['type'] != 'quantity' ? $choice["value"] . "|" . GFCommon::to_number($choice["price"]) :  $choice["value"];$/;"	v
val	forms_model.php	/^						$val = self::sanitize_entry_value( $field, $val, $input_type, $form_id );$/;"	v
val	forms_model.php	/^                                $val = count($ary) > 0 ? $ary[0] : "";$/;"	v
val	forms_model.php	/^                        $val = str_replace(',', '&#44;', $val);$/;"	v
val	forms_model.php	/^                    $val = $lead[$input_id];$/;"	v
val	forms_model.php	/^                $val = GFFormsModel::maybe_trim_input(GFCommon::get_selection_value($val), rgar($source_field,"formId"),$source_field);$/;"	v
val	forms_model.php	/^                $val = isset($lead[strval($input["id"])]) ? $lead[strval($input["id"])] : "";$/;"	v
val	forms_model.php	/^            $val = apply_filters("gform_get_input_value", $val, $lead, $field, $input_id);$/;"	v
val	forms_model.php	/^            $val = count($ary) > 0 ? $ary[0] : "";$/;"	v
val	forms_model.php	/^            $val = rgar($search, "value");$/;"	v
val	forms_model.php	/^            $val = rgget($field["id"], $lead);$/;"	v
val	forms_model.php	/^         $val = $wpdb->get_var($sql);$/;"	v
val	gravityforms.php	/^                    $val       = $key_array[1] . ":" . $val;$/;"	v
val	gravityforms.php	/^                $val = $search;$/;"	v
val	gravityforms.php	/^        $val = rgar($val, $current_name);$/;"	v
val	gravityforms.php	/^    $val = $array;$/;"	v
val	gravityforms.php	/^    $val = rgar( $array, $name );$/;"	v
val	includes/addon/class-gf-results.php	/^                            $val     = $multiple_rows ? $results[$row_value][$choice['value']] : $results[$choice['value']];$/;"	v
val	includes/addon/class-gf-results.php	/^                        $val           = $results[$choice['value']];$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val  = (int)QRinput::lookAnTable(ord($this->data[$i*2  ])) * 45;$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val  = (ord($this->data[$i*3  ]) - ord('0')) * 100;$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val  = (ord($this->data[$words*3  ]) - ord('0')) * 10;$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val = ($val & 0xff) + $h;$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val = (ord($this->data[$i]) << 8) | ord($this->data[$i+1]);$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val = QRinput::lookAnTable(ord($this->data[$words * 2]));$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                    $val = ord($this->data[$words*3]) - ord('0');$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                $val = (ord($data[$i]) << 8) | ord($data[$i+1]);$/;"	v
val	includes/phpqrcode/phpqrcode.php	/^                $val = 0x1;$/;"	v
val	print-entry.php	/^            $val       = $key_array[1] . ":" . $val;$/;"	v
val	print-entry.php	/^        $val = rgget("s");$/;"	v
val	recaptchalib.php	/^	$val=_recaptcha_aes_pad($val);$/;"	v
val	xml.php	/^            $val = isset($current["value"]) ? $current["value"] : "";$/;"	v
val1	forms_model.php	/^                $val1 = self::try_convert_float($val1);$/;"	v
val1	forms_model.php	/^                return $val1 == $val2;$/;"	v
val1	forms_model.php	/^        $val1 = !rgblank($val1) ? strtolower($val1) : "";$/;"	v
val2	forms_model.php	/^                $val2 = self::try_convert_float($val2);$/;"	v
val2	forms_model.php	/^                return $val2 == $tail;$/;"	v
val2	forms_model.php	/^        $val2 = !rgblank($val2) ? strtolower($val2) : "";$/;"	v
validate	form_display.php	/^    public static function validate(&$form, $field_values, $page_number=0, &$failed_validation_page=0){$/;"	f
validate_checkbox_settings	includes/addon/class-gf-addon.php	/^    protected function validate_checkbox_settings( $field, $settings ) {$/;"	f
validate_duplicate_feature	form_display.php	/^            $validate_duplicate_feature = $field["noDuplicates"] && $page_number > 0 && $field["pageNumber"] <= $page_number;$/;"	v
validate_entry_limit	form_display.php	/^    public static function validate_entry_limit($form) {$/;"	f
validate_field_map_settings	includes/addon/class-gf-addon.php	/^    protected function validate_field_map_settings( $field, $settings ) {$/;"	f
validate_form_schedule	form_display.php	/^    public static function validate_form_schedule($form) {$/;"	f
validate_honeypot	form_display.php	/^    private static function validate_honeypot($form){$/;"	f
validate_notification	notification.php	/^    private static function validate_notification() {$/;"	f
validate_range	form_display.php	/^    private static function validate_range($field, $value){$/;"	f
validate_settings	includes/addon/class-gf-addon.php	/^    protected function validate_settings( $fields, $settings ) {$/;"	f
validate_upgrade	gravityforms.php	/^    public static function validate_upgrade($do_upgrade, $hook_extra){$/;"	f
validation	includes/addon/class-gf-payment-addon.php	/^    public function validation( $validation_result ) {$/;"	f
validation_class	common.php	/^                        $validation_class = $field["failed_validation"] ? "validation_message" : "";$/;"	v
validation_message	form_display.php	/^                $validation_message = "<div class='validation_error'>" . __("There was a problem with your submission.", "gravityforms") . " " . __("Errors have been highlighted below.", "gravityforms") . "<\/div>";$/;"	v
validation_message	form_display.php	/^        $validation_message = (rgget("failed_validation", $field) && !empty($field["validation_message"])) ? sprintf("<div class='gfield_description validation_message'>%s<\/div>", $field["validation_message"]) : "";$/;"	v
validation_result	form_display.php	/^        $validation_result = apply_filters("gform_validation_{$form["id"]}", apply_filters("gform_validation", array("is_valid" => $is_valid, "form" => $form)) );$/;"	v
validation_result	includes/addon/class-gf-payment-addon.php	/^			$validation_result = $this->get_validation_result( $validation_result, $this->authorization );$/;"	v
vals	common.php	/^                                 $vals = array_values($item);$/;"	v
value	common.php	/^									$value = esc_html( $value );$/;"	v
value	common.php	/^							$value = $format == 'html' ? join( "<br \/>", $files ) : join( ", ", $files );$/;"	v
value	common.php	/^							$value = str_replace( ' ', '%20', $value );$/;"	v
value	common.php	/^							$value = urlencode( $value );$/;"	v
value	common.php	/^						$value = '{' . esc_html( GFCommon::get_label( $field, $input['id'] ) ) . ':' . $input['id'] . "{$tag_args}}";$/;"	v
value	common.php	/^					$value = "{" . esc_html(GFCommon::get_label($field, $input["id"])) . ":" . $input["id"] . "{$tag_args}}";$/;"	v
value	common.php	/^            	$value = GFCommon::to_number(GFCommon::replace_variables("{:{$field_id}:$filter}", $form, $lead));$/;"	v
value	common.php	/^                                $value = self::implode_non_blank(", ", $cats);$/;"	v
value	common.php	/^                            $value = "<a href='$url' target='_blank' title='" . __("Click to view", "gravityforms") . "'><img src='$url' width='100' \/><\/a>";$/;"	v
value	common.php	/^                            $value = $product["quantity"];$/;"	v
value	common.php	/^                            $value = $url;$/;"	v
value	common.php	/^                        $value = $format_numeric ? GFCommon::to_number($value) : GFCommon::to_money($value);$/;"	v
value	common.php	/^                        $value = 'gf_other_choice';$/;"	v
value	common.php	/^                        $value = GFCommon::date_display($value, $format);$/;"	v
value	common.php	/^                        $value = GFCommon::format_number($value, rgar($field, "numberFormat"));$/;"	v
value	common.php	/^                        $value = json_encode($value);$/;"	v
value	common.php	/^                        $value = self::date_display($value, rgar($field,"dateFormat"));$/;"	v
value	common.php	/^                        $value = self::format_post_category($value, $use_id);$/;"	v
value	common.php	/^                        $value = self::format_variable_value($value, $url_encode, $esc_html, $format);$/;"	v
value	common.php	/^                        $value = self::get_lead_field_display($field, $raw_value, $lead["currency"], true, $output_format);$/;"	v
value	common.php	/^                        $value = self::implode_non_blank(", ", $ary);$/;"	v
value	common.php	/^                        $value = str_replace( ' ', '%20', $url );$/;"	v
value	common.php	/^                    $value = "";$/;"	v
value	common.php	/^                    $value = 0;$/;"	v
value	common.php	/^                    $value = GFCommon::format_number($value, rgar($field, "numberFormat"));$/;"	v
value	common.php	/^                    $value = array(array());$/;"	v
value	common.php	/^                    $value = empty($value) ? "" : rgar($field, "label");$/;"	v
value	common.php	/^                    $value = maybe_unserialize($value);$/;"	v
value	common.php	/^                    $value = rgar($value, $input_id);$/;"	v
value	common.php	/^                $value = "{" . esc_html(GFCommon::get_label($field, $field["id"])) . ":" . $field["id"] . "{$tag_args}}";$/;"	v
value	common.php	/^                $value = GFCommon::format_number($value, $field["numberFormat"]);$/;"	v
value	common.php	/^                $value = GFCommon::get_lead_field_display($fields[0], $value);$/;"	v
value	common.php	/^                $value = RGFormsModel::get_input_type($field) == 'checkbox' ? $cat_names : self::implode_non_blank(', ', $cat_names);$/;"	v
value	common.php	/^                $value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	common.php	/^                $value = apply_filters("gform_merge_tag_filter", $value, $input_id, rgar($match,4), $field, $raw_value);$/;"	v
value	common.php	/^                $value = array_values($cat_ids);$/;"	v
value	common.php	/^                $value = empty($value) && !$is_html5 ? "http:\/\/" : $value;$/;"	v
value	common.php	/^                $value = explode(",", $value);$/;"	v
value	common.php	/^                $value = is_wp_error($media_id) ? "" : self::get_post_image_variable($media_id, $size_meta, $align, $is_url);$/;"	v
value	common.php	/^                $value = self::encode_merge_tag($value);$/;"	v
value	common.php	/^                $value = self::format_variable_value($value, $url_encode, $esc_html, $format);$/;"	v
value	common.php	/^                $value = self::get_calculation_value( $input_id, $form, $lead);$/;"	v
value	common.php	/^                $value = self::implode_non_blank(', ', $cat_names);$/;"	v
value	common.php	/^                $value = unserialize($value);$/;"	v
value	common.php	/^            $value = "0" . $value;$/;"	v
value	common.php	/^            $value = "{" . esc_html(GFCommon::get_label($field)) . ":" . $field["id"] . "{$tag_args}}";$/;"	v
value	common.php	/^            $value = $url_encode ? urlencode($value) : $value;$/;"	v
value	common.php	/^            $value = $wpdb->esc_like( $value );$/;"	v
value	common.php	/^            $value = 0;$/;"	v
value	common.php	/^            $value = GFCommon::get_lead_field_display( $field, $value, rgar( $entry, 'currency' ) );$/;"	v
value	common.php	/^            $value = GFFormsModel::get_lead_field_value( $entry, $field );$/;"	v
value	common.php	/^            $value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	common.php	/^            $value = esc_html($value);$/;"	v
value	common.php	/^            $value = explode(',', $value);$/;"	v
value	common.php	/^            $value = like_escape( $value );$/;"	v
value	common.php	/^            $value = nl2br($value);$/;"	v
value	common.php	/^            $value = self::prepare_post_category_value($value, $field);$/;"	v
value	common.php	/^            $value = self::remove_currency_symbol($value);$/;"	v
value	common.php	/^            $value = urlencode($value);$/;"	v
value	common.php	/^            $value = version_compare($wp_version, '3.3', '>=') ? $current_user->get($property) : $user_array[$property];$/;"	v
value	common.php	/^            return $value == true;$/;"	v
value	common.php	/^        $value = GFCache::get( $cache_key );$/;"	v
value	common.php	/^        $value = RGFormsModel::get_lead_field_value($lead, $fields[0]);$/;"	v
value	common.php	/^        $value = apply_filters('gform_other_choice_value', __("Other", "gravityforms"));$/;"	v
value	common.php	/^        $value = false;$/;"	v
value	common.php	/^        $value = preg_replace('\/[^,.\\d]\/', "", $value);$/;"	v
value	common.php	/^        $value = str_replace($currency["symbol_left"], "", $value);$/;"	v
value	common.php	/^        $value = str_replace($currency["symbol_right"], "", $value);$/;"	v
value	common.php	/^    public static function get_field_input($field, $value="", $lead_id=0, $form_id=0){$/;"	v
value	common.php	/^    public static function get_radio_choices($field, $value="", $disabled_text){$/;"	v
value	common.php	/^    public static function get_select_choices($field, $value=""){$/;"	v
value	entry_detail.php	/^                                $value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	entry_detail.php	/^                            $value = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	entry_list.php	/^                                                    $value = "<i class='fa fa-check gf_valid'><\/i>";$/;"	v
value	entry_list.php	/^                                                    $value = $uploaded_files_arr[0];$/;"	v
value	entry_list.php	/^                                                    $value = $userdata->user_login;$/;"	v
value	entry_list.php	/^                                                    $value = GFCommon::prepare_post_category_value($value, $field, 'entry_list');$/;"	v
value	entry_list.php	/^                                                    $value = empty($uploaded_files_arr) ? "" : sprintf(__("%d files", "gravityforms"), count($uploaded_files_arr));$/;"	v
value	entry_list.php	/^                                                $value = "";$/;"	v
value	entry_list.php	/^                                                $value = "<a href='" . esc_attr($url) . "' target='_blank' title='" . __("Click to view", "gravityforms") . "'><img src='$thumb'\/><\/a>";$/;"	v
value	entry_list.php	/^                                                $value = "<a href='$file_path' target='_blank' title='" . __("Click to view", "gravityforms") . "'><img src='$thumb'\/><\/a>";$/;"	v
value	entry_list.php	/^                                                $value = GFCommon::implode_non_blank(", ", $items);$/;"	v
value	entry_list.php	/^                                            $value = "";$/;"	v
value	entry_list.php	/^                                            $value = "<a href='" . esc_attr($lead["source_url"]) . "' target='_blank' alt='" . esc_attr($lead["source_url"]) ."' title='" . esc_attr($lead["source_url"]) . "'>...\/" . esc_attr(GFCommon::truncate_url($lead["source_url"])) . "<\/a>";$/;"	v
value	entry_list.php	/^                                            $value = GFCommon::date_display($value, rgar($field,"dateFormat"));$/;"	v
value	entry_list.php	/^                                            $value = GFCommon::format_date($value, false);$/;"	v
value	entry_list.php	/^                                            $value = GFCommon::format_number($value, rgar($field, "numberFormat"));$/;"	v
value	entry_list.php	/^                                            $value = GFCommon::selection_display($value, $field, $lead["currency"]);$/;"	v
value	entry_list.php	/^                                            $value = GFCommon::to_money($value, $lead["currency"]);$/;"	v
value	entry_list.php	/^                                            $value = esc_html($value);$/;"	v
value	entry_list.php	/^                                            $value = implode(', ', explode(',', $value));$/;"	v
value	entry_list.php	/^                                        $value = GFCommon::prepare_post_category_value($value, $field, 'entry_list');$/;"	v
value	entry_list.php	/^                                    $value = apply_filters("gform_entries_field_value", $value, $form_id, $field_id, $lead);$/;"	v
value	entry_list.php	/^                                    $value = apply_filters("gform_get_field_value", $value, $lead, $field);$/;"	v
value	entry_list.php	/^                                    $value = rgar($lead, $field_id);$/;"	v
value	export.php	/^                                    $value = "";$/;"	v
value	export.php	/^                                $value = !empty($value) ? implode(" , ", json_decode($value, true)) : "";$/;"	v
value	export.php	/^                                $value = GFFormsModel::is_checkbox_checked($field_id, $headers[$field_id], $lead, $form);$/;"	v
value	export.php	/^                            $value = !empty($long_text) ? $long_text : rgar($lead,$field_id);$/;"	v
value	export.php	/^                            $value = apply_filters("gform_export_field_value", $value, $form_id, $field_id, $lead);$/;"	v
value	export.php	/^                            $value = date_i18n("Y-m-d H:i:s", $lead_local_time, true);$/;"	v
value	export.php	/^                            $value = implode("|", $value);$/;"	v
value	export.php	/^                        $value = maybe_unserialize($value);$/;"	v
value	export.php	/^                $value = utf8_encode( $xml );$/;"	v
value	export.php	/^            $value = str_replace('"', '""', GFCommon::get_label($field, $field_id)) ;$/;"	v
value	form_detail.php	/^                                        foreach($post_stati as $value => $label) { ?>$/;"	v
value	form_display.php	/^                                $value = "";$/;"	v
value	form_display.php	/^                                $value = array();$/;"	v
value	form_display.php	/^                                $value = null;$/;"	v
value	form_display.php	/^                                $value = rgpost("input_{$field['id']}_other");$/;"	v
value	form_display.php	/^                            $value = GFCommon::maybe_add_leading_zero($value);$/;"	v
value	form_display.php	/^                            if($field["isRequired"] && rgar($field, 'enableOtherChoice') && $value == GFCommon::get_other_choice_value()) {$/;"	v
value	form_display.php	/^                            if(empty($value) || $value == "http:\/\/"){$/;"	v
value	form_display.php	/^                            if(rgar($field, 'enableOtherChoice') && $value == 'gf_other_choice')$/;"	v
value	form_display.php	/^                $value = GFCommon::replace_variables_prepopulate(rgget("defaultValue", $field));$/;"	v
value	form_display.php	/^                $value = RGFormsModel::get_field_value($field, $field_values, false);$/;"	v
value	form_display.php	/^                $value = rgpost("input_" . $field["id"]);$/;"	v
value	form_display.php	/^                $value = rgpost("input_" . str_replace('.', '_', $input["id"]));$/;"	v
value	form_display.php	/^                $value = self::default_if_empty($field, $value);$/;"	v
value	form_display.php	/^            $value = RGFormsModel::get_field_value($field);$/;"	v
value	form_display.php	/^            $value = array($field["id"] => $value);$/;"	v
value	form_display.php	/^            $value = rgar($field, "defaultValue");$/;"	v
value	form_display.php	/^            $value = rgget("defaultValue", $field);$/;"	v
value	form_display.php	/^            $value = rgpost("input_" . $field["id"]);$/;"	v
value	form_display.php	/^        $value = self::default_if_empty($field, $value);$/;"	v
value	form_display.php	/^    public static function get_field($field, $value="", $force_frontend_label = false, $form=null, $field_values=null){$/;"	v
value	form_display.php	/^    public static function get_field_content($field, $value="", $force_frontend_label = false, $form_id=0){$/;"	v
value	form_settings.php	/^        foreach($alignment_options as $value => $label) {$/;"	v
value	form_settings.php	/^        foreach($description_options as $value => $label) {$/;"	v
value	form_settings.php	/^        foreach($limit_periods as $value => $label) {$/;"	v
value	forms_model.php	/^					$value = "0";$/;"	v
value	forms_model.php	/^					$value = self::get_input_value($field, "input_" . $field["id"] . "_other", rgar($field, "inputName"), $field_values, $get_from_post);$/;"	v
value	forms_model.php	/^					$value = self::sanitize_entry_value( $field, $value, $input_type, $form_id );$/;"	v
value	forms_model.php	/^				$value = self::sanitize_entry_value( $field, $value, $input_type, $form_id );$/;"	v
value	forms_model.php	/^				$value = self::sanitize_entry_value( $field, $value, $input_type, $form_id);$/;"	v
value	forms_model.php	/^			$value = self::strip_script_tag( $value );$/;"	v
value	forms_model.php	/^			$value = strip_tags( $value, $allowable_tags );$/;"	v
value	forms_model.php	/^		$value = self::maybe_trim_input($value, $form["id"], $field);$/;"	v
value	forms_model.php	/^            	$value = self::get_input_value($field, "input_" . $field["id"], rgar($field, "inputName"), $field_values, $get_from_post);$/;"	v
value	forms_model.php	/^                            $value = array_merge($value, $uploaded_files);$/;"	v
value	forms_model.php	/^                            $value = json_decode($value, true);$/;"	v
value	forms_model.php	/^                            $value = json_encode($uploaded_files);$/;"	v
value	forms_model.php	/^                            $value = json_encode($value);$/;"	v
value	forms_model.php	/^                        $value = "";$/;"	v
value	forms_model.php	/^                        $value = $card_type ? $card_type['name'] : '';$/;"	v
value	forms_model.php	/^                        $value = GFCommon::date_display($value, rgar($custom_field, "dateFormat"));$/;"	v
value	forms_model.php	/^                        $value = GFCommon::decrypt( $value );$/;"	v
value	forms_model.php	/^                        $value = explode(",", $value);$/;"	v
value	forms_model.php	/^                        $value = json_decode($value, true);$/;"	v
value	forms_model.php	/^                        $value = maybe_unserialize($value);$/;"	v
value	forms_model.php	/^                    $value = "";$/;"	v
value	forms_model.php	/^                    $value = $currency->to_money(GFCommon::calculate($field, $form, $lead));$/;"	v
value	forms_model.php	/^                    $value = $currency->to_number( $value );$/;"	v
value	forms_model.php	/^                    $value = GFCommon::clean_number($value, "decimal_comma");$/;"	v
value	forms_model.php	/^                    $value = GFCommon::clean_number($value, "decimal_dot");$/;"	v
value	forms_model.php	/^                    $value = GFCommon::encrypt( $value );$/;"	v
value	forms_model.php	/^                    $value = GFCommon::replace_variables($value, $form, $lead, false, false, false);$/;"	v
value	forms_model.php	/^                    $value = GFCommon::replace_variables_post_image($custom_field["customFieldTemplate"], $post_images, $lead);$/;"	v
value	forms_model.php	/^                    $value = array();$/;"	v
value	forms_model.php	/^                    $value = do_shortcode($value);$/;"	v
value	forms_model.php	/^                    $value = json_decode($value);$/;"	v
value	forms_model.php	/^                    $value = rgar( $lead, (string) $field['id'] );$/;"	v
value	forms_model.php	/^                    $value = rgpost( "input_{$field_id_token}_4" );$/;"	v
value	forms_model.php	/^                    $value = rgpost("input_{$field['id']}_other");$/;"	v
value	forms_model.php	/^                    $value = self::create_list_array($field, $value);$/;"	v
value	forms_model.php	/^                    $value = self::get_fileupload_value($form_id, $input_name);$/;"	v
value	forms_model.php	/^                    $value = self::get_input_value($field, "input_" . $field["id"], rgar($field, "inputName"), $field_values, $get_from_post);$/;"	v
value	forms_model.php	/^                    $value = self::get_lead_field_value($lead, $field);$/;"	v
value	forms_model.php	/^                    $value = serialize($value);$/;"	v
value	forms_model.php	/^                    $value = sprintf("%02d:%02d%s", $hour, $minute, $ampm);$/;"	v
value	forms_model.php	/^                    $value = sprintf("(%s)%s-%s", $matches[1], $matches[2], $matches[3]);$/;"	v
value	forms_model.php	/^                    $value = str_pad($value, $card_number_length, "X", STR_PAD_LEFT);$/;"	v
value	forms_model.php	/^                    $value = str_replace(" ", "", $value);$/;"	v
value	forms_model.php	/^                    $value = substr($value, -4, 4);$/;"	v
value	forms_model.php	/^                $value = !empty($url) ? $url . "|:|" . $image_title . "|:|" . $image_caption . "|:|" . $image_description : "";$/;"	v
value	forms_model.php	/^                $value = "";$/;"	v
value	forms_model.php	/^                $value = $ary_rows;$/;"	v
value	forms_model.php	/^                $value = $file_path['url'];$/;"	v
value	forms_model.php	/^                $value = (string) $rule["value"];$/;"	v
value	forms_model.php	/^                $value = GFCommon::clean_number($value, rgar($field, 'numberFormat'));$/;"	v
value	forms_model.php	/^                $value = GFCommon::get_order_total($form, $lead);$/;"	v
value	forms_model.php	/^                $value = GFCommon::has_field_calculation($field) ? GFCommon::round_number(GFCommon::calculate($field, $form, $lead), rgar($field, "calculationRounding")) : GFCommon::clean_number($value, rgar($field, "numberFormat"));$/;"	v
value	forms_model.php	/^                $value = GFCommon::maybe_add_leading_zero($value);$/;"	v
value	forms_model.php	/^                $value = call_user_func_array($callback, array($key, $lead, $form));$/;"	v
value	forms_model.php	/^                $value = empty($value) ? "" : is_array($value) ? implode(",", $value) : $value;$/;"	v
value	forms_model.php	/^                $value = explode(',', $value);$/;"	v
value	forms_model.php	/^                $value = json_encode($value);$/;"	v
value	forms_model.php	/^                $value = self::create_list_array($field, $value);$/;"	v
value	forms_model.php	/^                $value = self::get_input_value($field, "input_" . $field["id"], rgar($field, "inputName"), $field_values, $get_from_post);$/;"	v
value	forms_model.php	/^                $value = self::prepare_date( rgar( $field, 'dateFormat' ), $value);$/;"	v
value	forms_model.php	/^                $value = self::prepare_date(rgar($field, "dateFormat"), $value);$/;"	v
value	forms_model.php	/^                $value = sprintf("%02d:%02d %s", $value[0], $value[1], $value[2]);$/;"	v
value	forms_model.php	/^                $value = str_replace(array(")", "(", "-", " "), array("", "", "", ""), $value);$/;"	v
value	forms_model.php	/^                $value = trim($value);$/;"	v
value	forms_model.php	/^                if (GFCommon::has_field_calculation($field) && $value == 0){$/;"	v
value	forms_model.php	/^                if(rgar($field, 'enableOtherChoice') && $value == 'gf_other_choice'){$/;"	v
value	forms_model.php	/^            $value = !empty($long_text) ? $long_text : $val;$/;"	v
value	forms_model.php	/^            $value = !empty($url) ? $url . "|:|" . $image_title . "|:|" . $image_caption . "|:|" . $image_description : "";$/;"	v
value	forms_model.php	/^            $value = "";$/;"	v
value	forms_model.php	/^            $value = apply_filters("gform_save_field_value", $value, $lead, $field, $form, $input_id );$/;"	v
value	forms_model.php	/^            $value = array();$/;"	v
value	forms_model.php	/^            $value = implode(",", $value);$/;"	v
value	forms_model.php	/^            $value = implode(',', $full_values);$/;"	v
value	forms_model.php	/^            $value = is_array($value) ? array_map('trim', $value) : trim($value);$/;"	v
value	forms_model.php	/^            $value = isset($lead[$field["id"]]) ? $lead[$field["id"]] : "";$/;"	v
value	forms_model.php	/^            $value = rgar($filter, "value");$/;"	v
value	forms_model.php	/^            $value = rgget($name, $field_values);$/;"	v
value	forms_model.php	/^            $value = rgpost($standard_name);$/;"	v
value	forms_model.php	/^            $value = self::get_default_value($field, $input_id);$/;"	v
value	forms_model.php	/^            $value = self::get_post_field_value($field, $lead);$/;"	v
value	forms_model.php	/^            $value = self::maybe_trim_input($value, $form_id, $field);$/;"	v
value	forms_model.php	/^            $value = self::prepare_value($form, $field, $value, $input_name, rgar($lead, 'id'), $lead);$/;"	v
value	forms_model.php	/^            $value = sprintf("%s-%02d-%02d", $date_info["year"], $date_info["month"], $date_info["day"]);$/;"	v
value	forms_model.php	/^        $value = GFFormsModel::maybe_trim_input($value, rgar($field, "formId"), $field);$/;"	v
value	forms_model.php	/^        $value = apply_filters("gform_get_field_value", $value, $lead, $field);$/;"	v
value	forms_model.php	/^        $value = array();$/;"	v
value	forms_model.php	/^        $value = rgpost($input_name);$/;"	v
value	forms_model.php	/^        $value = self::prepare_value($form, $field, $value, $input_name, rgar($lead, "id"));$/;"	v
value	forms_model.php	/^        $value = stripslashes(rgget($name));$/;"	v
value	forms_model.php	/^        if( $lead != null && isset( $lead[ $input_id ] ) && $value === rgget( (string) $input_id, $lead ) ){$/;"	v
value	forms_model.php	/^    $value = isset($results[0]) ? $results[0]->meta_value : null;$/;"	v
value	includes/addon/class-gf-addon.php	/^				$value             = $this->get_setting( $choice['name'], rgar( $choice, 'default_value' ) );$/;"	v
value	includes/addon/class-gf-addon.php	/^                $value = $label;$/;"	v
value	includes/addon/class-gf-addon.php	/^            $value = $this->get_full_address($entry, $field_id);$/;"	v
value	includes/addon/class-gf-addon.php	/^            $value = $this->get_full_name($entry, $field_id);$/;"	v
value	includes/addon/class-gf-addon.php	/^            $value = json_encode($value);$/;"	v
value	includes/addon/class-gf-addon.php	/^            $value = rgar($entry, $field_id);$/;"	v
value	includes/addon/class-gf-addon.php	/^        $value         = $this->get_setting( $field['name'], rgar( $field, 'default_value' ) );$/;"	v
value	includes/addon/class-gf-addon.php	/^        $value = $this->get_setting("{$setting_name_root}_value");$/;"	v
value	includes/addon/class-gf-addon.php	/^        $value = $this->get_setting($field["name"], $default_value);$/;"	v
value	includes/addon/class-gf-addon.php	/^        foreach( $key_value_pairs as $value => $label ) {$/;"	v
value	includes/addon/class-gf-feed-addon.php	/^            $value = $this->add_action_links($item, $column, $value);$/;"	v
value	includes/addon/class-gf-feed-addon.php	/^            $value = call_user_func($this->_column_value_callback, $item, $column);$/;"	v
value	includes/addon/class-gf-payment-addon.php	/^		if( empty( $value ) || $value == 'null' ){$/;"	v
value	includes/addon/class-gf-results.php	/^                        $value      = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	includes/addon/class-gf-results.php	/^                    $value   = RGFormsModel::get_lead_field_value($lead, $field);$/;"	v
value	includes/api.php	/^            $value = sprintf("'%s'", $value);$/;"	v
value	includes/api.php	/^        $value = esc_sql($value);$/;"	v
value	includes/webapi/webapi.php	/^                $value                = RGFormsModel::get_lead_field_value($entry, $field);$/;"	v
value	xml.php	/^                    $value = $this->xml_attribute($obj);$/;"	v
value_exists	common.php	/^                    $value_exists = RGFormsModel::choices_value_match($field, $field["choices"], $value);$/;"	v
value_field	includes/addon/class-gf-addon.php	/^        $value_field = $field;$/;"	v
value_input	includes/addon/class-gf-addon.php	/^		$value_input = '_gaddon_setting_' . esc_attr( $setting_name_root ) . '_value';$/;"	v
value_json	forms_model.php	/^                    $value_json = self::get_lead_field_value($lead, $field);$/;"	v
values	forms_model.php	/^            $values = explode(',', $value);$/;"	v
values	includes/addon/class-gf-results.php	/^                            $values = explode(",", $value);$/;"	v
values	xml.php	/^        $values = array();$/;"	v
variable	includes/addon/class-gf-addon.php	/^    * Sets the current saved settings to a class variable so that it can be accessed by lower level functions in order to initialize inputs with the appropriate values$/;"	c
variable	includes/addon/class-gf-addon.php	/^    * Sets the previous settings to a class variable so that it can be accessed by lower level functions providing support for$/;"	c
vars	includes/addon/class-gf-results.php	/^            $vars = array($/;"	v
vars	includes/locking/class-gf-locking.php	/^        $vars         = array($/;"	v
vars	includes/locking/class-gf-locking.php	/^        $vars = array($/;"	v
ver	includes/phpqrcode/phpqrcode.php	/^                $ver = QRspec::getMinimumVersion((int)(($bits + 7) \/ 8), $this->level);$/;"	v
ver	includes/phpqrcode/phpqrcode.php	/^            $ver = $this->estimateVersion();$/;"	v
version	common.php	/^        $version = rgar($version_info, "version");$/;"	v
version	common.php	/^    public static $version = null;$/;"	v
version	gravityforms.php	/^	public static $version = '1.8.19.15';$/;"	v
version	gravityforms.php	/^        $version    = get_bloginfo('version');$/;"	v
version	gravityforms.php	/^        $version = GFForms::$version;$/;"	v
version	includes/addon/class-gf-addon.php	/^                $version =  isset($style["version"]) ? $style["version"] : false;$/;"	v
version	includes/addon/class-gf-addon.php	/^            $version =  isset($script["version"]) ? $script["version"] : false;$/;"	v
version	includes/addon/class-gf-addon.php	/^            $version =  isset($style["version"]) ? $style["version"] : false;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^                $version = 1;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^                $version = QRspec::getMinimumVersion((int)(($bits + 7) \/ 8), $this->level);$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^            $this->version = $input->getVersion();$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^            $this->version = $version;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^            $version = $raw->version;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^            $version = 0;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^        private $version;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^        public $version = 0;$/;"	v
version	includes/phpqrcode/phpqrcode.php	/^        public $version;$/;"	v
version	xml.php	/^        $version = $path == $parent_node_name && isset($this->options["version"]) ? " version=\\"" . $this->options["version"] . "\\"" : "";$/;"	v
versionPattern	includes/phpqrcode/phpqrcode.php	/^        public static $versionPattern = array($/;"	v
version_info	common.php	/^        $version_info = GFCommon::get_version_info($use_cache);$/;"	v
version_info	common.php	/^        $version_info = json_decode($raw_response['body'], true);$/;"	v
version_info	common.php	/^        $version_info = self::get_version_info($cache);$/;"	v
version_info	common.php	/^        $version_info = self::get_version_info();$/;"	v
version_info	gravityforms.php	/^        $version_info = GFCommon::get_version_info();$/;"	v
version_info	includes/addon/class-gf-auto-upgrade.php	/^            $version_info = $this->get_version_info($this->_slug);$/;"	v
version_info	includes/addon/class-gf-auto-upgrade.php	/^        $version_info = $this->get_version_info($this->_slug);$/;"	v
version_info	includes/addon/class-gf-auto-upgrade.php	/^        $version_info = GFCommon::get_version_info($use_cache);$/;"	v
version_info	settings.php	/^            $version_info = GFCommon::get_version_info();$/;"	v
version_info	settings.php	/^            $version_info = GFCommon::get_version_info(false);$/;"	v
version_info	update.php	/^            $version_info = GFCommon::get_version_info(false);$/;"	v
view	export.php	/^        $view = rgget('view') ? rgget('view') : 'export_entry';$/;"	v
view	gravityforms.php	/^        $view = RGForms::get("view");$/;"	v
view	gravityforms.php	/^        $view = rgempty("view", $_GET) ? "default" : rgget("view");$/;"	v
view	gravityforms.php	/^        $view = rgget("view");$/;"	v
view	includes/addon/class-gf-addon.php	/^        $view    = rgget("view");$/;"	v
view	includes/addon/class-gf-addon.php	/^        if (rgget("page") == "gf_edit_forms" && $view == "settings" && $subview == $this->_slug && $this->current_user_can_any($this->_capabilities_form_settings)) {$/;"	v
view	includes/locking/locking.php	/^            $view = "settings";$/;"	v
view	includes/locking/locking.php	/^        $view = rgget("subview");$/;"	v
view_count	forms_model.php	/^        $view_count = $wpdb->get_results($sql);$/;"	v
view_counter_disabled	form_display.php	/^	    $view_counter_disabled = apply_filters( "gform_disable_view_counter_{$form_id}", $view_counter_disabled );$/;"	v
view_counter_disabled	form_display.php	/^	    $view_counter_disabled = apply_filters( 'gform_disable_view_counter', false );$/;"	v
view_filter	includes/addon/class-gf-payment-addon.php	/^        $view_filter = array("view" => array("label" => __("View", "gravityforms"), "tooltip" => __("<h6>View<\/h6>Select how you would like the sales data to be displayed.", "gravityforms"), "markup" => $view_markup));$/;"	v
view_markup	includes/addon/class-gf-payment-addon.php	/^        $view_markup = "<div>$/;"	v
view_table_name	forms_model.php	/^        $view_table_name = self::get_form_view_table_name();$/;"	v
vinf	includes/phpqrcode/phpqrcode.php	/^                $vinf = self::getVersionPattern($version);$/;"	v
visiblePreviewFields	entry_detail.php	/^                var $visiblePreviewFields = jQuery(previewFileSelector);$/;"	v
void_authorization	includes/addon/class-gf-payment-addon.php	/^    public function void_authorization( $entry, $action ){$/;"	f
w	includes/phpqrcode/phpqrcode.php	/^                $w = $this->width;$/;"	v
w	includes/phpqrcode/phpqrcode.php	/^                $w = (int)(($width - self::$alignmentPattern[$version][0]) \/ $d + 2);$/;"	v
w	includes/phpqrcode/phpqrcode.php	/^                $w = 2;$/;"	v
w	includes/phpqrcode/phpqrcode.php	/^            $w = (int)$size \/ 3;$/;"	v
w	includes/phpqrcode/phpqrcode.php	/^            $w = (int)($size \/ 2);$/;"	v
w	includes/phpqrcode/phpqrcode.php	/^            $w = strlen($frame[0]);$/;"	v
w22	includes/phpqrcode/phpqrcode.php	/^                        $w22 = ord($frameY[$x]) | ord($frameY[$x-1]) | ord($frameYM[$x]) | ord($frameYM[$x-1]);$/;"	v
walker	common.php	/^        $walker = new GFCategoryWalker();$/;"	v
website	js/forms.js	/^    "website" :         ".conditional_logic_field_setting, .prepopulate_field_setting, .error_message_setting, .label_setting, .admin_label_setting, .size_setting, .rules_setting, .visibility_setting, .duplicate_setting, .default_value_setting, .description_setting, .css_class_setting",$/;"	p	class:fieldSettings
when	form_display.php	/^            \/\/add on surrounding wrapper class when confirmation page$/;"	c
when	form_display.php	/^        \/\/close div for surrounding wrapper class when confirmation page$/;"	c
where	forms_model.php	/^            $where = "WHERE " . $where;$/;"	v
where	forms_model.php	/^        $where = array();$/;"	v
where	forms_model.php	/^        $where = empty($where_arr) ? "" : "(" . join( " $search_operator ", $where_arr) . ")" ;$/;"	v
where	forms_model.php	/^        $where = join(" AND ", $where_parts);$/;"	v
where	forms_model.php	/^        $where = self::get_leads_where_sql(compact('form_id', 'search', 'status', 'star', 'read', 'start_date', 'end_date', 'payment_status'));$/;"	v
where	forms_model.php	/^        $where = self::get_leads_where_sql(compact('form_id', 'search', 'status', 'star', 'read', 'start_date', 'end_date', 'payment_status', 'is_default'));$/;"	v
where	forms_model.php	/^        $where = self::get_search_where($form_id, $search_criteria);$/;"	v
where	includes/addon/class-gf-feed-addon.php	/^        $where = is_numeric($form_id) ? array("addon_slug" => $this->_slug, "form_id" => $form_id) : array("addon_slug" => $this->_slug);$/;"	v
where	includes/api.php	/^        $where = join(" AND ", $where_arr);$/;"	v
where_and_clause	forms_model.php	/^            $where_and_clause = "(" . $where_and_clause . ")";$/;"	v
where_and_clause	forms_model.php	/^        $where_and_clause = join(" AND ", $where_and_clause_arr);$/;"	v
where_and_clause_arr	forms_model.php	/^        $where_and_clause_arr = array();$/;"	v
where_arr	forms_model.php	/^        $where_arr = array();$/;"	v
where_arr	includes/api.php	/^        $where_arr   = array();$/;"	v
where_array	forms_model.php	/^        $where_array = array();$/;"	v
where_clause	forms_model.php	/^        $where_clause = "WHERE " . join(" AND ", $where_arr);$/;"	v
where_parts	forms_model.php	/^        $where_parts = array();$/;"	v
which	common.php	/^        $categories = $walker->walk($terms_copy, 0, array(0)); \/\/ 3rd parameter prevents notices triggered by $walker::display_element() function which checks $args[0]$/;"	f
widget	widget.php	/^    function widget( $args, $instance ) {$/;"	f
width	includes/phpqrcode/phpqrcode.php	/^				$width = count($frame);$/;"	v
width	includes/phpqrcode/phpqrcode.php	/^            $this->width = $width;$/;"	v
width	includes/phpqrcode/phpqrcode.php	/^            $width = QRspec::getWidth($version);$/;"	v
width	includes/phpqrcode/phpqrcode.php	/^            $width = count($frame);$/;"	v
width	includes/phpqrcode/phpqrcode.php	/^            $width = self::$capacity[$version][QRCAP_WIDTH];$/;"	v
width	includes/phpqrcode/phpqrcode.php	/^        public $width;$/;"	v
width	js/jquery.textareaCounter.plugin.js	/^			'width' : container.width()$/;"	p	class:fn.textareaCount.charLeftCss
will	includes/webapi/webapi.php	/^        \/\/ While the cache is being built by the wp_cron task this function will return the expired cache results if available or the latest step in the cache build.$/;"	f
window.onbeforeunload	form_settings.php	/^            window.onbeforeunload = function(){$/;"	j
window.onbeforeunload	notification.php	/^            window.onbeforeunload = function(){$/;"	j
window.onscroll	js/floatmenu_init.js	/^window.onscroll = function() {   $/;"	f
window_title	form_detail.php	/^                                    <?php $window_title = __("Bulk Add \/ Predefined Choices" , "gravityforms"); ?>$/;"	v
with	includes/addon/class-gf-addon.php	/^     * To specify a custom validation, use the 'validation_callback' field meta property and implement the validation function with the custom logic.$/;"	f
with	includes/locking/class-gf-locking.php	/^     * Override this method to provide the class with the correct object id.$/;"	c
word	common.php	/^        $word = $captcha->generate_random_word();$/;"	v
word	includes/phpqrcode/phpqrcode.php	/^                    $word = (ord($c) << 8) | ord($d);$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^                $words  = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level];$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^                $words = (int)($this->size \/ 2);$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^                $words = (int)($this->size \/ 3);$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^                $words = QRspec::maximumWords($this->mode, $version);$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^            $words = (1 << $bits) - 1;$/;"	v
words	includes/phpqrcode/phpqrcode.php	/^            $words = (int)(($bits + 7) \/ 8);$/;"	v
words	js/jquery.textareaCounter.plugin.js	/^				words: numWords$/;"	p	class:countByCharacters.getInfo.info
wp_email	common.php	/^        $wp_email = get_bloginfo("admin_email");$/;"	v
wp_required_scripts	gravityforms.php	/^        $wp_required_scripts = array("admin-bar", "common", "jquery-color", "utils");$/;"	v
wp_required_styles	gravityforms.php	/^        $wp_required_styles = array("admin-bar", "colors", "ie", "wp-admin", "editor-style");$/;"	v
wp_root_path	preview.php	/^        $wp_root_path = str_repeat( '..\/', $i );$/;"	v
wp_root_path	print-entry.php	/^        $wp_root_path = str_repeat( '..\/', $i );$/;"	v
wp_root_path	select_columns.php	/^        $wp_root_path = str_repeat( '..\/', $i );$/;"	v
wrapper_css_class	form_display.php	/^            $wrapper_css_class = GFCommon::get_browser_class() . " gform_wrapper";$/;"	v
writeFormatInformation	includes/phpqrcode/phpqrcode.php	/^        public function writeFormatInformation($width, &$frame, $mask, $level)$/;"	f
x	includes/phpqrcode/phpqrcode.php	/^                $this->x = $x;$/;"	v
x	includes/phpqrcode/phpqrcode.php	/^                $x = $this->x;$/;"	v
x	includes/phpqrcode/phpqrcode.php	/^                $x = ($x >> $this->mm) + ($x & $this->nn);$/;"	v
x	includes/phpqrcode/phpqrcode.php	/^                $x = self::$alignmentPattern[$version][0];$/;"	v
x	includes/phpqrcode/phpqrcode.php	/^            $this->x = $width - 1;$/;"	v
x	includes/phpqrcode/phpqrcode.php	/^        public $x;$/;"	v
xStart	includes/phpqrcode/phpqrcode.php	/^            $xStart = $ox-2;$/;"	v
xb	includes/addon/class-gf-results.php	/^                    $xb = 255;$/;"	v
xg	includes/addon/class-gf-results.php	/^                    $xg = 255;$/;"	v
xml	export.php	/^		$xml = new RGXML($options);$/;"	v
xml	export.php	/^            $xml = $serializer->serialize("forms", $forms);$/;"	v
xml	xml.php	/^            $xml = "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>";$/;"	v
xml	xml.php	/^        $xml = "";$/;"	v
xml_attribute	xml.php	/^    private function xml_attribute($value){$/;"	f
xml_cdata	xml.php	/^    private function xml_cdata($value){$/;"	f
xml_content	xml.php	/^    private function xml_content($value){$/;"	f
xml_is_cdata	xml.php	/^    private function xml_is_cdata($node_name){$/;"	f
xml_parser	xml.php	/^        $xml_parser = xml_parser_create();$/;"	v
xml_string	xml.php	/^        $xml_string = trim($xml_string);$/;"	v
xml_value	xml.php	/^    private function xml_value($node_name, $value){$/;"	f
xmlstr	export.php	/^        $xmlstr = file_get_contents($filepath);$/;"	v
xr	includes/addon/class-gf-results.php	/^                    $xr = 255;$/;"	v
y	forms_model.php	/^        $y = substr( $time, 0, 4 );$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                            $y = 9;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                        $y = $w - 1;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                        $y = 0;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                $this->y = $y;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                $y = $this->y;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^                $y = self::$alignmentPattern[$version][0];$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^            $this->y = $width - 1;$/;"	v
y	includes/phpqrcode/phpqrcode.php	/^        public $y;$/;"	v
yOffset	includes/phpqrcode/phpqrcode.php	/^            $yOffset = $width - 7;$/;"	v
yOffset	includes/phpqrcode/phpqrcode.php	/^            $yOffset = $width - 8;$/;"	v
yStart	includes/phpqrcode/phpqrcode.php	/^            $yStart = $oy-2;$/;"	v
yb	includes/addon/class-gf-results.php	/^                    $yb = 100;$/;"	v
year	common.php	/^        $year = intval(date("Y"));$/;"	v
year_dropdown	common.php	/^                    $year_dropdown = "<div class='gfield_date_dropdown_year ginput_date_dropdown' id='gfield_dropdown_date_year' style='display:$dropdown_display'>" . self::get_year_dropdown("","","","","disabled='disabled'") . "<\/div>";$/;"	v
year_field	common.php	/^                    $year_field = "<div class='gfield_date_year ginput_date' id='gfield_input_date_year' style='display:$datefield_display'><input type='text' name='ginput_year' disabled='disabled'\/><label>" . __("YYYY", "gravityforms") . "<\/label><\/div>";$/;"	v
year_max	common.php	/^        $year_max = apply_filters("gform_date_max_year", date("Y") + 1);$/;"	v
year_min	common.php	/^        $year_min = apply_filters("gform_date_min_year", "1920");$/;"	v
yesterday	includes/addon/class-gf-payment-addon.php	/^        $yesterday = gmdate("Y-m-d", strtotime("-1 day", $local_time));$/;"	v
yg	includes/addon/class-gf-results.php	/^                    $yg = 250;$/;"	v
yr	includes/addon/class-gf-results.php	/^                    $yr = 100;$/;"	v
zip	common.php	/^                    $zip = sprintf("<span class='ginput_{$zip_location}$class_suffix' id='" . $field_id . "_5_container'><input type='text' name='input_%d.5' id='%s_5' value='%s' $tabindex %s\/><label for='%s_5' id='" . $field_id . "_5_label'>" . apply_filters("gform_address_zip_{$form_id}", apply_filters("gform_address_zip", $zip_label, $form_id), $form_id) . "<\/label><\/span>", $id, $field_id, $zip_value, $disabled_text, $field_id);$/;"	v
zip	form_display.php	/^                                $zip = $_POST["input_" . $field["id"] . "_5"];$/;"	v
zip_label	common.php	/^                $zip_label = empty($address_type["zip_label"]) ? __("Zip Code", "gravityforms") : $address_type["zip_label"];$/;"	v
zip_line	common.php	/^                        $zip_line = trim($zip_line);$/;"	v
zip_line	common.php	/^                        $zip_line = trim($zip_value . " " . $city_value);$/;"	v
zip_location	common.php	/^                $zip_location = $address_display_format != "zip_before_city" && rgar($field,"hideState") ? "right" : "left";$/;"	v
zip_value	common.php	/^                    $zip_value = esc_attr(rgget($field["id"] . ".5",$value));$/;"	v
zip_value	common.php	/^                    $zip_value = trim(rgget($field["id"] . ".5", $value));$/;"	v
zip_value	common.php	/^                $zip_value ="";$/;"	v
zip_value	includes/addon/class-gf-addon.php	/^        $zip_value = trim($entry[$field_id . ".5"]);$/;"	v
